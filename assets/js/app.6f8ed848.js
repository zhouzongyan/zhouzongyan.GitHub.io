(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function n(n){for(var o,s,i=n[0],c=n[1],u=n[2],d=0,p=[];d<i.length;d++)s=i[d],Object.prototype.hasOwnProperty.call(r,s)&&r[s]&&p.push(r[s][0]),r[s]=0;for(o in c)Object.prototype.hasOwnProperty.call(c,o)&&(e[o]=c[o]);for(l&&l(n);p.length;)p.shift()();return a.push.apply(a,u||[]),t()}function t(){for(var e,n=0;n<a.length;n++){for(var t=a[n],o=!0,i=1;i<t.length;i++){var c=t[i];0!==r[c]&&(o=!1)}o&&(a.splice(n--,1),e=s(s.s=t[0]))}return e}var o={},r={1:0},a=[];function s(n){if(o[n])return o[n].exports;var t=o[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,s),t.l=!0,t.exports}s.e=function(e){var n=[],t=r[e];if(0!==t)if(t)n.push(t[2]);else{var o=new Promise((function(n,o){t=r[e]=[n,o]}));n.push(t[2]=o);var a,i=document.createElement("script");i.charset="utf-8",i.timeout=120,s.nc&&i.setAttribute("nonce",s.nc),i.src=function(e){return s.p+"assets/js/"+({}[e]||e)+"."+{2:"83be7545",3:"136b0782",4:"2e56199c",5:"2ab3c7f2",6:"fa34b130",7:"9dab484c",8:"d763ac36",9:"845b950f",10:"5a3204f9",11:"02768c01",12:"2c0a6e69",13:"aab6b678",14:"099be2b5",15:"a608c94d",16:"e2819852",17:"86af6682",18:"c8537385",19:"eab216d3",20:"682aa922",21:"219bb420",22:"84ecdbb0",23:"b55b7082",24:"0828344e",25:"c20d5ec5",26:"06149e04",27:"d221eed5",28:"53082f18",29:"eedb3a2c",30:"43e5e245"}[e]+".js"}(e);var c=new Error;a=function(n){i.onerror=i.onload=null,clearTimeout(u);var t=r[e];if(0!==t){if(t){var o=n&&("load"===n.type?"missing":n.type),a=n&&n.target&&n.target.src;c.message="Loading chunk "+e+" failed.\n("+o+": "+a+")",c.name="ChunkLoadError",c.type=o,c.request=a,t[1](c)}r[e]=void 0}};var u=setTimeout((function(){a({type:"timeout",target:i})}),12e4);i.onerror=i.onload=a,document.head.appendChild(i)}return Promise.all(n)},s.m=e,s.c=o,s.d=function(e,n,t){s.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,n){if(1&n&&(e=s(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(s.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)s.d(t,o,function(n){return e[n]}.bind(null,o));return t},s.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(n,"a",n),n},s.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},s.p="/",s.oe=function(e){throw console.error(e),e};var i=window.webpackJsonp=window.webpackJsonp||[],c=i.push.bind(i);i.push=n,i=i.slice();for(var u=0;u<i.length;u++)n(i[u]);var l=c;a.push([97,0]),t()}([function(e,n,t){"use strict";var o=t(54),r=o.all;e.exports=o.IS_HTMLDDA?function(e){return"function"==typeof e||e===r}:function(e){return"function"==typeof e}},function(e,n,t){"use strict";var o=function(e){return e&&e.Math===Math&&e};e.exports=o("object"==typeof globalThis&&globalThis)||o("object"==typeof window&&window)||o("object"==typeof self&&self)||o("object"==typeof global&&global)||function(){return this}()||this||Function("return this")()},function(e,n,t){"use strict";e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n,t){"use strict";var o=t(27),r=Function.prototype,a=r.call,s=o&&r.bind.bind(a,a);e.exports=o?s:function(e){return function(){return a.apply(e,arguments)}}},function(e,n){var t=Array.isArray;e.exports=t},function(e,n,t){"use strict";var o=t(2);e.exports=!o((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,n,t){var o=t(69),r="object"==typeof self&&self&&self.Object===Object&&self,a=o||r||Function("return this")();e.exports=a},function(e,n,t){"use strict";function o(e,n,t,o,r,a,s,i){var c,u="function"==typeof e?e.options:e;if(n&&(u.render=n,u.staticRenderFns=t,u._compiled=!0),o&&(u.functional=!0),a&&(u._scopeId="data-v-"+a),s?(c=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),r&&r.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(s)},u._ssrRegister=c):r&&(c=i?function(){r.call(this,(u.functional?this.parent:this).$root.$options.shadowRoot)}:r),c)if(u.functional){u._injectStyles=c;var l=u.render;u.render=function(e,n){return c.call(n),l(e,n)}}else{var d=u.beforeCreate;u.beforeCreate=d?[].concat(d,c):[c]}return{exports:e,options:u}}t.d(n,"a",(function(){return o}))},function(e,n,t){"use strict";var o=t(3),r=t(35),a=o({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,n){return a(r(e),n)}},function(e,n,t){"use strict";var o=t(0),r=t(54),a=r.all;e.exports=r.IS_HTMLDDA?function(e){return"object"==typeof e?null!==e:o(e)||e===a}:function(e){return"object"==typeof e?null!==e:o(e)}},function(e,n,t){var o=t(163),r=t(166);e.exports=function(e,n){var t=r(e,n);return o(t)?t:void 0}},function(e,n,t){"use strict";t.d(n,"e",(function(){return o})),t.d(n,"b",(function(){return a})),t.d(n,"j",(function(){return s})),t.d(n,"g",(function(){return c})),t.d(n,"h",(function(){return u})),t.d(n,"i",(function(){return l})),t.d(n,"c",(function(){return d})),t.d(n,"f",(function(){return p})),t.d(n,"l",(function(){return f})),t.d(n,"m",(function(){return h})),t.d(n,"d",(function(){return v})),t.d(n,"k",(function(){return x})),t.d(n,"n",(function(){return g})),t.d(n,"a",(function(){return y}));t(13);const o=/#.*$/,r=/\.(md|html)$/,a=/\/$/,s=/^[a-z]+:/i;function i(e){return decodeURI(e).replace(o,"").replace(r,"")}function c(e){return s.test(e)}function u(e){return/^mailto:/.test(e)}function l(e){return/^tel:/.test(e)}function d(e){if(c(e))return e;if(!e)return"404";const n=e.match(o),t=n?n[0]:"",r=i(e);return a.test(r)?e:r+".html"+t}function p(e,n){const t=e.hash,r=function(e){const n=e&&e.match(o);if(n)return n[0]}(n);if(r&&t!==r)return!1;return i(e.path)===i(n)}function f(e,n,t){if(c(n))return{type:"external",path:n};t&&(n=function(e,n,t){const o=e.charAt(0);if("/"===o)return e;if("?"===o||"#"===o)return n+e;const r=n.split("/");t&&r[r.length-1]||r.pop();const a=e.replace(/^\//,"").split("/");for(let e=0;e<a.length;e++){const n=a[e];".."===n?r.pop():"."!==n&&r.push(n)}""!==r[0]&&r.unshift("");return r.join("/")}(n,t));const o=i(n);for(let n=0;n<e.length;n++)if(i(e[n].regularPath)===o)return Object.assign({},e[n],{type:"page",path:d(e[n].path)});return console.error(`[vuepress] No matching page found for sidebar item "${n}"`),{}}function h(e,n,t,o){const{pages:r,themeConfig:a}=t,s=o&&a.locales&&a.locales[o]||a;if("auto"===(e.frontmatter.sidebar||s.sidebar||a.sidebar))return m(e);const i=s.sidebar||a.sidebar;if(i){const{base:t,config:o}=function(e,n){if(Array.isArray(n))return{base:"/",config:n};for(const o in n)if(0===(t=e,/(\.html|\/)$/.test(t)?t:t+"/").indexOf(encodeURI(o)))return{base:o,config:n[o]};var t;return{}}(n,i);return"auto"===o?m(e):o?o.map(e=>function e(n,t,o,r=1){if("string"==typeof n)return f(t,n,o);if(Array.isArray(n))return Object.assign(f(t,n[0],o),{title:n[1]});{r>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const a=n.children||[];return 0===a.length&&n.path?Object.assign(f(t,n.path,o),{title:n.title}):{type:"group",path:n.path,title:n.title,sidebarDepth:n.sidebarDepth,initialOpenGroupIndex:n.initialOpenGroupIndex,children:a.map(n=>e(n,t,o,r+1)),collapsable:!1!==n.collapsable}}}(e,r,t)):[]}return[]}function m(e){const n=v(e.headers||[]);return[{type:"group",collapsable:!1,title:e.title,path:null,children:n.map(n=>({type:"auto",title:n.title,basePath:e.path,path:e.path+"#"+n.slug,children:n.children||[]}))}]}function v(e){let n;return(e=e.map(e=>Object.assign({},e))).forEach(e=>{2===e.level?n=e:n&&(n.children||(n.children=[])).push(e)}),e.filter(e=>2===e.level)}function x(e){return Object.assign(e,{type:e.items&&e.items.length?"links":"link"})}function g(e){return Object.prototype.toString.call(e).match(/\[object (.*?)\]/)[1].toLowerCase()}function b(e){let n=e.frontmatter.date||e.lastUpdated||new Date,t=new Date(n);return"Invalid Date"==t&&n&&(t=new Date(n.replace(/-/g,"/"))),t.getTime()}function y(e,n){return b(n)-b(e)}},function(e,n){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,n,t){"use strict";var o=t(25),r=t(35),a=t(37),s=t(127),i=t(129);o({target:"Array",proto:!0,arity:1,forced:t(2)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}()},{push:function(e){var n=r(this),t=a(n),o=arguments.length;i(t+o);for(var c=0;c<o;c++)n[t]=arguments[c],t++;return s(n,t),t}})},function(e,n,t){var o=t(16),r=t(148),a=t(149),s=o?o.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":s&&s in Object(e)?r(e):a(e)}},function(e,n,t){"use strict";var o=t(5),r=t(18),a=t(28);e.exports=o?function(e,n,t){return r.f(e,n,a(1,t))}:function(e,n,t){return e[n]=t,e}},function(e,n,t){var o=t(6).Symbol;e.exports=o},function(e,n,t){"use strict";var o=t(3),r=o({}.toString),a=o("".slice);e.exports=function(e){return a(r(e),8,-1)}},function(e,n,t){"use strict";var o=t(5),r=t(63),a=t(106),s=t(36),i=t(53),c=TypeError,u=Object.defineProperty,l=Object.getOwnPropertyDescriptor;n.f=o?a?function(e,n,t){if(s(e),n=i(n),s(t),"function"==typeof e&&"prototype"===n&&"value"in t&&"writable"in t&&!t.writable){var o=l(e,n);o&&o.writable&&(e[n]=t.value,t={configurable:"configurable"in t?t.configurable:o.configurable,enumerable:"enumerable"in t?t.enumerable:o.enumerable,writable:!1})}return u(e,n,t)}:u:function(e,n,t){if(s(e),n=i(n),s(t),r)try{return u(e,n,t)}catch(e){}if("get"in t||"set"in t)throw c("Accessors not supported");return"value"in t&&(e[n]=t.value),e}},function(e,n,t){var o=t(153),r=t(154),a=t(155),s=t(156),i=t(157);function c(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var o=e[n];this.set(o[0],o[1])}}c.prototype.clear=o,c.prototype.delete=r,c.prototype.get=a,c.prototype.has=s,c.prototype.set=i,e.exports=c},function(e,n,t){var o=t(71);e.exports=function(e,n){for(var t=e.length;t--;)if(o(e[t][0],n))return t;return-1}},function(e,n,t){var o=t(10)(Object,"create");e.exports=o},function(e,n,t){var o=t(175);e.exports=function(e,n){var t=e.__data__;return o(n)?t["string"==typeof n?"string":"hash"]:t.map}},function(e,n,t){var o=t(45);e.exports=function(e){if("string"==typeof e||o(e))return e;var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}},function(e,n,t){var o,r;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(r="function"==typeof(o=function(){var e,n,t={version:"0.2.0"},o=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function r(e,n,t){return e<n?n:e>t?t:e}function a(e){return 100*(-1+e)}t.configure=function(e){var n,t;for(n in e)void 0!==(t=e[n])&&e.hasOwnProperty(n)&&(o[n]=t);return this},t.status=null,t.set=function(e){var n=t.isStarted();e=r(e,o.minimum,1),t.status=1===e?null:e;var c=t.render(!n),u=c.querySelector(o.barSelector),l=o.speed,d=o.easing;return c.offsetWidth,s((function(n){""===o.positionUsing&&(o.positionUsing=t.getPositioningCSS()),i(u,function(e,n,t){var r;return(r="translate3d"===o.positionUsing?{transform:"translate3d("+a(e)+"%,0,0)"}:"translate"===o.positionUsing?{transform:"translate("+a(e)+"%,0)"}:{"margin-left":a(e)+"%"}).transition="all "+n+"ms "+t,r}(e,l,d)),1===e?(i(c,{transition:"none",opacity:1}),c.offsetWidth,setTimeout((function(){i(c,{transition:"all "+l+"ms linear",opacity:0}),setTimeout((function(){t.remove(),n()}),l)}),l)):setTimeout(n,l)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var e=function(){setTimeout((function(){t.status&&(t.trickle(),e())}),o.trickleSpeed)};return o.trickle&&e(),this},t.done=function(e){return e||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(e){var n=t.status;return n?("number"!=typeof e&&(e=(1-n)*r(Math.random()*n,.1,.95)),n=r(n+e,0,.994),t.set(n)):t.start()},t.trickle=function(){return t.inc(Math.random()*o.trickleRate)},e=0,n=0,t.promise=function(o){return o&&"resolved"!==o.state()?(0===n&&t.start(),e++,n++,o.always((function(){0==--n?(e=0,t.done()):t.set((e-n)/e)})),this):this},t.render=function(e){if(t.isRendered())return document.getElementById("nprogress");u(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=o.template;var r,s=n.querySelector(o.barSelector),c=e?"-100":a(t.status||0),l=document.querySelector(o.parent);return i(s,{transition:"all 0 linear",transform:"translate3d("+c+"%,0,0)"}),o.showSpinner||(r=n.querySelector(o.spinnerSelector))&&p(r),l!=document.body&&u(l,"nprogress-custom-parent"),l.appendChild(n),n},t.remove=function(){l(document.documentElement,"nprogress-busy"),l(document.querySelector(o.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&p(e)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var e=document.body.style,n="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return n+"Perspective"in e?"translate3d":n+"Transform"in e?"translate":"margin"};var s=function(){var e=[];function n(){var t=e.shift();t&&t(n)}return function(t){e.push(t),1==e.length&&n()}}(),i=function(){var e=["Webkit","O","Moz","ms"],n={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,n){return n.toUpperCase()})),n[t]||(n[t]=function(n){var t=document.body.style;if(n in t)return n;for(var o,r=e.length,a=n.charAt(0).toUpperCase()+n.slice(1);r--;)if((o=e[r]+a)in t)return o;return n}(t))}function o(e,n,o){n=t(n),e.style[n]=o}return function(e,n){var t,r,a=arguments;if(2==a.length)for(t in n)void 0!==(r=n[t])&&n.hasOwnProperty(t)&&o(e,t,r);else o(e,a[1],a[2])}}();function c(e,n){return("string"==typeof e?e:d(e)).indexOf(" "+n+" ")>=0}function u(e,n){var t=d(e),o=t+n;c(t,n)||(e.className=o.substring(1))}function l(e,n){var t,o=d(e);c(e,n)&&(t=o.replace(" "+n+" "," "),e.className=t.substring(1,t.length-1))}function d(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function p(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return t})?o.call(n,t,n,e):o)||(e.exports=r)},function(e,n,t){"use strict";var o=t(1),r=t(49).f,a=t(15),s=t(107),i=t(34),c=t(65),u=t(123);e.exports=function(e,n){var t,l,d,p,f,h=e.target,m=e.global,v=e.stat;if(t=m?o:v?o[h]||i(h,{}):(o[h]||{}).prototype)for(l in n){if(p=n[l],d=e.dontCallGetSet?(f=r(t,l))&&f.value:t[l],!u(m?l:h+(v?".":"#")+l,e.forced)&&void 0!==d){if(typeof p==typeof d)continue;c(p,d)}(e.sham||d&&d.sham)&&a(p,"sham",!0),s(t,l,p,e)}}},function(e,n,t){"use strict";var o=t(27),r=Function.prototype.call;e.exports=o?r.bind(r):function(){return r.apply(r,arguments)}},function(e,n,t){"use strict";var o=t(2);e.exports=!o((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},function(e,n,t){"use strict";e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n,t){"use strict";var o=t(50),r=t(51);e.exports=function(e){return o(r(e))}},function(e,n,t){"use strict";var o=t(1),r=t(0),a=function(e){return r(e)?e:void 0};e.exports=function(e,n){return arguments.length<2?a(o[e]):o[e]&&o[e][n]}},function(e,n,t){"use strict";var o=t(0),r=t(103),a=TypeError;e.exports=function(e){if(o(e))return e;throw a(r(e)+" is not a function")}},function(e,n,t){"use strict";var o=t(1),r=t(60),a=t(8),s=t(62),i=t(58),c=t(57),u=o.Symbol,l=r("wks"),d=c?u.for||u:u&&u.withoutSetter||s;e.exports=function(e){return a(l,e)||(l[e]=i&&a(u,e)?u[e]:d("Symbol."+e)),l[e]}},function(e,n,t){"use strict";var o=t(1),r=t(34),a=o["__core-js_shared__"]||r("__core-js_shared__",{});e.exports=a},function(e,n,t){"use strict";var o=t(1),r=Object.defineProperty;e.exports=function(e,n){try{r(o,e,{value:n,configurable:!0,writable:!0})}catch(t){o[e]=n}return n}},function(e,n,t){"use strict";var o=t(51),r=Object;e.exports=function(e){return r(o(e))}},function(e,n,t){"use strict";var o=t(9),r=String,a=TypeError;e.exports=function(e){if(o(e))return e;throw a(r(e)+" is not an object")}},function(e,n,t){"use strict";var o=t(120);e.exports=function(e){return o(e.length)}},function(e,n,t){var o=t(147),r=t(12),a=Object.prototype,s=a.hasOwnProperty,i=a.propertyIsEnumerable,c=o(function(){return arguments}())?o:function(e){return r(e)&&s.call(e,"callee")&&!i.call(e,"callee")};e.exports=c},function(e,n,t){var o=t(10)(t(6),"Map");e.exports=o},function(e,n){e.exports=function(e){var n=typeof e;return null!=e&&("object"==n||"function"==n)}},function(e,n,t){var o=t(167),r=t(174),a=t(176),s=t(177),i=t(178);function c(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var o=e[n];this.set(o[0],o[1])}}c.prototype.clear=o,c.prototype.delete=r,c.prototype.get=a,c.prototype.has=s,c.prototype.set=i,e.exports=c},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e){t[++n]=e})),t}},function(e,n){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,n,t){var o=t(4),r=t(45),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,s=/^\w*$/;e.exports=function(e,n){if(o(e))return!1;var t=typeof e;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=e&&!r(e))||(s.test(e)||!a.test(e)||null!=n&&e in Object(n))}},function(e,n,t){var o=t(14),r=t(12);e.exports=function(e){return"symbol"==typeof e||r(e)&&"[object Symbol]"==o(e)}},function(e,n){e.exports=function(e){return e}},function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,n){var t=/^\s+|\s+$/g,o=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,a=/^0o[0-7]+$/i,s=parseInt,i="object"==typeof global&&global&&global.Object===Object&&global,c="object"==typeof self&&self&&self.Object===Object&&self,u=i||c||Function("return this")(),l=Object.prototype.toString,d=Math.max,p=Math.min,f=function(){return u.Date.now()};function h(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}function m(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==l.call(e)}(e))return NaN;if(h(e)){var n="function"==typeof e.valueOf?e.valueOf():e;e=h(n)?n+"":n}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(t,"");var i=r.test(e);return i||a.test(e)?s(e.slice(2),i?2:8):o.test(e)?NaN:+e}e.exports=function(e,n,t){var o,r,a,s,i,c,u=0,l=!1,v=!1,x=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function g(n){var t=o,a=r;return o=r=void 0,u=n,s=e.apply(a,t)}function b(e){return u=e,i=setTimeout(k,n),l?g(e):s}function y(e){var t=e-c;return void 0===c||t>=n||t<0||v&&e-u>=a}function k(){var e=f();if(y(e))return _(e);i=setTimeout(k,function(e){var t=n-(e-c);return v?p(t,a-(e-u)):t}(e))}function _(e){return i=void 0,x&&o?g(e):(o=r=void 0,s)}function w(){var e=f(),t=y(e);if(o=arguments,r=this,c=e,t){if(void 0===i)return b(c);if(v)return i=setTimeout(k,n),g(c)}return void 0===i&&(i=setTimeout(k,n)),s}return n=m(n)||0,h(t)&&(l=!!t.leading,a=(v="maxWait"in t)?d(m(t.maxWait)||0,n):a,x="trailing"in t?!!t.trailing:x),w.cancel=function(){void 0!==i&&clearTimeout(i),u=0,o=c=r=i=void 0},w.flush=function(){return void 0===i?s:_(f())},w}},function(e,n,t){"use strict";var o=t(5),r=t(26),a=t(99),s=t(28),i=t(29),c=t(53),u=t(8),l=t(63),d=Object.getOwnPropertyDescriptor;n.f=o?d:function(e,n){if(e=i(e),n=c(n),l)try{return d(e,n)}catch(e){}if(u(e,n))return s(!r(a.f,e,n),e[n])}},function(e,n,t){"use strict";var o=t(3),r=t(2),a=t(17),s=Object,i=o("".split);e.exports=r((function(){return!s("z").propertyIsEnumerable(0)}))?function(e){return"String"===a(e)?i(e,""):s(e)}:s},function(e,n,t){"use strict";var o=t(52),r=TypeError;e.exports=function(e){if(o(e))throw r("Can't call method on "+e);return e}},function(e,n,t){"use strict";e.exports=function(e){return null==e}},function(e,n,t){"use strict";var o=t(100),r=t(55);e.exports=function(e){var n=o(e,"string");return r(n)?n:n+""}},function(e,n,t){"use strict";var o="object"==typeof document&&document.all,r=void 0===o&&void 0!==o;e.exports={all:o,IS_HTMLDDA:r}},function(e,n,t){"use strict";var o=t(30),r=t(0),a=t(56),s=t(57),i=Object;e.exports=s?function(e){return"symbol"==typeof e}:function(e){var n=o("Symbol");return r(n)&&a(n.prototype,i(e))}},function(e,n,t){"use strict";var o=t(3);e.exports=o({}.isPrototypeOf)},function(e,n,t){"use strict";var o=t(58);e.exports=o&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,n,t){"use strict";var o=t(59),r=t(2),a=t(1).String;e.exports=!!Object.getOwnPropertySymbols&&!r((function(){var e=Symbol("symbol detection");return!a(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&o&&o<41}))},function(e,n,t){"use strict";var o,r,a=t(1),s=t(101),i=a.process,c=a.Deno,u=i&&i.versions||c&&c.version,l=u&&u.v8;l&&(r=(o=l.split("."))[0]>0&&o[0]<4?1:+(o[0]+o[1])),!r&&s&&(!(o=s.match(/Edge\/(\d+)/))||o[1]>=74)&&(o=s.match(/Chrome\/(\d+)/))&&(r=+o[1]),e.exports=r},function(e,n,t){"use strict";var o=t(61),r=t(33);(e.exports=function(e,n){return r[e]||(r[e]=void 0!==n?n:{})})("versions",[]).push({version:"3.32.2",mode:o?"pure":"global",copyright:"© 2014-2023 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.32.2/LICENSE",source:"https://github.com/zloirock/core-js"})},function(e,n,t){"use strict";e.exports=!1},function(e,n,t){"use strict";var o=t(3),r=0,a=Math.random(),s=o(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+s(++r+a,36)}},function(e,n,t){"use strict";var o=t(5),r=t(2),a=t(105);e.exports=!o&&!r((function(){return 7!==Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(e,n,t){"use strict";e.exports={}},function(e,n,t){"use strict";var o=t(8),r=t(114),a=t(49),s=t(18);e.exports=function(e,n,t){for(var i=r(n),c=s.f,u=a.f,l=0;l<i.length;l++){var d=i[l];o(e,d)||t&&o(t,d)||c(e,d,u(n,d))}}},function(e,n,t){"use strict";var o=t(119);e.exports=function(e){var n=+e;return n!=n||0===n?0:o(n)}},function(e,n,t){"use strict";var o=t(133),r=t(36),a=t(134);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,n=!1,t={};try{(e=o(Object.prototype,"__proto__","set"))(t,[]),n=t instanceof Array}catch(e){}return function(t,o){return r(t),a(o),n?e(t,o):t.__proto__=o,t}}():void 0)},function(e,n){e.exports=function(e,n){for(var t=-1,o=n.length,r=e.length;++t<o;)e[r+t]=n[t];return e}},function(e,n){var t="object"==typeof global&&global&&global.Object===Object&&global;e.exports=t},function(e,n,t){var o=t(19),r=t(158),a=t(159),s=t(160),i=t(161),c=t(162);function u(e){var n=this.__data__=new o(e);this.size=n.size}u.prototype.clear=r,u.prototype.delete=a,u.prototype.get=s,u.prototype.has=i,u.prototype.set=c,e.exports=u},function(e,n){e.exports=function(e,n){return e===n||e!=e&&n!=n}},function(e,n,t){var o=t(14),r=t(40);e.exports=function(e){if(!r(e))return!1;var n=o(e);return"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n}},function(e,n){var t=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return t.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,n,t){var o=t(179),r=t(12);e.exports=function e(n,t,a,s,i){return n===t||(null==n||null==t||!r(n)&&!r(t)?n!=n&&t!=t:o(n,t,a,s,e,i))}},function(e,n,t){var o=t(76),r=t(182),a=t(77);e.exports=function(e,n,t,s,i,c){var u=1&t,l=e.length,d=n.length;if(l!=d&&!(u&&d>l))return!1;var p=c.get(e),f=c.get(n);if(p&&f)return p==n&&f==e;var h=-1,m=!0,v=2&t?new o:void 0;for(c.set(e,n),c.set(n,e);++h<l;){var x=e[h],g=n[h];if(s)var b=u?s(g,x,h,n,e,c):s(x,g,h,e,n,c);if(void 0!==b){if(b)continue;m=!1;break}if(v){if(!r(n,(function(e,n){if(!a(v,n)&&(x===e||i(x,e,t,s,c)))return v.push(n)}))){m=!1;break}}else if(x!==g&&!i(x,g,t,s,c)){m=!1;break}}return c.delete(e),c.delete(n),m}},function(e,n,t){var o=t(41),r=t(180),a=t(181);function s(e){var n=-1,t=null==e?0:e.length;for(this.__data__=new o;++n<t;)this.add(e[n])}s.prototype.add=s.prototype.push=r,s.prototype.has=a,e.exports=s},function(e,n){e.exports=function(e,n){return e.has(n)}},function(e,n,t){var o=t(192),r=t(198),a=t(82);e.exports=function(e){return a(e)?o(e):r(e)}},function(e,n,t){(function(e){var o=t(6),r=t(194),a=n&&!n.nodeType&&n,s=a&&"object"==typeof e&&e&&!e.nodeType&&e,i=s&&s.exports===a?o.Buffer:void 0,c=(i?i.isBuffer:void 0)||r;e.exports=c}).call(this,t(47)(e))},function(e,n){var t=/^(?:0|[1-9]\d*)$/;e.exports=function(e,n){var o=typeof e;return!!(n=null==n?9007199254740991:n)&&("number"==o||"symbol"!=o&&t.test(e))&&e>-1&&e%1==0&&e<n}},function(e,n,t){var o=t(195),r=t(196),a=t(197),s=a&&a.isTypedArray,i=s?r(s):o;e.exports=i},function(e,n,t){var o=t(72),r=t(43);e.exports=function(e){return null!=e&&r(e.length)&&!o(e)}},function(e,n,t){var o=t(10)(t(6),"Set");e.exports=o},function(e,n,t){var o=t(40);e.exports=function(e){return e==e&&!o(e)}},function(e,n){e.exports=function(e,n){return function(t){return null!=t&&(t[e]===n&&(void 0!==n||e in Object(t)))}}},function(e,n,t){var o=t(87),r=t(23);e.exports=function(e,n){for(var t=0,a=(n=o(n,e)).length;null!=e&&t<a;)e=e[r(n[t++])];return t&&t==a?e:void 0}},function(e,n,t){var o=t(4),r=t(44),a=t(209),s=t(212);e.exports=function(e,n){return o(e)?e:r(e,n)?[e]:a(s(e))}},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){var o=t(145),r=t(150),a=t(221),s=t(229),i=t(238),c=t(96),u=a((function(e){var n=c(e);return i(n)&&(n=void 0),s(o(e,1,i,!0),r(n,2))}));e.exports=u},function(e,n,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var o=/["'&<>]/;e.exports=function(e){var n,t=""+e,r=o.exec(t);if(!r)return t;var a="",s=0,i=0;for(s=r.index;s<t.length;s++){switch(t.charCodeAt(s)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 39:n="&#39;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}i!==s&&(a+=t.substring(i,s)),i=s+1,a+=n}return i!==s?a+t.substring(i,s):a}},function(e,n,t){"use strict";t.r(n);var o={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},r=(t(241),t(7)),a=Object(r.a)(o,(function(){return(0,this._self._c)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"4f1e9d0c",null);n.default=a.exports},function(e,n,t){"use strict";t.r(n);var o={name:"CodeGroup",data:()=>({codeTabs:[],activeCodeTabIndex:-1}),watch:{activeCodeTabIndex(e){this.codeTabs.forEach(e=>{e.elm.classList.remove("theme-code-block__active")}),this.codeTabs[e].elm.classList.add("theme-code-block__active")}},mounted(){this.codeTabs=(this.$slots.default||[]).filter(e=>Boolean(e.componentOptions)).map((e,n)=>(""===e.componentOptions.propsData.active&&(this.activeCodeTabIndex=n),{title:e.componentOptions.propsData.title,elm:e.elm})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab(e){this.activeCodeTabIndex=e}}},r=(t(242),t(7)),a=Object(r.a)(o,(function(){var e=this,n=e._self._c;return n("div",{staticClass:"theme-code-group"},[n("div",{staticClass:"theme-code-group__nav"},[n("ul",{staticClass:"theme-code-group__ul"},e._l(e.codeTabs,(function(t,o){return n("li",{key:t.title,staticClass:"theme-code-group__li"},[n("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":o===e.activeCodeTabIndex},on:{click:function(n){return e.changeCodeTab(o)}}},[e._v("\n            "+e._s(t.title)+"\n          ")])])})),0)]),e._v(" "),e._t("default"),e._v(" "),e.codeTabs.length<1?n("pre",{staticClass:"pre-blank"},[e._v("// Make sure to add code blocks to your code group")]):e._e()],2)}),[],!1,null,"2f5f1757",null);n.default=a.exports},function(e,n){e.exports=function(e){var n=null==e?0:e.length;return n?e[n-1]:void 0}},function(e,n,t){e.exports=t(247)},function(e,n,t){"use strict";var o=t(25),r=t(124).left,a=t(125),s=t(59);o({target:"Array",proto:!0,forced:!t(126)&&s>79&&s<83||!a("reduce")},{reduce:function(e){var n=arguments.length;return r(this,e,n,n>1?arguments[1]:void 0)}})},function(e,n,t){"use strict";var o={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,a=r&&!o.call({1:2},1);n.f=a?function(e){var n=r(this,e);return!!n&&n.enumerable}:o},function(e,n,t){"use strict";var o=t(26),r=t(9),a=t(55),s=t(102),i=t(104),c=t(32),u=TypeError,l=c("toPrimitive");e.exports=function(e,n){if(!r(e)||a(e))return e;var t,c=s(e,l);if(c){if(void 0===n&&(n="default"),t=o(c,e,n),!r(t)||a(t))return t;throw u("Can't convert object to primitive value")}return void 0===n&&(n="number"),i(e,n)}},function(e,n,t){"use strict";e.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},function(e,n,t){"use strict";var o=t(31),r=t(52);e.exports=function(e,n){var t=e[n];return r(t)?void 0:o(t)}},function(e,n,t){"use strict";var o=String;e.exports=function(e){try{return o(e)}catch(e){return"Object"}}},function(e,n,t){"use strict";var o=t(26),r=t(0),a=t(9),s=TypeError;e.exports=function(e,n){var t,i;if("string"===n&&r(t=e.toString)&&!a(i=o(t,e)))return i;if(r(t=e.valueOf)&&!a(i=o(t,e)))return i;if("string"!==n&&r(t=e.toString)&&!a(i=o(t,e)))return i;throw s("Can't convert object to primitive value")}},function(e,n,t){"use strict";var o=t(1),r=t(9),a=o.document,s=r(a)&&r(a.createElement);e.exports=function(e){return s?a.createElement(e):{}}},function(e,n,t){"use strict";var o=t(5),r=t(2);e.exports=o&&r((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(e,n,t){"use strict";var o=t(0),r=t(18),a=t(108),s=t(34);e.exports=function(e,n,t,i){i||(i={});var c=i.enumerable,u=void 0!==i.name?i.name:n;if(o(t)&&a(t,u,i),i.global)c?e[n]=t:s(n,t);else{try{i.unsafe?e[n]&&(c=!0):delete e[n]}catch(e){}c?e[n]=t:r.f(e,n,{value:t,enumerable:!1,configurable:!i.nonConfigurable,writable:!i.nonWritable})}return e}},function(e,n,t){"use strict";var o=t(3),r=t(2),a=t(0),s=t(8),i=t(5),c=t(109).CONFIGURABLE,u=t(110),l=t(111),d=l.enforce,p=l.get,f=String,h=Object.defineProperty,m=o("".slice),v=o("".replace),x=o([].join),g=i&&!r((function(){return 8!==h((function(){}),"length",{value:8}).length})),b=String(String).split("String"),y=e.exports=function(e,n,t){"Symbol("===m(f(n),0,7)&&(n="["+v(f(n),/^Symbol\(([^)]*)\)/,"$1")+"]"),t&&t.getter&&(n="get "+n),t&&t.setter&&(n="set "+n),(!s(e,"name")||c&&e.name!==n)&&(i?h(e,"name",{value:n,configurable:!0}):e.name=n),g&&t&&s(t,"arity")&&e.length!==t.arity&&h(e,"length",{value:t.arity});try{t&&s(t,"constructor")&&t.constructor?i&&h(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var o=d(e);return s(o,"source")||(o.source=x(b,"string"==typeof n?n:"")),e};Function.prototype.toString=y((function(){return a(this)&&p(this).source||u(this)}),"toString")},function(e,n,t){"use strict";var o=t(5),r=t(8),a=Function.prototype,s=o&&Object.getOwnPropertyDescriptor,i=r(a,"name"),c=i&&"something"===function(){}.name,u=i&&(!o||o&&s(a,"name").configurable);e.exports={EXISTS:i,PROPER:c,CONFIGURABLE:u}},function(e,n,t){"use strict";var o=t(3),r=t(0),a=t(33),s=o(Function.toString);r(a.inspectSource)||(a.inspectSource=function(e){return s(e)}),e.exports=a.inspectSource},function(e,n,t){"use strict";var o,r,a,s=t(112),i=t(1),c=t(9),u=t(15),l=t(8),d=t(33),p=t(113),f=t(64),h=i.TypeError,m=i.WeakMap;if(s||d.state){var v=d.state||(d.state=new m);v.get=v.get,v.has=v.has,v.set=v.set,o=function(e,n){if(v.has(e))throw h("Object already initialized");return n.facade=e,v.set(e,n),n},r=function(e){return v.get(e)||{}},a=function(e){return v.has(e)}}else{var x=p("state");f[x]=!0,o=function(e,n){if(l(e,x))throw h("Object already initialized");return n.facade=e,u(e,x,n),n},r=function(e){return l(e,x)?e[x]:{}},a=function(e){return l(e,x)}}e.exports={set:o,get:r,has:a,enforce:function(e){return a(e)?r(e):o(e,{})},getterFor:function(e){return function(n){var t;if(!c(n)||(t=r(n)).type!==e)throw h("Incompatible receiver, "+e+" required");return t}}}},function(e,n,t){"use strict";var o=t(1),r=t(0),a=o.WeakMap;e.exports=r(a)&&/native code/.test(String(a))},function(e,n,t){"use strict";var o=t(60),r=t(62),a=o("keys");e.exports=function(e){return a[e]||(a[e]=r(e))}},function(e,n,t){"use strict";var o=t(30),r=t(3),a=t(115),s=t(122),i=t(36),c=r([].concat);e.exports=o("Reflect","ownKeys")||function(e){var n=a.f(i(e)),t=s.f;return t?c(n,t(e)):n}},function(e,n,t){"use strict";var o=t(116),r=t(121).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return o(e,r)}},function(e,n,t){"use strict";var o=t(3),r=t(8),a=t(29),s=t(117).indexOf,i=t(64),c=o([].push);e.exports=function(e,n){var t,o=a(e),u=0,l=[];for(t in o)!r(i,t)&&r(o,t)&&c(l,t);for(;n.length>u;)r(o,t=n[u++])&&(~s(l,t)||c(l,t));return l}},function(e,n,t){"use strict";var o=t(29),r=t(118),a=t(37),s=function(e){return function(n,t,s){var i,c=o(n),u=a(c),l=r(s,u);if(e&&t!=t){for(;u>l;)if((i=c[l++])!=i)return!0}else for(;u>l;l++)if((e||l in c)&&c[l]===t)return e||l||0;return!e&&-1}};e.exports={includes:s(!0),indexOf:s(!1)}},function(e,n,t){"use strict";var o=t(66),r=Math.max,a=Math.min;e.exports=function(e,n){var t=o(e);return t<0?r(t+n,0):a(t,n)}},function(e,n,t){"use strict";var o=Math.ceil,r=Math.floor;e.exports=Math.trunc||function(e){var n=+e;return(n>0?r:o)(n)}},function(e,n,t){"use strict";var o=t(66),r=Math.min;e.exports=function(e){return e>0?r(o(e),9007199254740991):0}},function(e,n,t){"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,n,t){"use strict";n.f=Object.getOwnPropertySymbols},function(e,n,t){"use strict";var o=t(2),r=t(0),a=/#|\.prototype\./,s=function(e,n){var t=c[i(e)];return t===l||t!==u&&(r(n)?o(n):!!n)},i=s.normalize=function(e){return String(e).replace(a,".").toLowerCase()},c=s.data={},u=s.NATIVE="N",l=s.POLYFILL="P";e.exports=s},function(e,n,t){"use strict";var o=t(31),r=t(35),a=t(50),s=t(37),i=TypeError,c=function(e){return function(n,t,c,u){o(t);var l=r(n),d=a(l),p=s(l),f=e?p-1:0,h=e?-1:1;if(c<2)for(;;){if(f in d){u=d[f],f+=h;break}if(f+=h,e?f<0:p<=f)throw i("Reduce of empty array with no initial value")}for(;e?f>=0:p>f;f+=h)f in d&&(u=t(u,d[f],f,l));return u}};e.exports={left:c(!1),right:c(!0)}},function(e,n,t){"use strict";var o=t(2);e.exports=function(e,n){var t=[][e];return!!t&&o((function(){t.call(null,n||function(){return 1},1)}))}},function(e,n,t){"use strict";var o=t(1),r=t(17);e.exports="process"===r(o.process)},function(e,n,t){"use strict";var o=t(5),r=t(128),a=TypeError,s=Object.getOwnPropertyDescriptor,i=o&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=i?function(e,n){if(r(e)&&!s(e,"length").writable)throw a("Cannot set read only .length");return e.length=n}:function(e,n){return e.length=n}},function(e,n,t){"use strict";var o=t(17);e.exports=Array.isArray||function(e){return"Array"===o(e)}},function(e,n,t){"use strict";var o=TypeError;e.exports=function(e){if(e>9007199254740991)throw o("Maximum allowed index exceeded");return e}},function(e,n,t){"use strict";var o=t(25),r=t(1),a=t(131),s=t(132),i=r.WebAssembly,c=7!==Error("e",{cause:7}).cause,u=function(e,n){var t={};t[e]=s(e,n,c),o({global:!0,constructor:!0,arity:1,forced:c},t)},l=function(e,n){if(i&&i[e]){var t={};t[e]=s("WebAssembly."+e,n,c),o({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:c},t)}};u("Error",(function(e){return function(n){return a(e,this,arguments)}})),u("EvalError",(function(e){return function(n){return a(e,this,arguments)}})),u("RangeError",(function(e){return function(n){return a(e,this,arguments)}})),u("ReferenceError",(function(e){return function(n){return a(e,this,arguments)}})),u("SyntaxError",(function(e){return function(n){return a(e,this,arguments)}})),u("TypeError",(function(e){return function(n){return a(e,this,arguments)}})),u("URIError",(function(e){return function(n){return a(e,this,arguments)}})),l("CompileError",(function(e){return function(n){return a(e,this,arguments)}})),l("LinkError",(function(e){return function(n){return a(e,this,arguments)}})),l("RuntimeError",(function(e){return function(n){return a(e,this,arguments)}}))},function(e,n,t){"use strict";var o=t(27),r=Function.prototype,a=r.apply,s=r.call;e.exports="object"==typeof Reflect&&Reflect.apply||(o?s.bind(a):function(){return s.apply(a,arguments)})},function(e,n,t){"use strict";var o=t(30),r=t(8),a=t(15),s=t(56),i=t(67),c=t(65),u=t(135),l=t(136),d=t(137),p=t(141),f=t(142),h=t(5),m=t(61);e.exports=function(e,n,t,v){var x=v?2:1,g=e.split("."),b=g[g.length-1],y=o.apply(null,g);if(y){var k=y.prototype;if(!m&&r(k,"cause")&&delete k.cause,!t)return y;var _=o("Error"),w=n((function(e,n){var t=d(v?n:e,void 0),o=v?new y(e):new y;return void 0!==t&&a(o,"message",t),f(o,w,o.stack,2),this&&s(k,this)&&l(o,this,w),arguments.length>x&&p(o,arguments[x]),o}));if(w.prototype=k,"Error"!==b?i?i(w,_):c(w,_,{name:!0}):h&&"stackTraceLimit"in y&&(u(w,y,"stackTraceLimit"),u(w,y,"prepareStackTrace")),c(w,y),!m)try{k.name!==b&&a(k,"name",b),k.constructor=w}catch(e){}return w}}},function(e,n,t){"use strict";var o=t(3),r=t(31);e.exports=function(e,n,t){try{return o(r(Object.getOwnPropertyDescriptor(e,n)[t]))}catch(e){}}},function(e,n,t){"use strict";var o=t(0),r=String,a=TypeError;e.exports=function(e){if("object"==typeof e||o(e))return e;throw a("Can't set "+r(e)+" as a prototype")}},function(e,n,t){"use strict";var o=t(18).f;e.exports=function(e,n,t){t in e||o(e,t,{configurable:!0,get:function(){return n[t]},set:function(e){n[t]=e}})}},function(e,n,t){"use strict";var o=t(0),r=t(9),a=t(67);e.exports=function(e,n,t){var s,i;return a&&o(s=n.constructor)&&s!==t&&r(i=s.prototype)&&i!==t.prototype&&a(e,i),e}},function(e,n,t){"use strict";var o=t(138);e.exports=function(e,n){return void 0===e?arguments.length<2?"":n:o(e)}},function(e,n,t){"use strict";var o=t(139),r=String;e.exports=function(e){if("Symbol"===o(e))throw TypeError("Cannot convert a Symbol value to a string");return r(e)}},function(e,n,t){"use strict";var o=t(140),r=t(0),a=t(17),s=t(32)("toStringTag"),i=Object,c="Arguments"===a(function(){return arguments}());e.exports=o?a:function(e){var n,t,o;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,n){try{return e[n]}catch(e){}}(n=i(e),s))?t:c?a(n):"Object"===(o=a(n))&&r(n.callee)?"Arguments":o}},function(e,n,t){"use strict";var o={};o[t(32)("toStringTag")]="z",e.exports="[object z]"===String(o)},function(e,n,t){"use strict";var o=t(9),r=t(15);e.exports=function(e,n){o(n)&&"cause"in n&&r(e,"cause",n.cause)}},function(e,n,t){"use strict";var o=t(15),r=t(143),a=t(144),s=Error.captureStackTrace;e.exports=function(e,n,t,i){a&&(s?s(e,n):o(e,"stack",r(t,i)))}},function(e,n,t){"use strict";var o=t(3),r=Error,a=o("".replace),s=String(r("zxcasd").stack),i=/\n\s*at [^:]*:[^\n]*/,c=i.test(s);e.exports=function(e,n){if(c&&"string"==typeof e&&!r.prepareStackTrace)for(;n--;)e=a(e,i,"");return e}},function(e,n,t){"use strict";var o=t(2),r=t(28);e.exports=!o((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",r(1,7)),7!==e.stack)}))},function(e,n,t){var o=t(68),r=t(146);e.exports=function e(n,t,a,s,i){var c=-1,u=n.length;for(a||(a=r),i||(i=[]);++c<u;){var l=n[c];t>0&&a(l)?t>1?e(l,t-1,a,s,i):o(i,l):s||(i[i.length]=l)}return i}},function(e,n,t){var o=t(16),r=t(38),a=t(4),s=o?o.isConcatSpreadable:void 0;e.exports=function(e){return a(e)||r(e)||!!(s&&e&&e[s])}},function(e,n,t){var o=t(14),r=t(12);e.exports=function(e){return r(e)&&"[object Arguments]"==o(e)}},function(e,n,t){var o=t(16),r=Object.prototype,a=r.hasOwnProperty,s=r.toString,i=o?o.toStringTag:void 0;e.exports=function(e){var n=a.call(e,i),t=e[i];try{e[i]=void 0;var o=!0}catch(e){}var r=s.call(e);return o&&(n?e[i]=t:delete e[i]),r}},function(e,n){var t=Object.prototype.toString;e.exports=function(e){return t.call(e)}},function(e,n,t){var o=t(151),r=t(207),a=t(46),s=t(4),i=t(218);e.exports=function(e){return"function"==typeof e?e:null==e?a:"object"==typeof e?s(e)?r(e[0],e[1]):o(e):i(e)}},function(e,n,t){var o=t(152),r=t(206),a=t(85);e.exports=function(e){var n=r(e);return 1==n.length&&n[0][2]?a(n[0][0],n[0][1]):function(t){return t===e||o(t,e,n)}}},function(e,n,t){var o=t(70),r=t(74);e.exports=function(e,n,t,a){var s=t.length,i=s,c=!a;if(null==e)return!i;for(e=Object(e);s--;){var u=t[s];if(c&&u[2]?u[1]!==e[u[0]]:!(u[0]in e))return!1}for(;++s<i;){var l=(u=t[s])[0],d=e[l],p=u[1];if(c&&u[2]){if(void 0===d&&!(l in e))return!1}else{var f=new o;if(a)var h=a(d,p,l,e,n,f);if(!(void 0===h?r(p,d,3,a,f):h))return!1}}return!0}},function(e,n){e.exports=function(){this.__data__=[],this.size=0}},function(e,n,t){var o=t(20),r=Array.prototype.splice;e.exports=function(e){var n=this.__data__,t=o(n,e);return!(t<0)&&(t==n.length-1?n.pop():r.call(n,t,1),--this.size,!0)}},function(e,n,t){var o=t(20);e.exports=function(e){var n=this.__data__,t=o(n,e);return t<0?void 0:n[t][1]}},function(e,n,t){var o=t(20);e.exports=function(e){return o(this.__data__,e)>-1}},function(e,n,t){var o=t(20);e.exports=function(e,n){var t=this.__data__,r=o(t,e);return r<0?(++this.size,t.push([e,n])):t[r][1]=n,this}},function(e,n,t){var o=t(19);e.exports=function(){this.__data__=new o,this.size=0}},function(e,n){e.exports=function(e){var n=this.__data__,t=n.delete(e);return this.size=n.size,t}},function(e,n){e.exports=function(e){return this.__data__.get(e)}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n,t){var o=t(19),r=t(39),a=t(41);e.exports=function(e,n){var t=this.__data__;if(t instanceof o){var s=t.__data__;if(!r||s.length<199)return s.push([e,n]),this.size=++t.size,this;t=this.__data__=new a(s)}return t.set(e,n),this.size=t.size,this}},function(e,n,t){var o=t(72),r=t(164),a=t(40),s=t(73),i=/^\[object .+?Constructor\]$/,c=Function.prototype,u=Object.prototype,l=c.toString,d=u.hasOwnProperty,p=RegExp("^"+l.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!a(e)||r(e))&&(o(e)?p:i).test(s(e))}},function(e,n,t){var o,r=t(165),a=(o=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+o:"";e.exports=function(e){return!!a&&a in e}},function(e,n,t){var o=t(6)["__core-js_shared__"];e.exports=o},function(e,n){e.exports=function(e,n){return null==e?void 0:e[n]}},function(e,n,t){var o=t(168),r=t(19),a=t(39);e.exports=function(){this.size=0,this.__data__={hash:new o,map:new(a||r),string:new o}}},function(e,n,t){var o=t(169),r=t(170),a=t(171),s=t(172),i=t(173);function c(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var o=e[n];this.set(o[0],o[1])}}c.prototype.clear=o,c.prototype.delete=r,c.prototype.get=a,c.prototype.has=s,c.prototype.set=i,e.exports=c},function(e,n,t){var o=t(21);e.exports=function(){this.__data__=o?o(null):{},this.size=0}},function(e,n){e.exports=function(e){var n=this.has(e)&&delete this.__data__[e];return this.size-=n?1:0,n}},function(e,n,t){var o=t(21),r=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;if(o){var t=n[e];return"__lodash_hash_undefined__"===t?void 0:t}return r.call(n,e)?n[e]:void 0}},function(e,n,t){var o=t(21),r=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;return o?void 0!==n[e]:r.call(n,e)}},function(e,n,t){var o=t(21);e.exports=function(e,n){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=o&&void 0===n?"__lodash_hash_undefined__":n,this}},function(e,n,t){var o=t(22);e.exports=function(e){var n=o(this,e).delete(e);return this.size-=n?1:0,n}},function(e,n){e.exports=function(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}},function(e,n,t){var o=t(22);e.exports=function(e){return o(this,e).get(e)}},function(e,n,t){var o=t(22);e.exports=function(e){return o(this,e).has(e)}},function(e,n,t){var o=t(22);e.exports=function(e,n){var t=o(this,e),r=t.size;return t.set(e,n),this.size+=t.size==r?0:1,this}},function(e,n,t){var o=t(70),r=t(75),a=t(183),s=t(186),i=t(202),c=t(4),u=t(79),l=t(81),d="[object Object]",p=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,f,h,m){var v=c(e),x=c(n),g=v?"[object Array]":i(e),b=x?"[object Array]":i(n),y=(g="[object Arguments]"==g?d:g)==d,k=(b="[object Arguments]"==b?d:b)==d,_=g==b;if(_&&u(e)){if(!u(n))return!1;v=!0,y=!1}if(_&&!y)return m||(m=new o),v||l(e)?r(e,n,t,f,h,m):a(e,n,g,t,f,h,m);if(!(1&t)){var w=y&&p.call(e,"__wrapped__"),C=k&&p.call(n,"__wrapped__");if(w||C){var R=w?e.value():e,j=C?n.value():n;return m||(m=new o),h(R,j,t,f,m)}}return!!_&&(m||(m=new o),s(e,n,t,f,h,m))}},function(e,n){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n){e.exports=function(e,n){for(var t=-1,o=null==e?0:e.length;++t<o;)if(n(e[t],t,e))return!0;return!1}},function(e,n,t){var o=t(16),r=t(184),a=t(71),s=t(75),i=t(185),c=t(42),u=o?o.prototype:void 0,l=u?u.valueOf:void 0;e.exports=function(e,n,t,o,u,d,p){switch(t){case"[object DataView]":if(e.byteLength!=n.byteLength||e.byteOffset!=n.byteOffset)return!1;e=e.buffer,n=n.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=n.byteLength||!d(new r(e),new r(n)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+e,+n);case"[object Error]":return e.name==n.name&&e.message==n.message;case"[object RegExp]":case"[object String]":return e==n+"";case"[object Map]":var f=i;case"[object Set]":var h=1&o;if(f||(f=c),e.size!=n.size&&!h)return!1;var m=p.get(e);if(m)return m==n;o|=2,p.set(e,n);var v=s(f(e),f(n),o,u,d,p);return p.delete(e),v;case"[object Symbol]":if(l)return l.call(e)==l.call(n)}return!1}},function(e,n,t){var o=t(6).Uint8Array;e.exports=o},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e,o){t[++n]=[o,e]})),t}},function(e,n,t){var o=t(187),r=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,a,s,i){var c=1&t,u=o(e),l=u.length;if(l!=o(n).length&&!c)return!1;for(var d=l;d--;){var p=u[d];if(!(c?p in n:r.call(n,p)))return!1}var f=i.get(e),h=i.get(n);if(f&&h)return f==n&&h==e;var m=!0;i.set(e,n),i.set(n,e);for(var v=c;++d<l;){var x=e[p=u[d]],g=n[p];if(a)var b=c?a(g,x,p,n,e,i):a(x,g,p,e,n,i);if(!(void 0===b?x===g||s(x,g,t,a,i):b)){m=!1;break}v||(v="constructor"==p)}if(m&&!v){var y=e.constructor,k=n.constructor;y==k||!("constructor"in e)||!("constructor"in n)||"function"==typeof y&&y instanceof y&&"function"==typeof k&&k instanceof k||(m=!1)}return i.delete(e),i.delete(n),m}},function(e,n,t){var o=t(188),r=t(189),a=t(78);e.exports=function(e){return o(e,a,r)}},function(e,n,t){var o=t(68),r=t(4);e.exports=function(e,n,t){var a=n(e);return r(e)?a:o(a,t(e))}},function(e,n,t){var o=t(190),r=t(191),a=Object.prototype.propertyIsEnumerable,s=Object.getOwnPropertySymbols,i=s?function(e){return null==e?[]:(e=Object(e),o(s(e),(function(n){return a.call(e,n)})))}:r;e.exports=i},function(e,n){e.exports=function(e,n){for(var t=-1,o=null==e?0:e.length,r=0,a=[];++t<o;){var s=e[t];n(s,t,e)&&(a[r++]=s)}return a}},function(e,n){e.exports=function(){return[]}},function(e,n,t){var o=t(193),r=t(38),a=t(4),s=t(79),i=t(80),c=t(81),u=Object.prototype.hasOwnProperty;e.exports=function(e,n){var t=a(e),l=!t&&r(e),d=!t&&!l&&s(e),p=!t&&!l&&!d&&c(e),f=t||l||d||p,h=f?o(e.length,String):[],m=h.length;for(var v in e)!n&&!u.call(e,v)||f&&("length"==v||d&&("offset"==v||"parent"==v)||p&&("buffer"==v||"byteLength"==v||"byteOffset"==v)||i(v,m))||h.push(v);return h}},function(e,n){e.exports=function(e,n){for(var t=-1,o=Array(e);++t<e;)o[t]=n(t);return o}},function(e,n){e.exports=function(){return!1}},function(e,n,t){var o=t(14),r=t(43),a=t(12),s={};s["[object Float32Array]"]=s["[object Float64Array]"]=s["[object Int8Array]"]=s["[object Int16Array]"]=s["[object Int32Array]"]=s["[object Uint8Array]"]=s["[object Uint8ClampedArray]"]=s["[object Uint16Array]"]=s["[object Uint32Array]"]=!0,s["[object Arguments]"]=s["[object Array]"]=s["[object ArrayBuffer]"]=s["[object Boolean]"]=s["[object DataView]"]=s["[object Date]"]=s["[object Error]"]=s["[object Function]"]=s["[object Map]"]=s["[object Number]"]=s["[object Object]"]=s["[object RegExp]"]=s["[object Set]"]=s["[object String]"]=s["[object WeakMap]"]=!1,e.exports=function(e){return a(e)&&r(e.length)&&!!s[o(e)]}},function(e,n){e.exports=function(e){return function(n){return e(n)}}},function(e,n,t){(function(e){var o=t(69),r=n&&!n.nodeType&&n,a=r&&"object"==typeof e&&e&&!e.nodeType&&e,s=a&&a.exports===r&&o.process,i=function(){try{var e=a&&a.require&&a.require("util").types;return e||s&&s.binding&&s.binding("util")}catch(e){}}();e.exports=i}).call(this,t(47)(e))},function(e,n,t){var o=t(199),r=t(200),a=Object.prototype.hasOwnProperty;e.exports=function(e){if(!o(e))return r(e);var n=[];for(var t in Object(e))a.call(e,t)&&"constructor"!=t&&n.push(t);return n}},function(e,n){var t=Object.prototype;e.exports=function(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||t)}},function(e,n,t){var o=t(201)(Object.keys,Object);e.exports=o},function(e,n){e.exports=function(e,n){return function(t){return e(n(t))}}},function(e,n,t){var o=t(203),r=t(39),a=t(204),s=t(83),i=t(205),c=t(14),u=t(73),l=u(o),d=u(r),p=u(a),f=u(s),h=u(i),m=c;(o&&"[object DataView]"!=m(new o(new ArrayBuffer(1)))||r&&"[object Map]"!=m(new r)||a&&"[object Promise]"!=m(a.resolve())||s&&"[object Set]"!=m(new s)||i&&"[object WeakMap]"!=m(new i))&&(m=function(e){var n=c(e),t="[object Object]"==n?e.constructor:void 0,o=t?u(t):"";if(o)switch(o){case l:return"[object DataView]";case d:return"[object Map]";case p:return"[object Promise]";case f:return"[object Set]";case h:return"[object WeakMap]"}return n}),e.exports=m},function(e,n,t){var o=t(10)(t(6),"DataView");e.exports=o},function(e,n,t){var o=t(10)(t(6),"Promise");e.exports=o},function(e,n,t){var o=t(10)(t(6),"WeakMap");e.exports=o},function(e,n,t){var o=t(84),r=t(78);e.exports=function(e){for(var n=r(e),t=n.length;t--;){var a=n[t],s=e[a];n[t]=[a,s,o(s)]}return n}},function(e,n,t){var o=t(74),r=t(208),a=t(215),s=t(44),i=t(84),c=t(85),u=t(23);e.exports=function(e,n){return s(e)&&i(n)?c(u(e),n):function(t){var s=r(t,e);return void 0===s&&s===n?a(t,e):o(n,s,3)}}},function(e,n,t){var o=t(86);e.exports=function(e,n,t){var r=null==e?void 0:o(e,n);return void 0===r?t:r}},function(e,n,t){var o=t(210),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,s=o((function(e){var n=[];return 46===e.charCodeAt(0)&&n.push(""),e.replace(r,(function(e,t,o,r){n.push(o?r.replace(a,"$1"):t||e)})),n}));e.exports=s},function(e,n,t){var o=t(211);e.exports=function(e){var n=o(e,(function(e){return 500===t.size&&t.clear(),e})),t=n.cache;return n}},function(e,n,t){var o=t(41);function r(e,n){if("function"!=typeof e||null!=n&&"function"!=typeof n)throw new TypeError("Expected a function");var t=function(){var o=arguments,r=n?n.apply(this,o):o[0],a=t.cache;if(a.has(r))return a.get(r);var s=e.apply(this,o);return t.cache=a.set(r,s)||a,s};return t.cache=new(r.Cache||o),t}r.Cache=o,e.exports=r},function(e,n,t){var o=t(213);e.exports=function(e){return null==e?"":o(e)}},function(e,n,t){var o=t(16),r=t(214),a=t(4),s=t(45),i=o?o.prototype:void 0,c=i?i.toString:void 0;e.exports=function e(n){if("string"==typeof n)return n;if(a(n))return r(n,e)+"";if(s(n))return c?c.call(n):"";var t=n+"";return"0"==t&&1/n==-1/0?"-0":t}},function(e,n){e.exports=function(e,n){for(var t=-1,o=null==e?0:e.length,r=Array(o);++t<o;)r[t]=n(e[t],t,e);return r}},function(e,n,t){var o=t(216),r=t(217);e.exports=function(e,n){return null!=e&&r(e,n,o)}},function(e,n){e.exports=function(e,n){return null!=e&&n in Object(e)}},function(e,n,t){var o=t(87),r=t(38),a=t(4),s=t(80),i=t(43),c=t(23);e.exports=function(e,n,t){for(var u=-1,l=(n=o(n,e)).length,d=!1;++u<l;){var p=c(n[u]);if(!(d=null!=e&&t(e,p)))break;e=e[p]}return d||++u!=l?d:!!(l=null==e?0:e.length)&&i(l)&&s(p,l)&&(a(e)||r(e))}},function(e,n,t){var o=t(219),r=t(220),a=t(44),s=t(23);e.exports=function(e){return a(e)?o(s(e)):r(e)}},function(e,n){e.exports=function(e){return function(n){return null==n?void 0:n[e]}}},function(e,n,t){var o=t(86);e.exports=function(e){return function(n){return o(n,e)}}},function(e,n,t){var o=t(46),r=t(222),a=t(224);e.exports=function(e,n){return a(r(e,n,o),e+"")}},function(e,n,t){var o=t(223),r=Math.max;e.exports=function(e,n,t){return n=r(void 0===n?e.length-1:n,0),function(){for(var a=arguments,s=-1,i=r(a.length-n,0),c=Array(i);++s<i;)c[s]=a[n+s];s=-1;for(var u=Array(n+1);++s<n;)u[s]=a[s];return u[n]=t(c),o(e,this,u)}}},function(e,n){e.exports=function(e,n,t){switch(t.length){case 0:return e.call(n);case 1:return e.call(n,t[0]);case 2:return e.call(n,t[0],t[1]);case 3:return e.call(n,t[0],t[1],t[2])}return e.apply(n,t)}},function(e,n,t){var o=t(225),r=t(228)(o);e.exports=r},function(e,n,t){var o=t(226),r=t(227),a=t(46),s=r?function(e,n){return r(e,"toString",{configurable:!0,enumerable:!1,value:o(n),writable:!0})}:a;e.exports=s},function(e,n){e.exports=function(e){return function(){return e}}},function(e,n,t){var o=t(10),r=function(){try{var e=o(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=r},function(e,n){var t=Date.now;e.exports=function(e){var n=0,o=0;return function(){var r=t(),a=16-(r-o);if(o=r,a>0){if(++n>=800)return arguments[0]}else n=0;return e.apply(void 0,arguments)}}},function(e,n,t){var o=t(76),r=t(230),a=t(235),s=t(77),i=t(236),c=t(42);e.exports=function(e,n,t){var u=-1,l=r,d=e.length,p=!0,f=[],h=f;if(t)p=!1,l=a;else if(d>=200){var m=n?null:i(e);if(m)return c(m);p=!1,l=s,h=new o}else h=n?[]:f;e:for(;++u<d;){var v=e[u],x=n?n(v):v;if(v=t||0!==v?v:0,p&&x==x){for(var g=h.length;g--;)if(h[g]===x)continue e;n&&h.push(x),f.push(v)}else l(h,x,t)||(h!==f&&h.push(x),f.push(v))}return f}},function(e,n,t){var o=t(231);e.exports=function(e,n){return!!(null==e?0:e.length)&&o(e,n,0)>-1}},function(e,n,t){var o=t(232),r=t(233),a=t(234);e.exports=function(e,n,t){return n==n?a(e,n,t):o(e,r,t)}},function(e,n){e.exports=function(e,n,t,o){for(var r=e.length,a=t+(o?1:-1);o?a--:++a<r;)if(n(e[a],a,e))return a;return-1}},function(e,n){e.exports=function(e){return e!=e}},function(e,n){e.exports=function(e,n,t){for(var o=t-1,r=e.length;++o<r;)if(e[o]===n)return o;return-1}},function(e,n){e.exports=function(e,n,t){for(var o=-1,r=null==e?0:e.length;++o<r;)if(t(n,e[o]))return!0;return!1}},function(e,n,t){var o=t(83),r=t(237),a=t(42),s=o&&1/a(new o([,-0]))[1]==1/0?function(e){return new o(e)}:r;e.exports=s},function(e,n){e.exports=function(){}},function(e,n,t){var o=t(82),r=t(12);e.exports=function(e){return r(e)&&o(e)}},function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";t(88)},function(e,n,t){"use strict";t(89)},function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";t(90)},function(e,n,t){"use strict";t(91)},function(e,n,t){"use strict";t.r(n);
/*!
 * Vue.js v2.7.14
 * (c) 2014-2022 Evan You
 * Released under the MIT License.
 */
var o=Object.freeze({}),r=Array.isArray;function a(e){return null==e}function s(e){return null!=e}function i(e){return!0===e}function c(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function u(e){return"function"==typeof e}function l(e){return null!==e&&"object"==typeof e}var d=Object.prototype.toString;function p(e){return"[object Object]"===d.call(e)}function f(e){return"[object RegExp]"===d.call(e)}function h(e){var n=parseFloat(String(e));return n>=0&&Math.floor(n)===n&&isFinite(e)}function m(e){return s(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function v(e){return null==e?"":Array.isArray(e)||p(e)&&e.toString===d?JSON.stringify(e,null,2):String(e)}function x(e){var n=parseFloat(e);return isNaN(n)?e:n}function g(e,n){for(var t=Object.create(null),o=e.split(","),r=0;r<o.length;r++)t[o[r]]=!0;return n?function(e){return t[e.toLowerCase()]}:function(e){return t[e]}}g("slot,component",!0);var b=g("key,ref,slot,slot-scope,is");function y(e,n){var t=e.length;if(t){if(n===e[t-1])return void(e.length=t-1);var o=e.indexOf(n);if(o>-1)return e.splice(o,1)}}var k=Object.prototype.hasOwnProperty;function _(e,n){return k.call(e,n)}function w(e){var n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}var C=/-(\w)/g,R=w((function(e){return e.replace(C,(function(e,n){return n?n.toUpperCase():""}))})),j=w((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),S=/\B([A-Z])/g,T=w((function(e){return e.replace(S,"-$1").toLowerCase()}));var E=Function.prototype.bind?function(e,n){return e.bind(n)}:function(e,n){function t(t){var o=arguments.length;return o?o>1?e.apply(n,arguments):e.call(n,t):e.call(n)}return t._length=e.length,t};function O(e,n){n=n||0;for(var t=e.length-n,o=new Array(t);t--;)o[t]=e[t+n];return o}function I(e,n){for(var t in n)e[t]=n[t];return e}function A(e){for(var n={},t=0;t<e.length;t++)e[t]&&I(n,e[t]);return n}function $(e,n,t){}var D=function(e,n,t){return!1},z=function(e){return e};function M(e,n){if(e===n)return!0;var t=l(e),o=l(n);if(!t||!o)return!t&&!o&&String(e)===String(n);try{var r=Array.isArray(e),a=Array.isArray(n);if(r&&a)return e.length===n.length&&e.every((function(e,t){return M(e,n[t])}));if(e instanceof Date&&n instanceof Date)return e.getTime()===n.getTime();if(r||a)return!1;var s=Object.keys(e),i=Object.keys(n);return s.length===i.length&&s.every((function(t){return M(e[t],n[t])}))}catch(e){return!1}}function P(e,n){for(var t=0;t<e.length;t++)if(M(e[t],n))return t;return-1}function H(e){var n=!1;return function(){n||(n=!0,e.apply(this,arguments))}}function L(e,n){return e===n?0===e&&1/e!=1/n:e==e||n==n}var B=["component","directive","filter"],U=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],V={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:D,isReservedAttr:D,isUnknownElement:D,getTagNamespace:$,parsePlatformTagName:z,mustUseProp:D,async:!0,_lifecycleHooks:U},F=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function N(e){var n=(e+"").charCodeAt(0);return 36===n||95===n}function q(e,n,t,o){Object.defineProperty(e,n,{value:t,enumerable:!!o,writable:!0,configurable:!0})}var W=new RegExp("[^".concat(F.source,".$_\\d]"));var X="__proto__"in{},J="undefined"!=typeof window,G=J&&window.navigator.userAgent.toLowerCase(),Z=G&&/msie|trident/.test(G),K=G&&G.indexOf("msie 9.0")>0,Y=G&&G.indexOf("edge/")>0;G&&G.indexOf("android");var Q=G&&/iphone|ipad|ipod|ios/.test(G);G&&/chrome\/\d+/.test(G),G&&/phantomjs/.test(G);var ee,ne=G&&G.match(/firefox\/(\d+)/),te={}.watch,oe=!1;if(J)try{var re={};Object.defineProperty(re,"passive",{get:function(){oe=!0}}),window.addEventListener("test-passive",null,re)}catch(e){}var ae=function(){return void 0===ee&&(ee=!J&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),ee},se=J&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ie(e){return"function"==typeof e&&/native code/.test(e.toString())}var ce,ue="undefined"!=typeof Symbol&&ie(Symbol)&&"undefined"!=typeof Reflect&&ie(Reflect.ownKeys);ce="undefined"!=typeof Set&&ie(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var le=null;function de(e){void 0===e&&(e=null),e||le&&le._scope.off(),le=e,e&&e._scope.on()}var pe=function(){function e(e,n,t,o,r,a,s,i){this.tag=e,this.data=n,this.children=t,this.text=o,this.elm=r,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=n&&n.key,this.componentOptions=s,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=i,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),fe=function(e){void 0===e&&(e="");var n=new pe;return n.text=e,n.isComment=!0,n};function he(e){return new pe(void 0,void 0,void 0,String(e))}function me(e){var n=new pe(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return n.ns=e.ns,n.isStatic=e.isStatic,n.key=e.key,n.isComment=e.isComment,n.fnContext=e.fnContext,n.fnOptions=e.fnOptions,n.fnScopeId=e.fnScopeId,n.asyncMeta=e.asyncMeta,n.isCloned=!0,n}var ve=0,xe=[],ge=function(){function e(){this._pending=!1,this.id=ve++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,xe.push(this))},e.prototype.depend=function(n){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var n=this.subs.filter((function(e){return e}));for(var t=0,o=n.length;t<o;t++){0,n[t].update()}},e}();ge.target=null;var be=[];function ye(e){be.push(e),ge.target=e}function ke(){be.pop(),ge.target=be[be.length-1]}var _e=Array.prototype,we=Object.create(_e);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var n=_e[e];q(we,e,(function(){for(var t=[],o=0;o<arguments.length;o++)t[o]=arguments[o];var r,a=n.apply(this,t),s=this.__ob__;switch(e){case"push":case"unshift":r=t;break;case"splice":r=t.slice(2)}return r&&s.observeArray(r),s.dep.notify(),a}))}));var Ce=Object.getOwnPropertyNames(we),Re={},je=!0;function Se(e){je=e}var Te={notify:$,depend:$,addSub:$,removeSub:$},Ee=function(){function e(e,n,t){if(void 0===n&&(n=!1),void 0===t&&(t=!1),this.value=e,this.shallow=n,this.mock=t,this.dep=t?Te:new ge,this.vmCount=0,q(e,"__ob__",this),r(e)){if(!t)if(X)e.__proto__=we;else for(var o=0,a=Ce.length;o<a;o++){q(e,i=Ce[o],we[i])}n||this.observeArray(e)}else{var s=Object.keys(e);for(o=0;o<s.length;o++){var i;Ie(e,i=s[o],Re,void 0,n,t)}}}return e.prototype.observeArray=function(e){for(var n=0,t=e.length;n<t;n++)Oe(e[n],!1,this.mock)},e}();function Oe(e,n,t){return e&&_(e,"__ob__")&&e.__ob__ instanceof Ee?e.__ob__:!je||!t&&ae()||!r(e)&&!p(e)||!Object.isExtensible(e)||e.__v_skip||He(e)||e instanceof pe?void 0:new Ee(e,n,t)}function Ie(e,n,t,o,a,s){var i=new ge,c=Object.getOwnPropertyDescriptor(e,n);if(!c||!1!==c.configurable){var u=c&&c.get,l=c&&c.set;u&&!l||t!==Re&&2!==arguments.length||(t=e[n]);var d=!a&&Oe(t,!1,s);return Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var n=u?u.call(e):t;return ge.target&&(i.depend(),d&&(d.dep.depend(),r(n)&&De(n))),He(n)&&!a?n.value:n},set:function(n){var o=u?u.call(e):t;if(L(o,n)){if(l)l.call(e,n);else{if(u)return;if(!a&&He(o)&&!He(n))return void(o.value=n);t=n}d=!a&&Oe(n,!1,s),i.notify()}}}),i}}function Ae(e,n,t){if(!Pe(e)){var o=e.__ob__;return r(e)&&h(n)?(e.length=Math.max(e.length,n),e.splice(n,1,t),o&&!o.shallow&&o.mock&&Oe(t,!1,!0),t):n in e&&!(n in Object.prototype)?(e[n]=t,t):e._isVue||o&&o.vmCount?t:o?(Ie(o.value,n,t,void 0,o.shallow,o.mock),o.dep.notify(),t):(e[n]=t,t)}}function $e(e,n){if(r(e)&&h(n))e.splice(n,1);else{var t=e.__ob__;e._isVue||t&&t.vmCount||Pe(e)||_(e,n)&&(delete e[n],t&&t.dep.notify())}}function De(e){for(var n=void 0,t=0,o=e.length;t<o;t++)(n=e[t])&&n.__ob__&&n.__ob__.dep.depend(),r(n)&&De(n)}function ze(e){return Me(e,!0),q(e,"__v_isShallow",!0),e}function Me(e,n){if(!Pe(e)){Oe(e,n,ae());0}}function Pe(e){return!(!e||!e.__v_isReadonly)}function He(e){return!(!e||!0!==e.__v_isRef)}function Le(e,n,t){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var e=n[t];if(He(e))return e.value;var o=e&&e.__ob__;return o&&o.dep.depend(),e},set:function(e){var o=n[t];He(o)&&!He(e)?o.value=e:n[t]=e}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var Be;var Ue=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Be,!e&&Be&&(this.index=(Be.scopes||(Be.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var n=Be;try{return Be=this,e()}finally{Be=n}}else 0},e.prototype.on=function(){Be=this},e.prototype.off=function(){Be=this.parent},e.prototype.stop=function(e){if(this.active){var n=void 0,t=void 0;for(n=0,t=this.effects.length;n<t;n++)this.effects[n].teardown();for(n=0,t=this.cleanups.length;n<t;n++)this.cleanups[n]();if(this.scopes)for(n=0,t=this.scopes.length;n<t;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!e){var o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this.active=!1}},e}();function Ve(e){var n=e._provided,t=e.$parent&&e.$parent._provided;return t===n?e._provided=Object.create(t):n}var Fe=w((function(e){var n="&"===e.charAt(0),t="~"===(e=n?e.slice(1):e).charAt(0),o="!"===(e=t?e.slice(1):e).charAt(0);return{name:e=o?e.slice(1):e,once:t,capture:o,passive:n}}));function Ne(e,n){function t(){var e=t.fns;if(!r(e))return Sn(e,null,arguments,n,"v-on handler");for(var o=e.slice(),a=0;a<o.length;a++)Sn(o[a],null,arguments,n,"v-on handler")}return t.fns=e,t}function qe(e,n,t,o,r,s){var c,u,l,d;for(c in e)u=e[c],l=n[c],d=Fe(c),a(u)||(a(l)?(a(u.fns)&&(u=e[c]=Ne(u,s)),i(d.once)&&(u=e[c]=r(d.name,u,d.capture)),t(d.name,u,d.capture,d.passive,d.params)):u!==l&&(l.fns=u,e[c]=l));for(c in n)a(e[c])&&o((d=Fe(c)).name,n[c],d.capture)}function We(e,n,t){var o;e instanceof pe&&(e=e.data.hook||(e.data.hook={}));var r=e[n];function c(){t.apply(this,arguments),y(o.fns,c)}a(r)?o=Ne([c]):s(r.fns)&&i(r.merged)?(o=r).fns.push(c):o=Ne([r,c]),o.merged=!0,e[n]=o}function Xe(e,n,t,o,r){if(s(n)){if(_(n,t))return e[t]=n[t],r||delete n[t],!0;if(_(n,o))return e[t]=n[o],r||delete n[o],!0}return!1}function Je(e){return c(e)?[he(e)]:r(e)?function e(n,t){var o,u,l,d,p=[];for(o=0;o<n.length;o++)a(u=n[o])||"boolean"==typeof u||(l=p.length-1,d=p[l],r(u)?u.length>0&&(Ge((u=e(u,"".concat(t||"","_").concat(o)))[0])&&Ge(d)&&(p[l]=he(d.text+u[0].text),u.shift()),p.push.apply(p,u)):c(u)?Ge(d)?p[l]=he(d.text+u):""!==u&&p.push(he(u)):Ge(u)&&Ge(d)?p[l]=he(d.text+u.text):(i(n._isVList)&&s(u.tag)&&a(u.key)&&s(t)&&(u.key="__vlist".concat(t,"_").concat(o,"__")),p.push(u)));return p}(e):void 0}function Ge(e){return s(e)&&s(e.text)&&!1===e.isComment}function Ze(e,n){var t,o,a,i,c=null;if(r(e)||"string"==typeof e)for(c=new Array(e.length),t=0,o=e.length;t<o;t++)c[t]=n(e[t],t);else if("number"==typeof e)for(c=new Array(e),t=0;t<e;t++)c[t]=n(t+1,t);else if(l(e))if(ue&&e[Symbol.iterator]){c=[];for(var u=e[Symbol.iterator](),d=u.next();!d.done;)c.push(n(d.value,c.length)),d=u.next()}else for(a=Object.keys(e),c=new Array(a.length),t=0,o=a.length;t<o;t++)i=a[t],c[t]=n(e[i],i,t);return s(c)||(c=[]),c._isVList=!0,c}function Ke(e,n,t,o){var r,a=this.$scopedSlots[e];a?(t=t||{},o&&(t=I(I({},o),t)),r=a(t)||(u(n)?n():n)):r=this.$slots[e]||(u(n)?n():n);var s=t&&t.slot;return s?this.$createElement("template",{slot:s},r):r}function Ye(e){return Ot(this.$options,"filters",e,!0)||z}function Qe(e,n){return r(e)?-1===e.indexOf(n):e!==n}function en(e,n,t,o,r){var a=V.keyCodes[n]||t;return r&&o&&!V.keyCodes[n]?Qe(r,o):a?Qe(a,e):o?T(o)!==n:void 0===e}function nn(e,n,t,o,a){if(t)if(l(t)){r(t)&&(t=A(t));var s=void 0,i=function(r){if("class"===r||"style"===r||b(r))s=e;else{var i=e.attrs&&e.attrs.type;s=o||V.mustUseProp(n,i,r)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var c=R(r),u=T(r);c in s||u in s||(s[r]=t[r],a&&((e.on||(e.on={}))["update:".concat(r)]=function(e){t[r]=e}))};for(var c in t)i(c)}else;return e}function tn(e,n){var t=this._staticTrees||(this._staticTrees=[]),o=t[e];return o&&!n||rn(o=t[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),o}function on(e,n,t){return rn(e,"__once__".concat(n).concat(t?"_".concat(t):""),!0),e}function rn(e,n,t){if(r(e))for(var o=0;o<e.length;o++)e[o]&&"string"!=typeof e[o]&&an(e[o],"".concat(n,"_").concat(o),t);else an(e,n,t)}function an(e,n,t){e.isStatic=!0,e.key=n,e.isOnce=t}function sn(e,n){if(n)if(p(n)){var t=e.on=e.on?I({},e.on):{};for(var o in n){var r=t[o],a=n[o];t[o]=r?[].concat(r,a):a}}else;return e}function cn(e,n,t,o){n=n||{$stable:!t};for(var a=0;a<e.length;a++){var s=e[a];r(s)?cn(s,n,t):s&&(s.proxy&&(s.fn.proxy=!0),n[s.key]=s.fn)}return o&&(n.$key=o),n}function un(e,n){for(var t=0;t<n.length;t+=2){var o=n[t];"string"==typeof o&&o&&(e[n[t]]=n[t+1])}return e}function ln(e,n){return"string"==typeof e?n+e:e}function dn(e){e._o=on,e._n=x,e._s=v,e._l=Ze,e._t=Ke,e._q=M,e._i=P,e._m=tn,e._f=Ye,e._k=en,e._b=nn,e._v=he,e._e=fe,e._u=cn,e._g=sn,e._d=un,e._p=ln}function pn(e,n){if(!e||!e.length)return{};for(var t={},o=0,r=e.length;o<r;o++){var a=e[o],s=a.data;if(s&&s.attrs&&s.attrs.slot&&delete s.attrs.slot,a.context!==n&&a.fnContext!==n||!s||null==s.slot)(t.default||(t.default=[])).push(a);else{var i=s.slot,c=t[i]||(t[i]=[]);"template"===a.tag?c.push.apply(c,a.children||[]):c.push(a)}}for(var u in t)t[u].every(fn)&&delete t[u];return t}function fn(e){return e.isComment&&!e.asyncFactory||" "===e.text}function hn(e){return e.isComment&&e.asyncFactory}function mn(e,n,t,r){var a,s=Object.keys(t).length>0,i=n?!!n.$stable:!s,c=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(i&&r&&r!==o&&c===r.$key&&!s&&!r.$hasNormal)return r;for(var u in a={},n)n[u]&&"$"!==u[0]&&(a[u]=vn(e,t,u,n[u]))}else a={};for(var l in t)l in a||(a[l]=xn(t,l));return n&&Object.isExtensible(n)&&(n._normalized=a),q(a,"$stable",i),q(a,"$key",c),q(a,"$hasNormal",s),a}function vn(e,n,t,o){var a=function(){var n=le;de(e);var t=arguments.length?o.apply(null,arguments):o({}),a=(t=t&&"object"==typeof t&&!r(t)?[t]:Je(t))&&t[0];return de(n),t&&(!a||1===t.length&&a.isComment&&!hn(a))?void 0:t};return o.proxy&&Object.defineProperty(n,t,{get:a,enumerable:!0,configurable:!0}),a}function xn(e,n){return function(){return e[n]}}function gn(e){return{get attrs(){if(!e._attrsProxy){var n=e._attrsProxy={};q(n,"_v_attr_proxy",!0),bn(n,e.$attrs,o,e,"$attrs")}return e._attrsProxy},get listeners(){e._listenersProxy||bn(e._listenersProxy={},e.$listeners,o,e,"$listeners");return e._listenersProxy},get slots(){return function(e){e._slotsProxy||kn(e._slotsProxy={},e.$scopedSlots);return e._slotsProxy}(e)},emit:E(e.$emit,e),expose:function(n){n&&Object.keys(n).forEach((function(t){return Le(e,n,t)}))}}}function bn(e,n,t,o,r){var a=!1;for(var s in n)s in e?n[s]!==t[s]&&(a=!0):(a=!0,yn(e,s,o,r));for(var s in e)s in n||(a=!0,delete e[s]);return a}function yn(e,n,t,o){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){return t[o][n]}})}function kn(e,n){for(var t in n)e[t]=n[t];for(var t in e)t in n||delete e[t]}var _n=null;function wn(e,n){return(e.__esModule||ue&&"Module"===e[Symbol.toStringTag])&&(e=e.default),l(e)?n.extend(e):e}function Cn(e){if(r(e))for(var n=0;n<e.length;n++){var t=e[n];if(s(t)&&(s(t.componentOptions)||hn(t)))return t}}function Rn(e,n,t,o,d,p){return(r(t)||c(t))&&(d=o,o=t,t=void 0),i(p)&&(d=2),function(e,n,t,o,c){if(s(t)&&s(t.__ob__))return fe();s(t)&&s(t.is)&&(n=t.is);if(!n)return fe();0;r(o)&&u(o[0])&&((t=t||{}).scopedSlots={default:o[0]},o.length=0);2===c?o=Je(o):1===c&&(o=function(e){for(var n=0;n<e.length;n++)if(r(e[n]))return Array.prototype.concat.apply([],e);return e}(o));var d,p;if("string"==typeof n){var f=void 0;p=e.$vnode&&e.$vnode.ns||V.getTagNamespace(n),d=V.isReservedTag(n)?new pe(V.parsePlatformTagName(n),t,o,void 0,void 0,e):t&&t.pre||!s(f=Ot(e.$options,"components",n))?new pe(n,t,o,void 0,void 0,e):yt(f,t,e,o,n)}else d=yt(n,t,e,o);return r(d)?d:s(d)?(s(p)&&function e(n,t,o){n.ns=t,"foreignObject"===n.tag&&(t=void 0,o=!0);if(s(n.children))for(var r=0,c=n.children.length;r<c;r++){var u=n.children[r];s(u.tag)&&(a(u.ns)||i(o)&&"svg"!==u.tag)&&e(u,t,o)}}(d,p),s(t)&&function(e){l(e.style)&&Vn(e.style);l(e.class)&&Vn(e.class)}(t),d):fe()}(e,n,t,o,d)}function jn(e,n,t){ye();try{if(n)for(var o=n;o=o.$parent;){var r=o.$options.errorCaptured;if(r)for(var a=0;a<r.length;a++)try{if(!1===r[a].call(o,e,n,t))return}catch(e){Tn(e,o,"errorCaptured hook")}}Tn(e,n,t)}finally{ke()}}function Sn(e,n,t,o,r){var a;try{(a=t?e.apply(n,t):e.call(n))&&!a._isVue&&m(a)&&!a._handled&&(a.catch((function(e){return jn(e,o,r+" (Promise/async)")})),a._handled=!0)}catch(e){jn(e,o,r)}return a}function Tn(e,n,t){if(V.errorHandler)try{return V.errorHandler.call(null,e,n,t)}catch(n){n!==e&&En(n,null,"config.errorHandler")}En(e,n,t)}function En(e,n,t){if(!J||"undefined"==typeof console)throw e;console.error(e)}var On,In=!1,An=[],$n=!1;function Dn(){$n=!1;var e=An.slice(0);An.length=0;for(var n=0;n<e.length;n++)e[n]()}if("undefined"!=typeof Promise&&ie(Promise)){var zn=Promise.resolve();On=function(){zn.then(Dn),Q&&setTimeout($)},In=!0}else if(Z||"undefined"==typeof MutationObserver||!ie(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())On="undefined"!=typeof setImmediate&&ie(setImmediate)?function(){setImmediate(Dn)}:function(){setTimeout(Dn,0)};else{var Mn=1,Pn=new MutationObserver(Dn),Hn=document.createTextNode(String(Mn));Pn.observe(Hn,{characterData:!0}),On=function(){Mn=(Mn+1)%2,Hn.data=String(Mn)},In=!0}function Ln(e,n){var t;if(An.push((function(){if(e)try{e.call(n)}catch(e){jn(e,n,"nextTick")}else t&&t(n)})),$n||($n=!0,On()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){t=e}))}function Bn(e){return function(n,t){if(void 0===t&&(t=le),t)return function(e,n,t){var o=e.$options;o[n]=jt(o[n],t)}(t,e,n)}}Bn("beforeMount"),Bn("mounted"),Bn("beforeUpdate"),Bn("updated"),Bn("beforeDestroy"),Bn("destroyed"),Bn("activated"),Bn("deactivated"),Bn("serverPrefetch"),Bn("renderTracked"),Bn("renderTriggered"),Bn("errorCaptured");var Un=new ce;function Vn(e){return function e(n,t){var o,a,s=r(n);if(!s&&!l(n)||n.__v_skip||Object.isFrozen(n)||n instanceof pe)return;if(n.__ob__){var i=n.__ob__.dep.id;if(t.has(i))return;t.add(i)}if(s)for(o=n.length;o--;)e(n[o],t);else if(He(n))e(n.value,t);else for(a=Object.keys(n),o=a.length;o--;)e(n[a[o]],t)}(e,Un),Un.clear(),e}var Fn,Nn=0,qn=function(){function e(e,n,t,o,r){var a,s;a=this,void 0===(s=Be&&!Be._vm?Be:e?e._scope:void 0)&&(s=Be),s&&s.active&&s.effects.push(a),(this.vm=e)&&r&&(e._watcher=this),o?(this.deep=!!o.deep,this.user=!!o.user,this.lazy=!!o.lazy,this.sync=!!o.sync,this.before=o.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Nn,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ce,this.newDepIds=new ce,this.expression="",u(n)?this.getter=n:(this.getter=function(e){if(!W.test(e)){var n=e.split(".");return function(e){for(var t=0;t<n.length;t++){if(!e)return;e=e[n[t]]}return e}}}(n),this.getter||(this.getter=$)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;ye(this);var n=this.vm;try{e=this.getter.call(n,n)}catch(e){if(!this.user)throw e;jn(e,n,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Vn(e),ke(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var n=e.id;this.newDepIds.has(n)||(this.newDepIds.add(n),this.newDeps.push(e),this.depIds.has(n)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var n=this.deps[e];this.newDepIds.has(n.id)||n.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():pt(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||l(e)||this.deep){var n=this.value;if(this.value=e,this.user){var t='callback for watcher "'.concat(this.expression,'"');Sn(this.cb,this.vm,[e,n],this.vm,t)}else this.cb.call(this.vm,e,n)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&y(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}();function Wn(e,n){Fn.$on(e,n)}function Xn(e,n){Fn.$off(e,n)}function Jn(e,n){var t=Fn;return function o(){var r=n.apply(null,arguments);null!==r&&t.$off(e,o)}}function Gn(e,n,t){Fn=e,qe(n,t||{},Wn,Xn,Jn,e),Fn=void 0}var Zn=null;function Kn(e){var n=Zn;return Zn=e,function(){Zn=n}}function Yn(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Qn(e,n){if(n){if(e._directInactive=!1,Yn(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var t=0;t<e.$children.length;t++)Qn(e.$children[t]);et(e,"activated")}}function et(e,n,t,o){void 0===o&&(o=!0),ye();var r=le;o&&de(e);var a=e.$options[n],s="".concat(n," hook");if(a)for(var i=0,c=a.length;i<c;i++)Sn(a[i],e,t||null,e,s);e._hasHookEvent&&e.$emit("hook:"+n),o&&de(r),ke()}var nt=[],tt=[],ot={},rt=!1,at=!1,st=0;var it=0,ct=Date.now;if(J&&!Z){var ut=window.performance;ut&&"function"==typeof ut.now&&ct()>document.createEvent("Event").timeStamp&&(ct=function(){return ut.now()})}var lt=function(e,n){if(e.post){if(!n.post)return 1}else if(n.post)return-1;return e.id-n.id};function dt(){var e,n;for(it=ct(),at=!0,nt.sort(lt),st=0;st<nt.length;st++)(e=nt[st]).before&&e.before(),n=e.id,ot[n]=null,e.run();var t=tt.slice(),o=nt.slice();st=nt.length=tt.length=0,ot={},rt=at=!1,function(e){for(var n=0;n<e.length;n++)e[n]._inactive=!0,Qn(e[n],!0)}(t),function(e){var n=e.length;for(;n--;){var t=e[n],o=t.vm;o&&o._watcher===t&&o._isMounted&&!o._isDestroyed&&et(o,"updated")}}(o),function(){for(var e=0;e<xe.length;e++){var n=xe[e];n.subs=n.subs.filter((function(e){return e})),n._pending=!1}xe.length=0}(),se&&V.devtools&&se.emit("flush")}function pt(e){var n=e.id;if(null==ot[n]&&(e!==ge.target||!e.noRecurse)){if(ot[n]=!0,at){for(var t=nt.length-1;t>st&&nt[t].id>e.id;)t--;nt.splice(t+1,0,e)}else nt.push(e);rt||(rt=!0,Ln(dt))}}function ft(e,n){if(e){for(var t=Object.create(null),o=ue?Reflect.ownKeys(e):Object.keys(e),r=0;r<o.length;r++){var a=o[r];if("__ob__"!==a){var s=e[a].from;if(s in n._provided)t[a]=n._provided[s];else if("default"in e[a]){var i=e[a].default;t[a]=u(i)?i.call(n):i}else 0}}return t}}function ht(e,n,t,a,s){var c,u=this,l=s.options;_(a,"_uid")?(c=Object.create(a))._original=a:(c=a,a=a._original);var d=i(l._compiled),p=!d;this.data=e,this.props=n,this.children=t,this.parent=a,this.listeners=e.on||o,this.injections=ft(l.inject,a),this.slots=function(){return u.$slots||mn(a,e.scopedSlots,u.$slots=pn(t,a)),u.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return mn(a,e.scopedSlots,this.slots())}}),d&&(this.$options=l,this.$slots=this.slots(),this.$scopedSlots=mn(a,e.scopedSlots,this.$slots)),l._scopeId?this._c=function(e,n,t,o){var s=Rn(c,e,n,t,o,p);return s&&!r(s)&&(s.fnScopeId=l._scopeId,s.fnContext=a),s}:this._c=function(e,n,t,o){return Rn(c,e,n,t,o,p)}}function mt(e,n,t,o,r){var a=me(e);return a.fnContext=t,a.fnOptions=o,n.slot&&((a.data||(a.data={})).slot=n.slot),a}function vt(e,n){for(var t in n)e[R(t)]=n[t]}function xt(e){return e.name||e.__name||e._componentTag}dn(ht.prototype);var gt={init:function(e,n){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var t=e;gt.prepatch(t,t)}else{(e.componentInstance=function(e,n){var t={_isComponent:!0,_parentVnode:e,parent:n},o=e.data.inlineTemplate;s(o)&&(t.render=o.render,t.staticRenderFns=o.staticRenderFns);return new e.componentOptions.Ctor(t)}(e,Zn)).$mount(n?e.elm:void 0,n)}},prepatch:function(e,n){var t=n.componentOptions;!function(e,n,t,r,a){var s=r.data.scopedSlots,i=e.$scopedSlots,c=!!(s&&!s.$stable||i!==o&&!i.$stable||s&&e.$scopedSlots.$key!==s.$key||!s&&e.$scopedSlots.$key),u=!!(a||e.$options._renderChildren||c),l=e.$vnode;e.$options._parentVnode=r,e.$vnode=r,e._vnode&&(e._vnode.parent=r),e.$options._renderChildren=a;var d=r.data.attrs||o;e._attrsProxy&&bn(e._attrsProxy,d,l.data&&l.data.attrs||o,e,"$attrs")&&(u=!0),e.$attrs=d,t=t||o;var p=e.$options._parentListeners;if(e._listenersProxy&&bn(e._listenersProxy,t,p||o,e,"$listeners"),e.$listeners=e.$options._parentListeners=t,Gn(e,t,p),n&&e.$options.props){Se(!1);for(var f=e._props,h=e.$options._propKeys||[],m=0;m<h.length;m++){var v=h[m],x=e.$options.props;f[v]=It(v,x,n,e)}Se(!0),e.$options.propsData=n}u&&(e.$slots=pn(a,r.context),e.$forceUpdate())}(n.componentInstance=e.componentInstance,t.propsData,t.listeners,n,t.children)},insert:function(e){var n,t=e.context,o=e.componentInstance;o._isMounted||(o._isMounted=!0,et(o,"mounted")),e.data.keepAlive&&(t._isMounted?((n=o)._inactive=!1,tt.push(n)):Qn(o,!0))},destroy:function(e){var n=e.componentInstance;n._isDestroyed||(e.data.keepAlive?function e(n,t){if(!(t&&(n._directInactive=!0,Yn(n))||n._inactive)){n._inactive=!0;for(var o=0;o<n.$children.length;o++)e(n.$children[o]);et(n,"deactivated")}}(n,!0):n.$destroy())}},bt=Object.keys(gt);function yt(e,n,t,c,u){if(!a(e)){var d=t.$options._base;if(l(e)&&(e=d.extend(e)),"function"==typeof e){var p;if(a(e.cid)&&void 0===(e=function(e,n){if(i(e.error)&&s(e.errorComp))return e.errorComp;if(s(e.resolved))return e.resolved;var t=_n;if(t&&s(e.owners)&&-1===e.owners.indexOf(t)&&e.owners.push(t),i(e.loading)&&s(e.loadingComp))return e.loadingComp;if(t&&!s(e.owners)){var o=e.owners=[t],r=!0,c=null,u=null;t.$on("hook:destroyed",(function(){return y(o,t)}));var d=function(e){for(var n=0,t=o.length;n<t;n++)o[n].$forceUpdate();e&&(o.length=0,null!==c&&(clearTimeout(c),c=null),null!==u&&(clearTimeout(u),u=null))},p=H((function(t){e.resolved=wn(t,n),r?o.length=0:d(!0)})),f=H((function(n){s(e.errorComp)&&(e.error=!0,d(!0))})),h=e(p,f);return l(h)&&(m(h)?a(e.resolved)&&h.then(p,f):m(h.component)&&(h.component.then(p,f),s(h.error)&&(e.errorComp=wn(h.error,n)),s(h.loading)&&(e.loadingComp=wn(h.loading,n),0===h.delay?e.loading=!0:c=setTimeout((function(){c=null,a(e.resolved)&&a(e.error)&&(e.loading=!0,d(!1))}),h.delay||200)),s(h.timeout)&&(u=setTimeout((function(){u=null,a(e.resolved)&&f(null)}),h.timeout)))),r=!1,e.loading?e.loadingComp:e.resolved}}(p=e,d)))return function(e,n,t,o,r){var a=fe();return a.asyncFactory=e,a.asyncMeta={data:n,context:t,children:o,tag:r},a}(p,n,t,c,u);n=n||{},qt(e),s(n.model)&&function(e,n){var t=e.model&&e.model.prop||"value",o=e.model&&e.model.event||"input";(n.attrs||(n.attrs={}))[t]=n.model.value;var a=n.on||(n.on={}),i=a[o],c=n.model.callback;s(i)?(r(i)?-1===i.indexOf(c):i!==c)&&(a[o]=[c].concat(i)):a[o]=c}(e.options,n);var f=function(e,n,t){var o=n.options.props;if(!a(o)){var r={},i=e.attrs,c=e.props;if(s(i)||s(c))for(var u in o){var l=T(u);Xe(r,c,u,l,!0)||Xe(r,i,u,l,!1)}return r}}(n,e);if(i(e.options.functional))return function(e,n,t,a,i){var c=e.options,u={},l=c.props;if(s(l))for(var d in l)u[d]=It(d,l,n||o);else s(t.attrs)&&vt(u,t.attrs),s(t.props)&&vt(u,t.props);var p=new ht(t,u,i,a,e),f=c.render.call(null,p._c,p);if(f instanceof pe)return mt(f,t,p.parent,c,p);if(r(f)){for(var h=Je(f)||[],m=new Array(h.length),v=0;v<h.length;v++)m[v]=mt(h[v],t,p.parent,c,p);return m}}(e,f,n,t,c);var h=n.on;if(n.on=n.nativeOn,i(e.options.abstract)){var v=n.slot;n={},v&&(n.slot=v)}!function(e){for(var n=e.hook||(e.hook={}),t=0;t<bt.length;t++){var o=bt[t],r=n[o],a=gt[o];r===a||r&&r._merged||(n[o]=r?kt(a,r):a)}}(n);var x=xt(e.options)||u;return new pe("vue-component-".concat(e.cid).concat(x?"-".concat(x):""),n,void 0,void 0,void 0,t,{Ctor:e,propsData:f,listeners:h,tag:u,children:c},p)}}}function kt(e,n){var t=function(t,o){e(t,o),n(t,o)};return t._merged=!0,t}var _t=$,wt=V.optionMergeStrategies;function Ct(e,n,t){if(void 0===t&&(t=!0),!n)return e;for(var o,r,a,s=ue?Reflect.ownKeys(n):Object.keys(n),i=0;i<s.length;i++)"__ob__"!==(o=s[i])&&(r=e[o],a=n[o],t&&_(e,o)?r!==a&&p(r)&&p(a)&&Ct(r,a):Ae(e,o,a));return e}function Rt(e,n,t){return t?function(){var o=u(n)?n.call(t,t):n,r=u(e)?e.call(t,t):e;return o?Ct(o,r):r}:n?e?function(){return Ct(u(n)?n.call(this,this):n,u(e)?e.call(this,this):e)}:n:e}function jt(e,n){var t=n?e?e.concat(n):r(n)?n:[n]:e;return t?function(e){for(var n=[],t=0;t<e.length;t++)-1===n.indexOf(e[t])&&n.push(e[t]);return n}(t):t}function St(e,n,t,o){var r=Object.create(e||null);return n?I(r,n):r}wt.data=function(e,n,t){return t?Rt(e,n,t):n&&"function"!=typeof n?e:Rt(e,n)},U.forEach((function(e){wt[e]=jt})),B.forEach((function(e){wt[e+"s"]=St})),wt.watch=function(e,n,t,o){if(e===te&&(e=void 0),n===te&&(n=void 0),!n)return Object.create(e||null);if(!e)return n;var a={};for(var s in I(a,e),n){var i=a[s],c=n[s];i&&!r(i)&&(i=[i]),a[s]=i?i.concat(c):r(c)?c:[c]}return a},wt.props=wt.methods=wt.inject=wt.computed=function(e,n,t,o){if(!e)return n;var r=Object.create(null);return I(r,e),n&&I(r,n),r},wt.provide=function(e,n){return e?function(){var t=Object.create(null);return Ct(t,u(e)?e.call(this):e),n&&Ct(t,u(n)?n.call(this):n,!1),t}:n};var Tt=function(e,n){return void 0===n?e:n};function Et(e,n,t){if(u(n)&&(n=n.options),function(e,n){var t=e.props;if(t){var o,a,s={};if(r(t))for(o=t.length;o--;)"string"==typeof(a=t[o])&&(s[R(a)]={type:null});else if(p(t))for(var i in t)a=t[i],s[R(i)]=p(a)?a:{type:a};else 0;e.props=s}}(n),function(e,n){var t=e.inject;if(t){var o=e.inject={};if(r(t))for(var a=0;a<t.length;a++)o[t[a]]={from:t[a]};else if(p(t))for(var s in t){var i=t[s];o[s]=p(i)?I({from:s},i):{from:i}}else 0}}(n),function(e){var n=e.directives;if(n)for(var t in n){var o=n[t];u(o)&&(n[t]={bind:o,update:o})}}(n),!n._base&&(n.extends&&(e=Et(e,n.extends,t)),n.mixins))for(var o=0,a=n.mixins.length;o<a;o++)e=Et(e,n.mixins[o],t);var s,i={};for(s in e)c(s);for(s in n)_(e,s)||c(s);function c(o){var r=wt[o]||Tt;i[o]=r(e[o],n[o],t,o)}return i}function Ot(e,n,t,o){if("string"==typeof t){var r=e[n];if(_(r,t))return r[t];var a=R(t);if(_(r,a))return r[a];var s=j(a);return _(r,s)?r[s]:r[t]||r[a]||r[s]}}function It(e,n,t,o){var r=n[e],a=!_(t,e),s=t[e],i=zt(Boolean,r.type);if(i>-1)if(a&&!_(r,"default"))s=!1;else if(""===s||s===T(e)){var c=zt(String,r.type);(c<0||i<c)&&(s=!0)}if(void 0===s){s=function(e,n,t){if(!_(n,"default"))return;var o=n.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[t]&&void 0!==e._props[t])return e._props[t];return u(o)&&"Function"!==$t(n.type)?o.call(e):o}(o,r,e);var l=je;Se(!0),Oe(s),Se(l)}return s}var At=/^\s*function (\w+)/;function $t(e){var n=e&&e.toString().match(At);return n?n[1]:""}function Dt(e,n){return $t(e)===$t(n)}function zt(e,n){if(!r(n))return Dt(n,e)?0:-1;for(var t=0,o=n.length;t<o;t++)if(Dt(n[t],e))return t;return-1}var Mt={enumerable:!0,configurable:!0,get:$,set:$};function Pt(e,n,t){Mt.get=function(){return this[n][t]},Mt.set=function(e){this[n][t]=e},Object.defineProperty(e,t,Mt)}function Ht(e){var n=e.$options;if(n.props&&function(e,n){var t=e.$options.propsData||{},o=e._props=ze({}),r=e.$options._propKeys=[];e.$parent&&Se(!1);var a=function(a){r.push(a);var s=It(a,n,t,e);Ie(o,a,s),a in e||Pt(e,"_props",a)};for(var s in n)a(s);Se(!0)}(e,n.props),function(e){var n=e.$options,t=n.setup;if(t){var o=e._setupContext=gn(e);de(e),ye();var r=Sn(t,null,[e._props||ze({}),o],e,"setup");if(ke(),de(),u(r))n.render=r;else if(l(r))if(e._setupState=r,r.__sfc){var a=e._setupProxy={};for(var s in r)"__sfc"!==s&&Le(a,r,s)}else for(var s in r)N(s)||Le(e,r,s);else 0}}(e),n.methods&&function(e,n){e.$options.props;for(var t in n)e[t]="function"!=typeof n[t]?$:E(n[t],e)}(e,n.methods),n.data)!function(e){var n=e.$options.data;p(n=e._data=u(n)?function(e,n){ye();try{return e.call(n,n)}catch(e){return jn(e,n,"data()"),{}}finally{ke()}}(n,e):n||{})||(n={});var t=Object.keys(n),o=e.$options.props,r=(e.$options.methods,t.length);for(;r--;){var a=t[r];0,o&&_(o,a)||N(a)||Pt(e,"_data",a)}var s=Oe(n);s&&s.vmCount++}(e);else{var t=Oe(e._data={});t&&t.vmCount++}n.computed&&function(e,n){var t=e._computedWatchers=Object.create(null),o=ae();for(var r in n){var a=n[r],s=u(a)?a:a.get;0,o||(t[r]=new qn(e,s||$,$,Lt)),r in e||Bt(e,r,a)}}(e,n.computed),n.watch&&n.watch!==te&&function(e,n){for(var t in n){var o=n[t];if(r(o))for(var a=0;a<o.length;a++)Ft(e,t,o[a]);else Ft(e,t,o)}}(e,n.watch)}var Lt={lazy:!0};function Bt(e,n,t){var o=!ae();u(t)?(Mt.get=o?Ut(n):Vt(t),Mt.set=$):(Mt.get=t.get?o&&!1!==t.cache?Ut(n):Vt(t.get):$,Mt.set=t.set||$),Object.defineProperty(e,n,Mt)}function Ut(e){return function(){var n=this._computedWatchers&&this._computedWatchers[e];if(n)return n.dirty&&n.evaluate(),ge.target&&n.depend(),n.value}}function Vt(e){return function(){return e.call(this,this)}}function Ft(e,n,t,o){return p(t)&&(o=t,t=t.handler),"string"==typeof t&&(t=e[t]),e.$watch(n,t,o)}var Nt=0;function qt(e){var n=e.options;if(e.super){var t=qt(e.super);if(t!==e.superOptions){e.superOptions=t;var o=function(e){var n,t=e.options,o=e.sealedOptions;for(var r in t)t[r]!==o[r]&&(n||(n={}),n[r]=t[r]);return n}(e);o&&I(e.extendOptions,o),(n=e.options=Et(t,e.extendOptions)).name&&(n.components[n.name]=e)}}return n}function Wt(e){this._init(e)}function Xt(e){e.cid=0;var n=1;e.extend=function(e){e=e||{};var t=this,o=t.cid,r=e._Ctor||(e._Ctor={});if(r[o])return r[o];var a=xt(e)||xt(t.options);var s=function(e){this._init(e)};return(s.prototype=Object.create(t.prototype)).constructor=s,s.cid=n++,s.options=Et(t.options,e),s.super=t,s.options.props&&function(e){var n=e.options.props;for(var t in n)Pt(e.prototype,"_props",t)}(s),s.options.computed&&function(e){var n=e.options.computed;for(var t in n)Bt(e.prototype,t,n[t])}(s),s.extend=t.extend,s.mixin=t.mixin,s.use=t.use,B.forEach((function(e){s[e]=t[e]})),a&&(s.options.components[a]=s),s.superOptions=t.options,s.extendOptions=e,s.sealedOptions=I({},s.options),r[o]=s,s}}function Jt(e){return e&&(xt(e.Ctor.options)||e.tag)}function Gt(e,n){return r(e)?e.indexOf(n)>-1:"string"==typeof e?e.split(",").indexOf(n)>-1:!!f(e)&&e.test(n)}function Zt(e,n){var t=e.cache,o=e.keys,r=e._vnode;for(var a in t){var s=t[a];if(s){var i=s.name;i&&!n(i)&&Kt(t,a,o,r)}}}function Kt(e,n,t,o){var r=e[n];!r||o&&r.tag===o.tag||r.componentInstance.$destroy(),e[n]=null,y(t,n)}!function(e){e.prototype._init=function(e){var n=this;n._uid=Nt++,n._isVue=!0,n.__v_skip=!0,n._scope=new Ue(!0),n._scope._vm=!0,e&&e._isComponent?function(e,n){var t=e.$options=Object.create(e.constructor.options),o=n._parentVnode;t.parent=n.parent,t._parentVnode=o;var r=o.componentOptions;t.propsData=r.propsData,t._parentListeners=r.listeners,t._renderChildren=r.children,t._componentTag=r.tag,n.render&&(t.render=n.render,t.staticRenderFns=n.staticRenderFns)}(n,e):n.$options=Et(qt(n.constructor),e||{},n),n._renderProxy=n,n._self=n,function(e){var n=e.$options,t=n.parent;if(t&&!n.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(e)}e.$parent=t,e.$root=t?t.$root:e,e.$children=[],e.$refs={},e._provided=t?t._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var n=e.$options._parentListeners;n&&Gn(e,n)}(n),function(e){e._vnode=null,e._staticTrees=null;var n=e.$options,t=e.$vnode=n._parentVnode,r=t&&t.context;e.$slots=pn(n._renderChildren,r),e.$scopedSlots=t?mn(e.$parent,t.data.scopedSlots,e.$slots):o,e._c=function(n,t,o,r){return Rn(e,n,t,o,r,!1)},e.$createElement=function(n,t,o,r){return Rn(e,n,t,o,r,!0)};var a=t&&t.data;Ie(e,"$attrs",a&&a.attrs||o,null,!0),Ie(e,"$listeners",n._parentListeners||o,null,!0)}(n),et(n,"beforeCreate",void 0,!1),function(e){var n=ft(e.$options.inject,e);n&&(Se(!1),Object.keys(n).forEach((function(t){Ie(e,t,n[t])})),Se(!0))}(n),Ht(n),function(e){var n=e.$options.provide;if(n){var t=u(n)?n.call(e):n;if(!l(t))return;for(var o=Ve(e),r=ue?Reflect.ownKeys(t):Object.keys(t),a=0;a<r.length;a++){var s=r[a];Object.defineProperty(o,s,Object.getOwnPropertyDescriptor(t,s))}}}(n),et(n,"created"),n.$options.el&&n.$mount(n.$options.el)}}(Wt),function(e){var n={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",n),Object.defineProperty(e.prototype,"$props",t),e.prototype.$set=Ae,e.prototype.$delete=$e,e.prototype.$watch=function(e,n,t){if(p(n))return Ft(this,e,n,t);(t=t||{}).user=!0;var o=new qn(this,e,n,t);if(t.immediate){var r='callback for immediate watcher "'.concat(o.expression,'"');ye(),Sn(n,this,[o.value],this,r),ke()}return function(){o.teardown()}}}(Wt),function(e){var n=/^hook:/;e.prototype.$on=function(e,t){var o=this;if(r(e))for(var a=0,s=e.length;a<s;a++)o.$on(e[a],t);else(o._events[e]||(o._events[e]=[])).push(t),n.test(e)&&(o._hasHookEvent=!0);return o},e.prototype.$once=function(e,n){var t=this;function o(){t.$off(e,o),n.apply(t,arguments)}return o.fn=n,t.$on(e,o),t},e.prototype.$off=function(e,n){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(r(e)){for(var o=0,a=e.length;o<a;o++)t.$off(e[o],n);return t}var s,i=t._events[e];if(!i)return t;if(!n)return t._events[e]=null,t;for(var c=i.length;c--;)if((s=i[c])===n||s.fn===n){i.splice(c,1);break}return t},e.prototype.$emit=function(e){var n=this,t=n._events[e];if(t){t=t.length>1?O(t):t;for(var o=O(arguments,1),r='event handler for "'.concat(e,'"'),a=0,s=t.length;a<s;a++)Sn(t[a],n,o,n,r)}return n}}(Wt),function(e){e.prototype._update=function(e,n){var t=this,o=t.$el,r=t._vnode,a=Kn(t);t._vnode=e,t.$el=r?t.__patch__(r,e):t.__patch__(t.$el,e,n,!1),a(),o&&(o.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var s=t;s&&s.$vnode&&s.$parent&&s.$vnode===s.$parent._vnode;)s.$parent.$el=s.$el,s=s.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){et(e,"beforeDestroy"),e._isBeingDestroyed=!0;var n=e.$parent;!n||n._isBeingDestroyed||e.$options.abstract||y(n.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),et(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Wt),function(e){dn(e.prototype),e.prototype.$nextTick=function(e){return Ln(e,this)},e.prototype._render=function(){var e,n=this,t=n.$options,o=t.render,a=t._parentVnode;a&&n._isMounted&&(n.$scopedSlots=mn(n.$parent,a.data.scopedSlots,n.$slots,n.$scopedSlots),n._slotsProxy&&kn(n._slotsProxy,n.$scopedSlots)),n.$vnode=a;try{de(n),_n=n,e=o.call(n._renderProxy,n.$createElement)}catch(t){jn(t,n,"render"),e=n._vnode}finally{_n=null,de()}return r(e)&&1===e.length&&(e=e[0]),e instanceof pe||(e=fe()),e.parent=a,e}}(Wt);var Yt=[String,RegExp,Array],Qt={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Yt,exclude:Yt,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,n=this.keys,t=this.vnodeToCache,o=this.keyToCache;if(t){var r=t.tag,a=t.componentInstance,s=t.componentOptions;e[o]={name:Jt(s),tag:r,componentInstance:a},n.push(o),this.max&&n.length>parseInt(this.max)&&Kt(e,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Kt(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(n){Zt(e,(function(e){return Gt(n,e)}))})),this.$watch("exclude",(function(n){Zt(e,(function(e){return!Gt(n,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,n=Cn(e),t=n&&n.componentOptions;if(t){var o=Jt(t),r=this.include,a=this.exclude;if(r&&(!o||!Gt(r,o))||a&&o&&Gt(a,o))return n;var s=this.cache,i=this.keys,c=null==n.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):n.key;s[c]?(n.componentInstance=s[c].componentInstance,y(i,c),i.push(c)):(this.vnodeToCache=n,this.keyToCache=c),n.data.keepAlive=!0}return n||e&&e[0]}}};!function(e){var n={get:function(){return V}};Object.defineProperty(e,"config",n),e.util={warn:_t,extend:I,mergeOptions:Et,defineReactive:Ie},e.set=Ae,e.delete=$e,e.nextTick=Ln,e.observable=function(e){return Oe(e),e},e.options=Object.create(null),B.forEach((function(n){e.options[n+"s"]=Object.create(null)})),e.options._base=e,I(e.options.components,Qt),function(e){e.use=function(e){var n=this._installedPlugins||(this._installedPlugins=[]);if(n.indexOf(e)>-1)return this;var t=O(arguments,1);return t.unshift(this),u(e.install)?e.install.apply(e,t):u(e)&&e.apply(null,t),n.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Et(this.options,e),this}}(e),Xt(e),function(e){B.forEach((function(n){e[n]=function(e,t){return t?("component"===n&&p(t)&&(t.name=t.name||e,t=this.options._base.extend(t)),"directive"===n&&u(t)&&(t={bind:t,update:t}),this.options[n+"s"][e]=t,t):this.options[n+"s"][e]}}))}(e)}(Wt),Object.defineProperty(Wt.prototype,"$isServer",{get:ae}),Object.defineProperty(Wt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Wt,"FunctionalRenderContext",{value:ht}),Wt.version="2.7.14";var eo=g("style,class"),no=g("input,textarea,option,select,progress"),to=g("contenteditable,draggable,spellcheck"),oo=g("events,caret,typing,plaintext-only"),ro=g("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ao="http://www.w3.org/1999/xlink",so=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},io=function(e){return so(e)?e.slice(6,e.length):""},co=function(e){return null==e||!1===e};function uo(e){for(var n=e.data,t=e,o=e;s(o.componentInstance);)(o=o.componentInstance._vnode)&&o.data&&(n=lo(o.data,n));for(;s(t=t.parent);)t&&t.data&&(n=lo(n,t.data));return function(e,n){if(s(e)||s(n))return po(e,fo(n));return""}(n.staticClass,n.class)}function lo(e,n){return{staticClass:po(e.staticClass,n.staticClass),class:s(e.class)?[e.class,n.class]:n.class}}function po(e,n){return e?n?e+" "+n:e:n||""}function fo(e){return Array.isArray(e)?function(e){for(var n,t="",o=0,r=e.length;o<r;o++)s(n=fo(e[o]))&&""!==n&&(t&&(t+=" "),t+=n);return t}(e):l(e)?function(e){var n="";for(var t in e)e[t]&&(n&&(n+=" "),n+=t);return n}(e):"string"==typeof e?e:""}var ho={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},mo=g("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),vo=g("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),xo=function(e){return mo(e)||vo(e)};var go=Object.create(null);var bo=g("text,number,password,search,email,tel,url");var yo=Object.freeze({__proto__:null,createElement:function(e,n){var t=document.createElement(e);return"select"!==e||n.data&&n.data.attrs&&void 0!==n.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(e,n){return document.createElementNS(ho[e],n)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,n,t){e.insertBefore(n,t)},removeChild:function(e,n){e.removeChild(n)},appendChild:function(e,n){e.appendChild(n)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,n){e.textContent=n},setStyleScope:function(e,n){e.setAttribute(n,"")}}),ko={create:function(e,n){_o(n)},update:function(e,n){e.data.ref!==n.data.ref&&(_o(e,!0),_o(n))},destroy:function(e){_o(e,!0)}};function _o(e,n){var t=e.data.ref;if(s(t)){var o=e.context,a=e.componentInstance||e.elm,i=n?null:a,c=n?void 0:a;if(u(t))Sn(t,o,[i],o,"template ref function");else{var l=e.data.refInFor,d="string"==typeof t||"number"==typeof t,p=He(t),f=o.$refs;if(d||p)if(l){var h=d?f[t]:t.value;n?r(h)&&y(h,a):r(h)?h.includes(a)||h.push(a):d?(f[t]=[a],wo(o,t,f[t])):t.value=[a]}else if(d){if(n&&f[t]!==a)return;f[t]=c,wo(o,t,i)}else if(p){if(n&&t.value!==a)return;t.value=i}else 0}}}function wo(e,n,t){var o=e._setupState;o&&_(o,n)&&(He(o[n])?o[n].value=t:o[n]=t)}var Co=new pe("",{},[]),Ro=["create","activate","update","remove","destroy"];function jo(e,n){return e.key===n.key&&e.asyncFactory===n.asyncFactory&&(e.tag===n.tag&&e.isComment===n.isComment&&s(e.data)===s(n.data)&&function(e,n){if("input"!==e.tag)return!0;var t,o=s(t=e.data)&&s(t=t.attrs)&&t.type,r=s(t=n.data)&&s(t=t.attrs)&&t.type;return o===r||bo(o)&&bo(r)}(e,n)||i(e.isAsyncPlaceholder)&&a(n.asyncFactory.error))}function So(e,n,t){var o,r,a={};for(o=n;o<=t;++o)s(r=e[o].key)&&(a[r]=o);return a}var To={create:Eo,update:Eo,destroy:function(e){Eo(e,Co)}};function Eo(e,n){(e.data.directives||n.data.directives)&&function(e,n){var t,o,r,a=e===Co,s=n===Co,i=Io(e.data.directives,e.context),c=Io(n.data.directives,n.context),u=[],l=[];for(t in c)o=i[t],r=c[t],o?(r.oldValue=o.value,r.oldArg=o.arg,$o(r,"update",n,e),r.def&&r.def.componentUpdated&&l.push(r)):($o(r,"bind",n,e),r.def&&r.def.inserted&&u.push(r));if(u.length){var d=function(){for(var t=0;t<u.length;t++)$o(u[t],"inserted",n,e)};a?We(n,"insert",d):d()}l.length&&We(n,"postpatch",(function(){for(var t=0;t<l.length;t++)$o(l[t],"componentUpdated",n,e)}));if(!a)for(t in i)c[t]||$o(i[t],"unbind",e,e,s)}(e,n)}var Oo=Object.create(null);function Io(e,n){var t,o,r=Object.create(null);if(!e)return r;for(t=0;t<e.length;t++){if((o=e[t]).modifiers||(o.modifiers=Oo),r[Ao(o)]=o,n._setupState&&n._setupState.__sfc){var a=o.def||Ot(n,"_setupState","v-"+o.name);o.def="function"==typeof a?{bind:a,update:a}:a}o.def=o.def||Ot(n.$options,"directives",o.name)}return r}function Ao(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function $o(e,n,t,o,r){var a=e.def&&e.def[n];if(a)try{a(t.elm,e,t,o,r)}catch(o){jn(o,t.context,"directive ".concat(e.name," ").concat(n," hook"))}}var Do=[ko,To];function zo(e,n){var t=n.componentOptions;if(!(s(t)&&!1===t.Ctor.options.inheritAttrs||a(e.data.attrs)&&a(n.data.attrs))){var o,r,c=n.elm,u=e.data.attrs||{},l=n.data.attrs||{};for(o in(s(l.__ob__)||i(l._v_attr_proxy))&&(l=n.data.attrs=I({},l)),l)r=l[o],u[o]!==r&&Mo(c,o,r,n.data.pre);for(o in(Z||Y)&&l.value!==u.value&&Mo(c,"value",l.value),u)a(l[o])&&(so(o)?c.removeAttributeNS(ao,io(o)):to(o)||c.removeAttribute(o))}}function Mo(e,n,t,o){o||e.tagName.indexOf("-")>-1?Po(e,n,t):ro(n)?co(t)?e.removeAttribute(n):(t="allowfullscreen"===n&&"EMBED"===e.tagName?"true":n,e.setAttribute(n,t)):to(n)?e.setAttribute(n,function(e,n){return co(n)||"false"===n?"false":"contenteditable"===e&&oo(n)?n:"true"}(n,t)):so(n)?co(t)?e.removeAttributeNS(ao,io(n)):e.setAttributeNS(ao,n,t):Po(e,n,t)}function Po(e,n,t){if(co(t))e.removeAttribute(n);else{if(Z&&!K&&"TEXTAREA"===e.tagName&&"placeholder"===n&&""!==t&&!e.__ieph){var o=function(n){n.stopImmediatePropagation(),e.removeEventListener("input",o)};e.addEventListener("input",o),e.__ieph=!0}e.setAttribute(n,t)}}var Ho={create:zo,update:zo};function Lo(e,n){var t=n.elm,o=n.data,r=e.data;if(!(a(o.staticClass)&&a(o.class)&&(a(r)||a(r.staticClass)&&a(r.class)))){var i=uo(n),c=t._transitionClasses;s(c)&&(i=po(i,fo(c))),i!==t._prevClass&&(t.setAttribute("class",i),t._prevClass=i)}}var Bo,Uo={create:Lo,update:Lo};function Vo(e,n,t){var o=Bo;return function r(){var a=n.apply(null,arguments);null!==a&&qo(e,r,t,o)}}var Fo=In&&!(ne&&Number(ne[1])<=53);function No(e,n,t,o){if(Fo){var r=it,a=n;n=a._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=r||e.timeStamp<=0||e.target.ownerDocument!==document)return a.apply(this,arguments)}}Bo.addEventListener(e,n,oe?{capture:t,passive:o}:t)}function qo(e,n,t,o){(o||Bo).removeEventListener(e,n._wrapper||n,t)}function Wo(e,n){if(!a(e.data.on)||!a(n.data.on)){var t=n.data.on||{},o=e.data.on||{};Bo=n.elm||e.elm,function(e){if(s(e.__r)){var n=Z?"change":"input";e[n]=[].concat(e.__r,e[n]||[]),delete e.__r}s(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(t),qe(t,o,No,qo,Vo,n.context),Bo=void 0}}var Xo,Jo={create:Wo,update:Wo,destroy:function(e){return Wo(e,Co)}};function Go(e,n){if(!a(e.data.domProps)||!a(n.data.domProps)){var t,o,r=n.elm,c=e.data.domProps||{},u=n.data.domProps||{};for(t in(s(u.__ob__)||i(u._v_attr_proxy))&&(u=n.data.domProps=I({},u)),c)t in u||(r[t]="");for(t in u){if(o=u[t],"textContent"===t||"innerHTML"===t){if(n.children&&(n.children.length=0),o===c[t])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===t&&"PROGRESS"!==r.tagName){r._value=o;var l=a(o)?"":String(o);Zo(r,l)&&(r.value=l)}else if("innerHTML"===t&&vo(r.tagName)&&a(r.innerHTML)){(Xo=Xo||document.createElement("div")).innerHTML="<svg>".concat(o,"</svg>");for(var d=Xo.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;d.firstChild;)r.appendChild(d.firstChild)}else if(o!==c[t])try{r[t]=o}catch(e){}}}}function Zo(e,n){return!e.composing&&("OPTION"===e.tagName||function(e,n){var t=!0;try{t=document.activeElement!==e}catch(e){}return t&&e.value!==n}(e,n)||function(e,n){var t=e.value,o=e._vModifiers;if(s(o)){if(o.number)return x(t)!==x(n);if(o.trim)return t.trim()!==n.trim()}return t!==n}(e,n))}var Ko={create:Go,update:Go},Yo=w((function(e){var n={},t=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var o=e.split(t);o.length>1&&(n[o[0].trim()]=o[1].trim())}})),n}));function Qo(e){var n=er(e.style);return e.staticStyle?I(e.staticStyle,n):n}function er(e){return Array.isArray(e)?A(e):"string"==typeof e?Yo(e):e}var nr,tr=/^--/,or=/\s*!important$/,rr=function(e,n,t){if(tr.test(n))e.style.setProperty(n,t);else if(or.test(t))e.style.setProperty(T(n),t.replace(or,""),"important");else{var o=sr(n);if(Array.isArray(t))for(var r=0,a=t.length;r<a;r++)e.style[o]=t[r];else e.style[o]=t}},ar=["Webkit","Moz","ms"],sr=w((function(e){if(nr=nr||document.createElement("div").style,"filter"!==(e=R(e))&&e in nr)return e;for(var n=e.charAt(0).toUpperCase()+e.slice(1),t=0;t<ar.length;t++){var o=ar[t]+n;if(o in nr)return o}}));function ir(e,n){var t=n.data,o=e.data;if(!(a(t.staticStyle)&&a(t.style)&&a(o.staticStyle)&&a(o.style))){var r,i,c=n.elm,u=o.staticStyle,l=o.normalizedStyle||o.style||{},d=u||l,p=er(n.data.style)||{};n.data.normalizedStyle=s(p.__ob__)?I({},p):p;var f=function(e,n){var t,o={};if(n)for(var r=e;r.componentInstance;)(r=r.componentInstance._vnode)&&r.data&&(t=Qo(r.data))&&I(o,t);(t=Qo(e.data))&&I(o,t);for(var a=e;a=a.parent;)a.data&&(t=Qo(a.data))&&I(o,t);return o}(n,!0);for(i in d)a(f[i])&&rr(c,i,"");for(i in f)(r=f[i])!==d[i]&&rr(c,i,null==r?"":r)}}var cr={create:ir,update:ir},ur=/\s+/;function lr(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(ur).forEach((function(n){return e.classList.add(n)})):e.classList.add(n);else{var t=" ".concat(e.getAttribute("class")||""," ");t.indexOf(" "+n+" ")<0&&e.setAttribute("class",(t+n).trim())}}function dr(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(ur).forEach((function(n){return e.classList.remove(n)})):e.classList.remove(n),e.classList.length||e.removeAttribute("class");else{for(var t=" ".concat(e.getAttribute("class")||""," "),o=" "+n+" ";t.indexOf(o)>=0;)t=t.replace(o," ");(t=t.trim())?e.setAttribute("class",t):e.removeAttribute("class")}}function pr(e){if(e){if("object"==typeof e){var n={};return!1!==e.css&&I(n,fr(e.name||"v")),I(n,e),n}return"string"==typeof e?fr(e):void 0}}var fr=w((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),hr=J&&!K,mr="transition",vr="transitionend",xr="animation",gr="animationend";hr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(mr="WebkitTransition",vr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(xr="WebkitAnimation",gr="webkitAnimationEnd"));var br=J?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function yr(e){br((function(){br(e)}))}function kr(e,n){var t=e._transitionClasses||(e._transitionClasses=[]);t.indexOf(n)<0&&(t.push(n),lr(e,n))}function _r(e,n){e._transitionClasses&&y(e._transitionClasses,n),dr(e,n)}function wr(e,n,t){var o=Rr(e,n),r=o.type,a=o.timeout,s=o.propCount;if(!r)return t();var i="transition"===r?vr:gr,c=0,u=function(){e.removeEventListener(i,l),t()},l=function(n){n.target===e&&++c>=s&&u()};setTimeout((function(){c<s&&u()}),a+1),e.addEventListener(i,l)}var Cr=/\b(transform|all)(,|$)/;function Rr(e,n){var t,o=window.getComputedStyle(e),r=(o[mr+"Delay"]||"").split(", "),a=(o[mr+"Duration"]||"").split(", "),s=jr(r,a),i=(o[xr+"Delay"]||"").split(", "),c=(o[xr+"Duration"]||"").split(", "),u=jr(i,c),l=0,d=0;return"transition"===n?s>0&&(t="transition",l=s,d=a.length):"animation"===n?u>0&&(t="animation",l=u,d=c.length):d=(t=(l=Math.max(s,u))>0?s>u?"transition":"animation":null)?"transition"===t?a.length:c.length:0,{type:t,timeout:l,propCount:d,hasTransform:"transition"===t&&Cr.test(o[mr+"Property"])}}function jr(e,n){for(;e.length<n.length;)e=e.concat(e);return Math.max.apply(null,n.map((function(n,t){return Sr(n)+Sr(e[t])})))}function Sr(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Tr(e,n){var t=e.elm;s(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var o=pr(e.data.transition);if(!a(o)&&!s(t._enterCb)&&1===t.nodeType){for(var r=o.css,i=o.type,c=o.enterClass,d=o.enterToClass,p=o.enterActiveClass,f=o.appearClass,h=o.appearToClass,m=o.appearActiveClass,v=o.beforeEnter,g=o.enter,b=o.afterEnter,y=o.enterCancelled,k=o.beforeAppear,_=o.appear,w=o.afterAppear,C=o.appearCancelled,R=o.duration,j=Zn,S=Zn.$vnode;S&&S.parent;)j=S.context,S=S.parent;var T=!j._isMounted||!e.isRootInsert;if(!T||_||""===_){var E=T&&f?f:c,O=T&&m?m:p,I=T&&h?h:d,A=T&&k||v,$=T&&u(_)?_:g,D=T&&w||b,z=T&&C||y,M=x(l(R)?R.enter:R);0;var P=!1!==r&&!K,L=Ir($),B=t._enterCb=H((function(){P&&(_r(t,I),_r(t,O)),B.cancelled?(P&&_r(t,E),z&&z(t)):D&&D(t),t._enterCb=null}));e.data.show||We(e,"insert",(function(){var n=t.parentNode,o=n&&n._pending&&n._pending[e.key];o&&o.tag===e.tag&&o.elm._leaveCb&&o.elm._leaveCb(),$&&$(t,B)})),A&&A(t),P&&(kr(t,E),kr(t,O),yr((function(){_r(t,E),B.cancelled||(kr(t,I),L||(Or(M)?setTimeout(B,M):wr(t,i,B)))}))),e.data.show&&(n&&n(),$&&$(t,B)),P||L||B()}}}function Er(e,n){var t=e.elm;s(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var o=pr(e.data.transition);if(a(o)||1!==t.nodeType)return n();if(!s(t._leaveCb)){var r=o.css,i=o.type,c=o.leaveClass,u=o.leaveToClass,d=o.leaveActiveClass,p=o.beforeLeave,f=o.leave,h=o.afterLeave,m=o.leaveCancelled,v=o.delayLeave,g=o.duration,b=!1!==r&&!K,y=Ir(f),k=x(l(g)?g.leave:g);0;var _=t._leaveCb=H((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[e.key]=null),b&&(_r(t,u),_r(t,d)),_.cancelled?(b&&_r(t,c),m&&m(t)):(n(),h&&h(t)),t._leaveCb=null}));v?v(w):w()}function w(){_.cancelled||(!e.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[e.key]=e),p&&p(t),b&&(kr(t,c),kr(t,d),yr((function(){_r(t,c),_.cancelled||(kr(t,u),y||(Or(k)?setTimeout(_,k):wr(t,i,_)))}))),f&&f(t,_),b||y||_())}}function Or(e){return"number"==typeof e&&!isNaN(e)}function Ir(e){if(a(e))return!1;var n=e.fns;return s(n)?Ir(Array.isArray(n)?n[0]:n):(e._length||e.length)>1}function Ar(e,n){!0!==n.data.show&&Tr(n)}var $r=function(e){var n,t,o={},u=e.modules,l=e.nodeOps;for(n=0;n<Ro.length;++n)for(o[Ro[n]]=[],t=0;t<u.length;++t)s(u[t][Ro[n]])&&o[Ro[n]].push(u[t][Ro[n]]);function d(e){var n=l.parentNode(e);s(n)&&l.removeChild(n,e)}function p(e,n,t,r,a,c,u){if(s(e.elm)&&s(c)&&(e=c[u]=me(e)),e.isRootInsert=!a,!function(e,n,t,r){var a=e.data;if(s(a)){var c=s(e.componentInstance)&&a.keepAlive;if(s(a=a.hook)&&s(a=a.init)&&a(e,!1),s(e.componentInstance))return f(e,n),h(t,e.elm,r),i(c)&&function(e,n,t,r){var a,i=e;for(;i.componentInstance;)if(i=i.componentInstance._vnode,s(a=i.data)&&s(a=a.transition)){for(a=0;a<o.activate.length;++a)o.activate[a](Co,i);n.push(i);break}h(t,e.elm,r)}(e,n,t,r),!0}}(e,n,t,r)){var d=e.data,p=e.children,v=e.tag;s(v)?(e.elm=e.ns?l.createElementNS(e.ns,v):l.createElement(v,e),b(e),m(e,p,n),s(d)&&x(e,n),h(t,e.elm,r)):i(e.isComment)?(e.elm=l.createComment(e.text),h(t,e.elm,r)):(e.elm=l.createTextNode(e.text),h(t,e.elm,r))}}function f(e,n){s(e.data.pendingInsert)&&(n.push.apply(n,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,v(e)?(x(e,n),b(e)):(_o(e),n.push(e))}function h(e,n,t){s(e)&&(s(t)?l.parentNode(t)===e&&l.insertBefore(e,n,t):l.appendChild(e,n))}function m(e,n,t){if(r(n)){0;for(var o=0;o<n.length;++o)p(n[o],t,e.elm,null,!0,n,o)}else c(e.text)&&l.appendChild(e.elm,l.createTextNode(String(e.text)))}function v(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return s(e.tag)}function x(e,t){for(var r=0;r<o.create.length;++r)o.create[r](Co,e);s(n=e.data.hook)&&(s(n.create)&&n.create(Co,e),s(n.insert)&&t.push(e))}function b(e){var n;if(s(n=e.fnScopeId))l.setStyleScope(e.elm,n);else for(var t=e;t;)s(n=t.context)&&s(n=n.$options._scopeId)&&l.setStyleScope(e.elm,n),t=t.parent;s(n=Zn)&&n!==e.context&&n!==e.fnContext&&s(n=n.$options._scopeId)&&l.setStyleScope(e.elm,n)}function y(e,n,t,o,r,a){for(;o<=r;++o)p(t[o],a,e,n,!1,t,o)}function k(e){var n,t,r=e.data;if(s(r))for(s(n=r.hook)&&s(n=n.destroy)&&n(e),n=0;n<o.destroy.length;++n)o.destroy[n](e);if(s(n=e.children))for(t=0;t<e.children.length;++t)k(e.children[t])}function _(e,n,t){for(;n<=t;++n){var o=e[n];s(o)&&(s(o.tag)?(w(o),k(o)):d(o.elm))}}function w(e,n){if(s(n)||s(e.data)){var t,r=o.remove.length+1;for(s(n)?n.listeners+=r:n=function(e,n){function t(){0==--t.listeners&&d(e)}return t.listeners=n,t}(e.elm,r),s(t=e.componentInstance)&&s(t=t._vnode)&&s(t.data)&&w(t,n),t=0;t<o.remove.length;++t)o.remove[t](e,n);s(t=e.data.hook)&&s(t=t.remove)?t(e,n):n()}else d(e.elm)}function C(e,n,t,o){for(var r=t;r<o;r++){var a=n[r];if(s(a)&&jo(e,a))return r}}function R(e,n,t,r,c,u){if(e!==n){s(n.elm)&&s(r)&&(n=r[c]=me(n));var d=n.elm=e.elm;if(i(e.isAsyncPlaceholder))s(n.asyncFactory.resolved)?T(e.elm,n,t):n.isAsyncPlaceholder=!0;else if(i(n.isStatic)&&i(e.isStatic)&&n.key===e.key&&(i(n.isCloned)||i(n.isOnce)))n.componentInstance=e.componentInstance;else{var f,h=n.data;s(h)&&s(f=h.hook)&&s(f=f.prepatch)&&f(e,n);var m=e.children,x=n.children;if(s(h)&&v(n)){for(f=0;f<o.update.length;++f)o.update[f](e,n);s(f=h.hook)&&s(f=f.update)&&f(e,n)}a(n.text)?s(m)&&s(x)?m!==x&&function(e,n,t,o,r){var i,c,u,d=0,f=0,h=n.length-1,m=n[0],v=n[h],x=t.length-1,g=t[0],b=t[x],k=!r;for(0;d<=h&&f<=x;)a(m)?m=n[++d]:a(v)?v=n[--h]:jo(m,g)?(R(m,g,o,t,f),m=n[++d],g=t[++f]):jo(v,b)?(R(v,b,o,t,x),v=n[--h],b=t[--x]):jo(m,b)?(R(m,b,o,t,x),k&&l.insertBefore(e,m.elm,l.nextSibling(v.elm)),m=n[++d],b=t[--x]):jo(v,g)?(R(v,g,o,t,f),k&&l.insertBefore(e,v.elm,m.elm),v=n[--h],g=t[++f]):(a(i)&&(i=So(n,d,h)),a(c=s(g.key)?i[g.key]:C(g,n,d,h))?p(g,o,e,m.elm,!1,t,f):jo(u=n[c],g)?(R(u,g,o,t,f),n[c]=void 0,k&&l.insertBefore(e,u.elm,m.elm)):p(g,o,e,m.elm,!1,t,f),g=t[++f]);d>h?y(e,a(t[x+1])?null:t[x+1].elm,t,f,x,o):f>x&&_(n,d,h)}(d,m,x,t,u):s(x)?(s(e.text)&&l.setTextContent(d,""),y(d,null,x,0,x.length-1,t)):s(m)?_(m,0,m.length-1):s(e.text)&&l.setTextContent(d,""):e.text!==n.text&&l.setTextContent(d,n.text),s(h)&&s(f=h.hook)&&s(f=f.postpatch)&&f(e,n)}}}function j(e,n,t){if(i(t)&&s(e.parent))e.parent.data.pendingInsert=n;else for(var o=0;o<n.length;++o)n[o].data.hook.insert(n[o])}var S=g("attrs,class,staticClass,staticStyle,key");function T(e,n,t,o){var r,a=n.tag,c=n.data,u=n.children;if(o=o||c&&c.pre,n.elm=e,i(n.isComment)&&s(n.asyncFactory))return n.isAsyncPlaceholder=!0,!0;if(s(c)&&(s(r=c.hook)&&s(r=r.init)&&r(n,!0),s(r=n.componentInstance)))return f(n,t),!0;if(s(a)){if(s(u))if(e.hasChildNodes())if(s(r=c)&&s(r=r.domProps)&&s(r=r.innerHTML)){if(r!==e.innerHTML)return!1}else{for(var l=!0,d=e.firstChild,p=0;p<u.length;p++){if(!d||!T(d,u[p],t,o)){l=!1;break}d=d.nextSibling}if(!l||d)return!1}else m(n,u,t);if(s(c)){var h=!1;for(var v in c)if(!S(v)){h=!0,x(n,t);break}!h&&c.class&&Vn(c.class)}}else e.data!==n.text&&(e.data=n.text);return!0}return function(e,n,t,r){if(!a(n)){var c,u=!1,d=[];if(a(e))u=!0,p(n,d);else{var f=s(e.nodeType);if(!f&&jo(e,n))R(e,n,d,null,null,r);else{if(f){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),t=!0),i(t)&&T(e,n,d))return j(n,d,!0),e;c=e,e=new pe(l.tagName(c).toLowerCase(),{},[],void 0,c)}var h=e.elm,m=l.parentNode(h);if(p(n,d,h._leaveCb?null:m,l.nextSibling(h)),s(n.parent))for(var x=n.parent,g=v(n);x;){for(var b=0;b<o.destroy.length;++b)o.destroy[b](x);if(x.elm=n.elm,g){for(var y=0;y<o.create.length;++y)o.create[y](Co,x);var w=x.data.hook.insert;if(w.merged)for(var C=1;C<w.fns.length;C++)w.fns[C]()}else _o(x);x=x.parent}s(m)?_([e],0,0):s(e.tag)&&k(e)}}return j(n,d,u),n.elm}s(e)&&k(e)}}({nodeOps:yo,modules:[Ho,Uo,Jo,Ko,cr,J?{create:Ar,activate:Ar,remove:function(e,n){!0!==e.data.show?Er(e,n):n()}}:{}].concat(Do)});K&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Ur(e,"input")}));var Dr={inserted:function(e,n,t,o){"select"===t.tag?(o.elm&&!o.elm._vOptions?We(t,"postpatch",(function(){Dr.componentUpdated(e,n,t)})):zr(e,n,t.context),e._vOptions=[].map.call(e.options,Hr)):("textarea"===t.tag||bo(e.type))&&(e._vModifiers=n.modifiers,n.modifiers.lazy||(e.addEventListener("compositionstart",Lr),e.addEventListener("compositionend",Br),e.addEventListener("change",Br),K&&(e.vmodel=!0)))},componentUpdated:function(e,n,t){if("select"===t.tag){zr(e,n,t.context);var o=e._vOptions,r=e._vOptions=[].map.call(e.options,Hr);if(r.some((function(e,n){return!M(e,o[n])})))(e.multiple?n.value.some((function(e){return Pr(e,r)})):n.value!==n.oldValue&&Pr(n.value,r))&&Ur(e,"change")}}};function zr(e,n,t){Mr(e,n,t),(Z||Y)&&setTimeout((function(){Mr(e,n,t)}),0)}function Mr(e,n,t){var o=n.value,r=e.multiple;if(!r||Array.isArray(o)){for(var a,s,i=0,c=e.options.length;i<c;i++)if(s=e.options[i],r)a=P(o,Hr(s))>-1,s.selected!==a&&(s.selected=a);else if(M(Hr(s),o))return void(e.selectedIndex!==i&&(e.selectedIndex=i));r||(e.selectedIndex=-1)}}function Pr(e,n){return n.every((function(n){return!M(n,e)}))}function Hr(e){return"_value"in e?e._value:e.value}function Lr(e){e.target.composing=!0}function Br(e){e.target.composing&&(e.target.composing=!1,Ur(e.target,"input"))}function Ur(e,n){var t=document.createEvent("HTMLEvents");t.initEvent(n,!0,!0),e.dispatchEvent(t)}function Vr(e){return!e.componentInstance||e.data&&e.data.transition?e:Vr(e.componentInstance._vnode)}var Fr={model:Dr,show:{bind:function(e,n,t){var o=n.value,r=(t=Vr(t)).data&&t.data.transition,a=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;o&&r?(t.data.show=!0,Tr(t,(function(){e.style.display=a}))):e.style.display=o?a:"none"},update:function(e,n,t){var o=n.value;!o!=!n.oldValue&&((t=Vr(t)).data&&t.data.transition?(t.data.show=!0,o?Tr(t,(function(){e.style.display=e.__vOriginalDisplay})):Er(t,(function(){e.style.display="none"}))):e.style.display=o?e.__vOriginalDisplay:"none")},unbind:function(e,n,t,o,r){r||(e.style.display=e.__vOriginalDisplay)}}},Nr={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function qr(e){var n=e&&e.componentOptions;return n&&n.Ctor.options.abstract?qr(Cn(n.children)):e}function Wr(e){var n={},t=e.$options;for(var o in t.propsData)n[o]=e[o];var r=t._parentListeners;for(var o in r)n[R(o)]=r[o];return n}function Xr(e,n){if(/\d-keep-alive$/.test(n.tag))return e("keep-alive",{props:n.componentOptions.propsData})}var Jr=function(e){return e.tag||hn(e)},Gr=function(e){return"show"===e.name},Zr={name:"transition",props:Nr,abstract:!0,render:function(e){var n=this,t=this.$slots.default;if(t&&(t=t.filter(Jr)).length){0;var o=this.mode;0;var r=t[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return r;var a=qr(r);if(!a)return r;if(this._leaving)return Xr(e,r);var s="__transition-".concat(this._uid,"-");a.key=null==a.key?a.isComment?s+"comment":s+a.tag:c(a.key)?0===String(a.key).indexOf(s)?a.key:s+a.key:a.key;var i=(a.data||(a.data={})).transition=Wr(this),u=this._vnode,l=qr(u);if(a.data.directives&&a.data.directives.some(Gr)&&(a.data.show=!0),l&&l.data&&!function(e,n){return n.key===e.key&&n.tag===e.tag}(a,l)&&!hn(l)&&(!l.componentInstance||!l.componentInstance._vnode.isComment)){var d=l.data.transition=I({},i);if("out-in"===o)return this._leaving=!0,We(d,"afterLeave",(function(){n._leaving=!1,n.$forceUpdate()})),Xr(e,r);if("in-out"===o){if(hn(a))return u;var p,f=function(){p()};We(i,"afterEnter",f),We(i,"enterCancelled",f),We(d,"delayLeave",(function(e){p=e}))}}return r}}},Kr=I({tag:String,moveClass:String},Nr);function Yr(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Qr(e){e.data.newPos=e.elm.getBoundingClientRect()}function ea(e){var n=e.data.pos,t=e.data.newPos,o=n.left-t.left,r=n.top-t.top;if(o||r){e.data.moved=!0;var a=e.elm.style;a.transform=a.WebkitTransform="translate(".concat(o,"px,").concat(r,"px)"),a.transitionDuration="0s"}}delete Kr.mode;var na={Transition:Zr,TransitionGroup:{props:Kr,beforeMount:function(){var e=this,n=this._update;this._update=function(t,o){var r=Kn(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,r(),n.call(e,t,o)}},render:function(e){for(var n=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),o=this.prevChildren=this.children,r=this.$slots.default||[],a=this.children=[],s=Wr(this),i=0;i<r.length;i++){if((l=r[i]).tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))a.push(l),t[l.key]=l,(l.data||(l.data={})).transition=s;else;}if(o){var c=[],u=[];for(i=0;i<o.length;i++){var l;(l=o[i]).data.transition=s,l.data.pos=l.elm.getBoundingClientRect(),t[l.key]?c.push(l):u.push(l)}this.kept=e(n,null,c),this.removed=u}return e(n,null,a)},updated:function(){var e=this.prevChildren,n=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,n)&&(e.forEach(Yr),e.forEach(Qr),e.forEach(ea),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var t=e.elm,o=t.style;kr(t,n),o.transform=o.WebkitTransform=o.transitionDuration="",t.addEventListener(vr,t._moveCb=function e(o){o&&o.target!==t||o&&!/transform$/.test(o.propertyName)||(t.removeEventListener(vr,e),t._moveCb=null,_r(t,n))})}})))},methods:{hasMove:function(e,n){if(!hr)return!1;if(this._hasMove)return this._hasMove;var t=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){dr(t,e)})),lr(t,n),t.style.display="none",this.$el.appendChild(t);var o=Rr(t);return this.$el.removeChild(t),this._hasMove=o.hasTransform}}}};function ta(e,n){for(var t in n)e[t]=n[t];return e}Wt.config.mustUseProp=function(e,n,t){return"value"===t&&no(e)&&"button"!==n||"selected"===t&&"option"===e||"checked"===t&&"input"===e||"muted"===t&&"video"===e},Wt.config.isReservedTag=xo,Wt.config.isReservedAttr=eo,Wt.config.getTagNamespace=function(e){return vo(e)?"svg":"math"===e?"math":void 0},Wt.config.isUnknownElement=function(e){if(!J)return!0;if(xo(e))return!1;if(e=e.toLowerCase(),null!=go[e])return go[e];var n=document.createElement(e);return e.indexOf("-")>-1?go[e]=n.constructor===window.HTMLUnknownElement||n.constructor===window.HTMLElement:go[e]=/HTMLUnknownElement/.test(n.toString())},I(Wt.options.directives,Fr),I(Wt.options.components,na),Wt.prototype.__patch__=J?$r:$,Wt.prototype.$mount=function(e,n){return function(e,n,t){var o;e.$el=n,e.$options.render||(e.$options.render=fe),et(e,"beforeMount"),o=function(){e._update(e._render(),t)},new qn(e,o,$,{before:function(){e._isMounted&&!e._isDestroyed&&et(e,"beforeUpdate")}},!0),t=!1;var r=e._preWatchers;if(r)for(var a=0;a<r.length;a++)r[a].run();return null==e.$vnode&&(e._isMounted=!0,et(e,"mounted")),e}(this,e=e&&J?function(e){if("string"==typeof e){var n=document.querySelector(e);return n||document.createElement("div")}return e}(e):void 0,n)},J&&setTimeout((function(){V.devtools&&se&&se.emit("init",Wt)}),0);var oa=/[!'()*]/g,ra=function(e){return"%"+e.charCodeAt(0).toString(16)},aa=/%2C/g,sa=function(e){return encodeURIComponent(e).replace(oa,ra).replace(aa,",")};function ia(e){try{return decodeURIComponent(e)}catch(e){0}return e}var ca=function(e){return null==e||"object"==typeof e?e:String(e)};function ua(e){var n={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var t=e.replace(/\+/g," ").split("="),o=ia(t.shift()),r=t.length>0?ia(t.join("=")):null;void 0===n[o]?n[o]=r:Array.isArray(n[o])?n[o].push(r):n[o]=[n[o],r]})),n):n}function la(e){var n=e?Object.keys(e).map((function(n){var t=e[n];if(void 0===t)return"";if(null===t)return sa(n);if(Array.isArray(t)){var o=[];return t.forEach((function(e){void 0!==e&&(null===e?o.push(sa(n)):o.push(sa(n)+"="+sa(e)))})),o.join("&")}return sa(n)+"="+sa(t)})).filter((function(e){return e.length>0})).join("&"):null;return n?"?"+n:""}var da=/\/?$/;function pa(e,n,t,o){var r=o&&o.options.stringifyQuery,a=n.query||{};try{a=fa(a)}catch(e){}var s={name:n.name||e&&e.name,meta:e&&e.meta||{},path:n.path||"/",hash:n.hash||"",query:a,params:n.params||{},fullPath:va(n,r),matched:e?ma(e):[]};return t&&(s.redirectedFrom=va(t,r)),Object.freeze(s)}function fa(e){if(Array.isArray(e))return e.map(fa);if(e&&"object"==typeof e){var n={};for(var t in e)n[t]=fa(e[t]);return n}return e}var ha=pa(null,{path:"/"});function ma(e){for(var n=[];e;)n.unshift(e),e=e.parent;return n}function va(e,n){var t=e.path,o=e.query;void 0===o&&(o={});var r=e.hash;return void 0===r&&(r=""),(t||"/")+(n||la)(o)+r}function xa(e,n,t){return n===ha?e===n:!!n&&(e.path&&n.path?e.path.replace(da,"")===n.path.replace(da,"")&&(t||e.hash===n.hash&&ba(e.query,n.query)):!(!e.name||!n.name)&&(e.name===n.name&&(t||e.hash===n.hash&&ba(e.query,n.query)&&ba(e.params,n.params))))}function ba(e,n){if(void 0===e&&(e={}),void 0===n&&(n={}),!e||!n)return e===n;var t=Object.keys(e).sort(),o=Object.keys(n).sort();return t.length===o.length&&t.every((function(t,r){var a=e[t];if(o[r]!==t)return!1;var s=n[t];return null==a||null==s?a===s:"object"==typeof a&&"object"==typeof s?ba(a,s):String(a)===String(s)}))}function ya(e){for(var n=0;n<e.matched.length;n++){var t=e.matched[n];for(var o in t.instances){var r=t.instances[o],a=t.enteredCbs[o];if(r&&a){delete t.enteredCbs[o];for(var s=0;s<a.length;s++)r._isBeingDestroyed||a[s](r)}}}}var ka={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,n){var t=n.props,o=n.children,r=n.parent,a=n.data;a.routerView=!0;for(var s=r.$createElement,i=t.name,c=r.$route,u=r._routerViewCache||(r._routerViewCache={}),l=0,d=!1;r&&r._routerRoot!==r;){var p=r.$vnode?r.$vnode.data:{};p.routerView&&l++,p.keepAlive&&r._directInactive&&r._inactive&&(d=!0),r=r.$parent}if(a.routerViewDepth=l,d){var f=u[i],h=f&&f.component;return h?(f.configProps&&_a(h,a,f.route,f.configProps),s(h,a,o)):s()}var m=c.matched[l],v=m&&m.components[i];if(!m||!v)return u[i]=null,s();u[i]={component:v},a.registerRouteInstance=function(e,n){var t=m.instances[i];(n&&t!==e||!n&&t===e)&&(m.instances[i]=n)},(a.hook||(a.hook={})).prepatch=function(e,n){m.instances[i]=n.componentInstance},a.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==m.instances[i]&&(m.instances[i]=e.componentInstance),ya(c)};var x=m.props&&m.props[i];return x&&(ta(u[i],{route:c,configProps:x}),_a(v,a,c,x)),s(v,a,o)}};function _a(e,n,t,o){var r=n.props=function(e,n){switch(typeof n){case"undefined":return;case"object":return n;case"function":return n(e);case"boolean":return n?e.params:void 0;default:0}}(t,o);if(r){r=n.props=ta({},r);var a=n.attrs=n.attrs||{};for(var s in r)e.props&&s in e.props||(a[s]=r[s],delete r[s])}}function wa(e,n,t){var o=e.charAt(0);if("/"===o)return e;if("?"===o||"#"===o)return n+e;var r=n.split("/");t&&r[r.length-1]||r.pop();for(var a=e.replace(/^\//,"").split("/"),s=0;s<a.length;s++){var i=a[s];".."===i?r.pop():"."!==i&&r.push(i)}return""!==r[0]&&r.unshift(""),r.join("/")}function Ca(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var Ra=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},ja=Ba,Sa=Aa,Ta=function(e,n){return Da(Aa(e,n),n)},Ea=Da,Oa=La,Ia=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Aa(e,n){for(var t,o=[],r=0,a=0,s="",i=n&&n.delimiter||"/";null!=(t=Ia.exec(e));){var c=t[0],u=t[1],l=t.index;if(s+=e.slice(a,l),a=l+c.length,u)s+=u[1];else{var d=e[a],p=t[2],f=t[3],h=t[4],m=t[5],v=t[6],x=t[7];s&&(o.push(s),s="");var g=null!=p&&null!=d&&d!==p,b="+"===v||"*"===v,y="?"===v||"*"===v,k=t[2]||i,_=h||m;o.push({name:f||r++,prefix:p||"",delimiter:k,optional:y,repeat:b,partial:g,asterisk:!!x,pattern:_?Ma(_):x?".*":"[^"+za(k)+"]+?"})}}return a<e.length&&(s+=e.substr(a)),s&&o.push(s),o}function $a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Da(e,n){for(var t=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(t[o]=new RegExp("^(?:"+e[o].pattern+")$",Ha(n)));return function(n,o){for(var r="",a=n||{},s=(o||{}).pretty?$a:encodeURIComponent,i=0;i<e.length;i++){var c=e[i];if("string"!=typeof c){var u,l=a[c.name];if(null==l){if(c.optional){c.partial&&(r+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(Ra(l)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(l)+"`");if(0===l.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var d=0;d<l.length;d++){if(u=s(l[d]),!t[i].test(u))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(u)+"`");r+=(0===d?c.prefix:c.delimiter)+u}}else{if(u=c.asterisk?encodeURI(l).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):s(l),!t[i].test(u))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+u+'"');r+=c.prefix+u}}else r+=c}return r}}function za(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Ma(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function Pa(e,n){return e.keys=n,e}function Ha(e){return e&&e.sensitive?"":"i"}function La(e,n,t){Ra(n)||(t=n||t,n=[]);for(var o=(t=t||{}).strict,r=!1!==t.end,a="",s=0;s<e.length;s++){var i=e[s];if("string"==typeof i)a+=za(i);else{var c=za(i.prefix),u="(?:"+i.pattern+")";n.push(i),i.repeat&&(u+="(?:"+c+u+")*"),a+=u=i.optional?i.partial?c+"("+u+")?":"(?:"+c+"("+u+"))?":c+"("+u+")"}}var l=za(t.delimiter||"/"),d=a.slice(-l.length)===l;return o||(a=(d?a.slice(0,-l.length):a)+"(?:"+l+"(?=$))?"),a+=r?"$":o&&d?"":"(?="+l+"|$)",Pa(new RegExp("^"+a,Ha(t)),n)}function Ba(e,n,t){return Ra(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var o=0;o<t.length;o++)n.push({name:o,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Pa(e,n)}(e,n):Ra(e)?function(e,n,t){for(var o=[],r=0;r<e.length;r++)o.push(Ba(e[r],n,t).source);return Pa(new RegExp("(?:"+o.join("|")+")",Ha(t)),n)}(e,n,t):function(e,n,t){return La(Aa(e,t),n,t)}(e,n,t)}ja.parse=Sa,ja.compile=Ta,ja.tokensToFunction=Ea,ja.tokensToRegExp=Oa;var Ua=Object.create(null);function Va(e,n,t){n=n||{};try{var o=Ua[e]||(Ua[e]=ja.compile(e));return"string"==typeof n.pathMatch&&(n[0]=n.pathMatch),o(n,{pretty:!0})}catch(e){return""}finally{delete n[0]}}function Fa(e,n,t,o){var r="string"==typeof e?{path:e}:e;if(r._normalized)return r;if(r.name){var a=(r=ta({},e)).params;return a&&"object"==typeof a&&(r.params=ta({},a)),r}if(!r.path&&r.params&&n){(r=ta({},r))._normalized=!0;var s=ta(ta({},n.params),r.params);if(n.name)r.name=n.name,r.params=s;else if(n.matched.length){var i=n.matched[n.matched.length-1].path;r.path=Va(i,s,n.path)}else 0;return r}var c=function(e){var n="",t="",o=e.indexOf("#");o>=0&&(n=e.slice(o),e=e.slice(0,o));var r=e.indexOf("?");return r>=0&&(t=e.slice(r+1),e=e.slice(0,r)),{path:e,query:t,hash:n}}(r.path||""),u=n&&n.path||"/",l=c.path?wa(c.path,u,t||r.append):u,d=function(e,n,t){void 0===n&&(n={});var o,r=t||ua;try{o=r(e||"")}catch(e){o={}}for(var a in n){var s=n[a];o[a]=Array.isArray(s)?s.map(ca):ca(s)}return o}(c.query,r.query,o&&o.options.parseQuery),p=r.hash||c.hash;return p&&"#"!==p.charAt(0)&&(p="#"+p),{_normalized:!0,path:l,query:d,hash:p}}var Na,qa=function(){},Wa={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var n=this,t=this.$router,o=this.$route,r=t.resolve(this.to,o,this.append),a=r.location,s=r.route,i=r.href,c={},u=t.options.linkActiveClass,l=t.options.linkExactActiveClass,d=null==u?"router-link-active":u,p=null==l?"router-link-exact-active":l,f=null==this.activeClass?d:this.activeClass,h=null==this.exactActiveClass?p:this.exactActiveClass,m=s.redirectedFrom?pa(null,Fa(s.redirectedFrom),null,t):s;c[h]=xa(o,m,this.exactPath),c[f]=this.exact||this.exactPath?c[h]:function(e,n){return 0===e.path.replace(da,"/").indexOf(n.path.replace(da,"/"))&&(!n.hash||e.hash===n.hash)&&function(e,n){for(var t in n)if(!(t in e))return!1;return!0}(e.query,n.query)}(o,m);var v=c[h]?this.ariaCurrentValue:null,x=function(e){Xa(e)&&(n.replace?t.replace(a,qa):t.push(a,qa))},g={click:Xa};Array.isArray(this.event)?this.event.forEach((function(e){g[e]=x})):g[this.event]=x;var b={class:c},y=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:i,route:s,navigate:x,isActive:c[f],isExactActive:c[h]});if(y){if(1===y.length)return y[0];if(y.length>1||!y.length)return 0===y.length?e():e("span",{},y)}if("a"===this.tag)b.on=g,b.attrs={href:i,"aria-current":v};else{var k=function e(n){var t;if(n)for(var o=0;o<n.length;o++){if("a"===(t=n[o]).tag)return t;if(t.children&&(t=e(t.children)))return t}}(this.$slots.default);if(k){k.isStatic=!1;var _=k.data=ta({},k.data);for(var w in _.on=_.on||{},_.on){var C=_.on[w];w in g&&(_.on[w]=Array.isArray(C)?C:[C])}for(var R in g)R in _.on?_.on[R].push(g[R]):_.on[R]=x;var j=k.data.attrs=ta({},k.data.attrs);j.href=i,j["aria-current"]=v}else b.on=g}return e(this.tag,b,this.$slots.default)}};function Xa(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var n=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(n))return}return e.preventDefault&&e.preventDefault(),!0}}var Ja="undefined"!=typeof window;function Ga(e,n,t,o,r){var a=n||[],s=t||Object.create(null),i=o||Object.create(null);e.forEach((function(e){!function e(n,t,o,r,a,s){var i=r.path,c=r.name;0;var u=r.pathToRegexpOptions||{},l=function(e,n,t){t||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==n)return e;return Ca(n.path+"/"+e)}(i,a,u.strict);"boolean"==typeof r.caseSensitive&&(u.sensitive=r.caseSensitive);var d={path:l,regex:Za(l,u),components:r.components||{default:r.component},alias:r.alias?"string"==typeof r.alias?[r.alias]:r.alias:[],instances:{},enteredCbs:{},name:c,parent:a,matchAs:s,redirect:r.redirect,beforeEnter:r.beforeEnter,meta:r.meta||{},props:null==r.props?{}:r.components?r.props:{default:r.props}};r.children&&r.children.forEach((function(r){var a=s?Ca(s+"/"+r.path):void 0;e(n,t,o,r,d,a)}));t[d.path]||(n.push(d.path),t[d.path]=d);if(void 0!==r.alias)for(var p=Array.isArray(r.alias)?r.alias:[r.alias],f=0;f<p.length;++f){0;var h={path:p[f],children:r.children};e(n,t,o,h,a,d.path||"/")}c&&(o[c]||(o[c]=d))}(a,s,i,e,r)}));for(var c=0,u=a.length;c<u;c++)"*"===a[c]&&(a.push(a.splice(c,1)[0]),u--,c--);return{pathList:a,pathMap:s,nameMap:i}}function Za(e,n){return ja(e,[],n)}function Ka(e,n){var t=Ga(e),o=t.pathList,r=t.pathMap,a=t.nameMap;function s(e,t,s){var i=Fa(e,t,!1,n),u=i.name;if(u){var l=a[u];if(!l)return c(null,i);var d=l.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof i.params&&(i.params={}),t&&"object"==typeof t.params)for(var p in t.params)!(p in i.params)&&d.indexOf(p)>-1&&(i.params[p]=t.params[p]);return i.path=Va(l.path,i.params),c(l,i,s)}if(i.path){i.params={};for(var f=0;f<o.length;f++){var h=o[f],m=r[h];if(Ya(m.regex,i.path,i.params))return c(m,i,s)}}return c(null,i)}function i(e,t){var o=e.redirect,r="function"==typeof o?o(pa(e,t,null,n)):o;if("string"==typeof r&&(r={path:r}),!r||"object"!=typeof r)return c(null,t);var i=r,u=i.name,l=i.path,d=t.query,p=t.hash,f=t.params;if(d=i.hasOwnProperty("query")?i.query:d,p=i.hasOwnProperty("hash")?i.hash:p,f=i.hasOwnProperty("params")?i.params:f,u){a[u];return s({_normalized:!0,name:u,query:d,hash:p,params:f},void 0,t)}if(l){var h=function(e,n){return wa(e,n.parent?n.parent.path:"/",!0)}(l,e);return s({_normalized:!0,path:Va(h,f),query:d,hash:p},void 0,t)}return c(null,t)}function c(e,t,o){return e&&e.redirect?i(e,o||t):e&&e.matchAs?function(e,n,t){var o=s({_normalized:!0,path:Va(t,n.params)});if(o){var r=o.matched,a=r[r.length-1];return n.params=o.params,c(a,n)}return c(null,n)}(0,t,e.matchAs):pa(e,t,o,n)}return{match:s,addRoute:function(e,n){var t="object"!=typeof e?a[e]:void 0;Ga([n||e],o,r,a,t),t&&t.alias.length&&Ga(t.alias.map((function(e){return{path:e,children:[n]}})),o,r,a,t)},getRoutes:function(){return o.map((function(e){return r[e]}))},addRoutes:function(e){Ga(e,o,r,a)}}}function Ya(e,n,t){var o=n.match(e);if(!o)return!1;if(!t)return!0;for(var r=1,a=o.length;r<a;++r){var s=e.keys[r-1];s&&(t[s.name||"pathMatch"]="string"==typeof o[r]?ia(o[r]):o[r])}return!0}var Qa=Ja&&window.performance&&window.performance.now?window.performance:Date;function es(){return Qa.now().toFixed(3)}var ns=es();function ts(){return ns}function os(e){return ns=e}var rs=Object.create(null);function as(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,n=window.location.href.replace(e,""),t=ta({},window.history.state);return t.key=ts(),window.history.replaceState(t,"",n),window.addEventListener("popstate",cs),function(){window.removeEventListener("popstate",cs)}}function ss(e,n,t,o){if(e.app){var r=e.options.scrollBehavior;r&&e.app.$nextTick((function(){var a=function(){var e=ts();if(e)return rs[e]}(),s=r.call(e,n,t,o?a:null);s&&("function"==typeof s.then?s.then((function(e){fs(e,a)})).catch((function(e){0})):fs(s,a))}))}}function is(){var e=ts();e&&(rs[e]={x:window.pageXOffset,y:window.pageYOffset})}function cs(e){is(),e.state&&e.state.key&&os(e.state.key)}function us(e){return ds(e.x)||ds(e.y)}function ls(e){return{x:ds(e.x)?e.x:window.pageXOffset,y:ds(e.y)?e.y:window.pageYOffset}}function ds(e){return"number"==typeof e}var ps=/^#\d/;function fs(e,n){var t,o="object"==typeof e;if(o&&"string"==typeof e.selector){var r=ps.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(r){var a=e.offset&&"object"==typeof e.offset?e.offset:{};n=function(e,n){var t=document.documentElement.getBoundingClientRect(),o=e.getBoundingClientRect();return{x:o.left-t.left-n.x,y:o.top-t.top-n.y}}(r,a={x:ds((t=a).x)?t.x:0,y:ds(t.y)?t.y:0})}else us(e)&&(n=ls(e))}else o&&us(e)&&(n=ls(e));n&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:n.x,top:n.y,behavior:e.behavior}):window.scrollTo(n.x,n.y))}var hs,ms=Ja&&((-1===(hs=window.navigator.userAgent).indexOf("Android 2.")&&-1===hs.indexOf("Android 4.0")||-1===hs.indexOf("Mobile Safari")||-1!==hs.indexOf("Chrome")||-1!==hs.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function vs(e,n){is();var t=window.history;try{if(n){var o=ta({},t.state);o.key=ts(),t.replaceState(o,"",e)}else t.pushState({key:os(es())},"",e)}catch(t){window.location[n?"replace":"assign"](e)}}function xs(e){vs(e,!0)}var gs={redirected:2,aborted:4,cancelled:8,duplicated:16};function bs(e,n){return ks(e,n,gs.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var n={};return _s.forEach((function(t){t in e&&(n[t]=e[t])})),JSON.stringify(n,null,2)}(n)+'" via a navigation guard.')}function ys(e,n){return ks(e,n,gs.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+n.fullPath+'" with a new navigation.')}function ks(e,n,t,o){var r=new Error(o);return r._isRouter=!0,r.from=e,r.to=n,r.type=t,r}var _s=["params","query","hash"];function ws(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Cs(e,n){return ws(e)&&e._isRouter&&(null==n||e.type===n)}function Rs(e,n,t){var o=function(r){r>=e.length?t():e[r]?n(e[r],(function(){o(r+1)})):o(r+1)};o(0)}function js(e){return function(n,t,o){var r=!1,a=0,s=null;Ss(e,(function(e,n,t,i){if("function"==typeof e&&void 0===e.cid){r=!0,a++;var c,u=Os((function(n){var r;((r=n).__esModule||Es&&"Module"===r[Symbol.toStringTag])&&(n=n.default),e.resolved="function"==typeof n?n:Na.extend(n),t.components[i]=n,--a<=0&&o()})),l=Os((function(e){var n="Failed to resolve async component "+i+": "+e;s||(s=ws(e)?e:new Error(n),o(s))}));try{c=e(u,l)}catch(e){l(e)}if(c)if("function"==typeof c.then)c.then(u,l);else{var d=c.component;d&&"function"==typeof d.then&&d.then(u,l)}}})),r||o()}}function Ss(e,n){return Ts(e.map((function(e){return Object.keys(e.components).map((function(t){return n(e.components[t],e.instances[t],e,t)}))})))}function Ts(e){return Array.prototype.concat.apply([],e)}var Es="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Os(e){var n=!1;return function(){for(var t=[],o=arguments.length;o--;)t[o]=arguments[o];if(!n)return n=!0,e.apply(this,t)}}var Is=function(e,n){this.router=e,this.base=function(e){if(!e)if(Ja){var n=document.querySelector("base");e=(e=n&&n.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(n),this.current=ha,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function As(e,n,t,o){var r=Ss(e,(function(e,o,r,a){var s=function(e,n){"function"!=typeof e&&(e=Na.extend(e));return e.options[n]}(e,n);if(s)return Array.isArray(s)?s.map((function(e){return t(e,o,r,a)})):t(s,o,r,a)}));return Ts(o?r.reverse():r)}function $s(e,n){if(n)return function(){return e.apply(n,arguments)}}Is.prototype.listen=function(e){this.cb=e},Is.prototype.onReady=function(e,n){this.ready?e():(this.readyCbs.push(e),n&&this.readyErrorCbs.push(n))},Is.prototype.onError=function(e){this.errorCbs.push(e)},Is.prototype.transitionTo=function(e,n,t){var o,r=this;try{o=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(n){n(e)})),e}var a=this.current;this.confirmTransition(o,(function(){r.updateRoute(o),n&&n(o),r.ensureURL(),r.router.afterHooks.forEach((function(e){e&&e(o,a)})),r.ready||(r.ready=!0,r.readyCbs.forEach((function(e){e(o)})))}),(function(e){t&&t(e),e&&!r.ready&&(Cs(e,gs.redirected)&&a===ha||(r.ready=!0,r.readyErrorCbs.forEach((function(n){n(e)}))))}))},Is.prototype.confirmTransition=function(e,n,t){var o=this,r=this.current;this.pending=e;var a,s,i=function(e){!Cs(e)&&ws(e)&&(o.errorCbs.length?o.errorCbs.forEach((function(n){n(e)})):console.error(e)),t&&t(e)},c=e.matched.length-1,u=r.matched.length-1;if(xa(e,r)&&c===u&&e.matched[c]===r.matched[u])return this.ensureURL(),e.hash&&ss(this.router,r,e,!1),i(((s=ks(a=r,e,gs.duplicated,'Avoided redundant navigation to current location: "'+a.fullPath+'".')).name="NavigationDuplicated",s));var l=function(e,n){var t,o=Math.max(e.length,n.length);for(t=0;t<o&&e[t]===n[t];t++);return{updated:n.slice(0,t),activated:n.slice(t),deactivated:e.slice(t)}}(this.current.matched,e.matched),d=l.updated,p=l.deactivated,f=l.activated,h=[].concat(function(e){return As(e,"beforeRouteLeave",$s,!0)}(p),this.router.beforeHooks,function(e){return As(e,"beforeRouteUpdate",$s)}(d),f.map((function(e){return e.beforeEnter})),js(f)),m=function(n,t){if(o.pending!==e)return i(ys(r,e));try{n(e,r,(function(n){!1===n?(o.ensureURL(!0),i(function(e,n){return ks(e,n,gs.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+n.fullPath+'" via a navigation guard.')}(r,e))):ws(n)?(o.ensureURL(!0),i(n)):"string"==typeof n||"object"==typeof n&&("string"==typeof n.path||"string"==typeof n.name)?(i(bs(r,e)),"object"==typeof n&&n.replace?o.replace(n):o.push(n)):t(n)}))}catch(e){i(e)}};Rs(h,m,(function(){Rs(function(e){return As(e,"beforeRouteEnter",(function(e,n,t,o){return function(e,n,t){return function(o,r,a){return e(o,r,(function(e){"function"==typeof e&&(n.enteredCbs[t]||(n.enteredCbs[t]=[]),n.enteredCbs[t].push(e)),a(e)}))}}(e,t,o)}))}(f).concat(o.router.resolveHooks),m,(function(){if(o.pending!==e)return i(ys(r,e));o.pending=null,n(e),o.router.app&&o.router.app.$nextTick((function(){ya(e)}))}))}))},Is.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Is.prototype.setupListeners=function(){},Is.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=ha,this.pending=null};var Ds=function(e){function n(n,t){e.call(this,n,t),this._startLocation=zs(this.base)}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router,t=n.options.scrollBehavior,o=ms&&t;o&&this.listeners.push(as());var r=function(){var t=e.current,r=zs(e.base);e.current===ha&&r===e._startLocation||e.transitionTo(r,(function(e){o&&ss(n,e,t,!0)}))};window.addEventListener("popstate",r),this.listeners.push((function(){window.removeEventListener("popstate",r)}))}},n.prototype.go=function(e){window.history.go(e)},n.prototype.push=function(e,n,t){var o=this,r=this.current;this.transitionTo(e,(function(e){vs(Ca(o.base+e.fullPath)),ss(o.router,e,r,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var o=this,r=this.current;this.transitionTo(e,(function(e){xs(Ca(o.base+e.fullPath)),ss(o.router,e,r,!1),n&&n(e)}),t)},n.prototype.ensureURL=function(e){if(zs(this.base)!==this.current.fullPath){var n=Ca(this.base+this.current.fullPath);e?vs(n):xs(n)}},n.prototype.getCurrentLocation=function(){return zs(this.base)},n}(Is);function zs(e){var n=window.location.pathname,t=n.toLowerCase(),o=e.toLowerCase();return!e||t!==o&&0!==t.indexOf(Ca(o+"/"))||(n=n.slice(e.length)),(n||"/")+window.location.search+window.location.hash}var Ms=function(e){function n(n,t,o){e.call(this,n,t),o&&function(e){var n=zs(e);if(!/^\/#/.test(n))return window.location.replace(Ca(e+"/#"+n)),!0}(this.base)||Ps()}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router.options.scrollBehavior,t=ms&&n;t&&this.listeners.push(as());var o=function(){var n=e.current;Ps()&&e.transitionTo(Hs(),(function(o){t&&ss(e.router,o,n,!0),ms||Us(o.fullPath)}))},r=ms?"popstate":"hashchange";window.addEventListener(r,o),this.listeners.push((function(){window.removeEventListener(r,o)}))}},n.prototype.push=function(e,n,t){var o=this,r=this.current;this.transitionTo(e,(function(e){Bs(e.fullPath),ss(o.router,e,r,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var o=this,r=this.current;this.transitionTo(e,(function(e){Us(e.fullPath),ss(o.router,e,r,!1),n&&n(e)}),t)},n.prototype.go=function(e){window.history.go(e)},n.prototype.ensureURL=function(e){var n=this.current.fullPath;Hs()!==n&&(e?Bs(n):Us(n))},n.prototype.getCurrentLocation=function(){return Hs()},n}(Is);function Ps(){var e=Hs();return"/"===e.charAt(0)||(Us("/"+e),!1)}function Hs(){var e=window.location.href,n=e.indexOf("#");return n<0?"":e=e.slice(n+1)}function Ls(e){var n=window.location.href,t=n.indexOf("#");return(t>=0?n.slice(0,t):n)+"#"+e}function Bs(e){ms?vs(Ls(e)):window.location.hash=e}function Us(e){ms?xs(Ls(e)):window.location.replace(Ls(e))}var Vs=function(e){function n(n,t){e.call(this,n,t),this.stack=[],this.index=-1}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.push=function(e,n,t){var o=this;this.transitionTo(e,(function(e){o.stack=o.stack.slice(0,o.index+1).concat(e),o.index++,n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var o=this;this.transitionTo(e,(function(e){o.stack=o.stack.slice(0,o.index).concat(e),n&&n(e)}),t)},n.prototype.go=function(e){var n=this,t=this.index+e;if(!(t<0||t>=this.stack.length)){var o=this.stack[t];this.confirmTransition(o,(function(){var e=n.current;n.index=t,n.updateRoute(o),n.router.afterHooks.forEach((function(n){n&&n(o,e)}))}),(function(e){Cs(e,gs.duplicated)&&(n.index=t)}))}},n.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},n.prototype.ensureURL=function(){},n}(Is),Fs=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ka(e.routes||[],this);var n=e.mode||"hash";switch(this.fallback="history"===n&&!ms&&!1!==e.fallback,this.fallback&&(n="hash"),Ja||(n="abstract"),this.mode=n,n){case"history":this.history=new Ds(this,e.base);break;case"hash":this.history=new Ms(this,e.base,this.fallback);break;case"abstract":this.history=new Vs(this,e.base);break;default:0}},Ns={currentRoute:{configurable:!0}};Fs.prototype.match=function(e,n,t){return this.matcher.match(e,n,t)},Ns.currentRoute.get=function(){return this.history&&this.history.current},Fs.prototype.init=function(e){var n=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var t=n.apps.indexOf(e);t>-1&&n.apps.splice(t,1),n.app===e&&(n.app=n.apps[0]||null),n.app||n.history.teardown()})),!this.app){this.app=e;var t=this.history;if(t instanceof Ds||t instanceof Ms){var o=function(e){t.setupListeners(),function(e){var o=t.current,r=n.options.scrollBehavior;ms&&r&&"fullPath"in e&&ss(n,e,o,!1)}(e)};t.transitionTo(t.getCurrentLocation(),o,o)}t.listen((function(e){n.apps.forEach((function(n){n._route=e}))}))}},Fs.prototype.beforeEach=function(e){return Ws(this.beforeHooks,e)},Fs.prototype.beforeResolve=function(e){return Ws(this.resolveHooks,e)},Fs.prototype.afterEach=function(e){return Ws(this.afterHooks,e)},Fs.prototype.onReady=function(e,n){this.history.onReady(e,n)},Fs.prototype.onError=function(e){this.history.onError(e)},Fs.prototype.push=function(e,n,t){var o=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){o.history.push(e,n,t)}));this.history.push(e,n,t)},Fs.prototype.replace=function(e,n,t){var o=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){o.history.replace(e,n,t)}));this.history.replace(e,n,t)},Fs.prototype.go=function(e){this.history.go(e)},Fs.prototype.back=function(){this.go(-1)},Fs.prototype.forward=function(){this.go(1)},Fs.prototype.getMatchedComponents=function(e){var n=e?e.matched?e:this.resolve(e).route:this.currentRoute;return n?[].concat.apply([],n.matched.map((function(e){return Object.keys(e.components).map((function(n){return e.components[n]}))}))):[]},Fs.prototype.resolve=function(e,n,t){var o=Fa(e,n=n||this.history.current,t,this),r=this.match(o,n),a=r.redirectedFrom||r.fullPath;return{location:o,route:r,href:function(e,n,t){var o="hash"===t?"#"+n:n;return e?Ca(e+"/"+o):o}(this.history.base,a,this.mode),normalizedTo:o,resolved:r}},Fs.prototype.getRoutes=function(){return this.matcher.getRoutes()},Fs.prototype.addRoute=function(e,n){this.matcher.addRoute(e,n),this.history.current!==ha&&this.history.transitionTo(this.history.getCurrentLocation())},Fs.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==ha&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Fs.prototype,Ns);var qs=Fs;function Ws(e,n){return e.push(n),function(){var t=e.indexOf(n);t>-1&&e.splice(t,1)}}Fs.install=function e(n){if(!e.installed||Na!==n){e.installed=!0,Na=n;var t=function(e){return void 0!==e},o=function(e,n){var o=e.$options._parentVnode;t(o)&&t(o=o.data)&&t(o=o.registerRouteInstance)&&o(e,n)};n.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),n.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,o(this,this)},destroyed:function(){o(this)}}),Object.defineProperty(n.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(n.prototype,"$route",{get:function(){return this._routerRoot._route}}),n.component("RouterView",ka),n.component("RouterLink",Wa);var r=n.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}},Fs.version="3.6.5",Fs.isNavigationFailure=Cs,Fs.NavigationFailureType=gs,Fs.START_LOCATION=ha,Ja&&window.Vue&&window.Vue.use(Fs);t(98);t(13),t(130);var Xs={NotFound:()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,318)),Layout:()=>Promise.all([t.e(0),t.e(2)]).then(t.bind(null,317))},Js={"v-0984cce1":()=>t.e(5).then(t.bind(null,319)),"v-3fc9d1f0":()=>t.e(6).then(t.bind(null,320)),"v-72b8f81b":()=>t.e(7).then(t.bind(null,321)),"v-48fa0d46":()=>t.e(8).then(t.bind(null,322)),"v-cf1e7c3c":()=>t.e(9).then(t.bind(null,323)),"v-203b00fc":()=>t.e(10).then(t.bind(null,324)),"v-a25d69dc":()=>t.e(11).then(t.bind(null,325)),"v-56ff8d3c":()=>t.e(12).then(t.bind(null,326)),"v-71a2faae":()=>t.e(13).then(t.bind(null,327)),"v-7c321b48":()=>t.e(14).then(t.bind(null,328)),"v-79108ef8":()=>t.e(15).then(t.bind(null,329)),"v-f8c0a0dc":()=>t.e(16).then(t.bind(null,330)),"v-349dd31c":()=>t.e(17).then(t.bind(null,331)),"v-748e7cb2":()=>t.e(18).then(t.bind(null,332)),"v-0e390e5c":()=>t.e(19).then(t.bind(null,333)),"v-866ffc9c":()=>t.e(20).then(t.bind(null,334)),"v-3b9dbf9c":()=>t.e(21).then(t.bind(null,335)),"v-1afb1872":()=>t.e(22).then(t.bind(null,336)),"v-3a895b40":()=>t.e(23).then(t.bind(null,337)),"v-4bd231aa":()=>t.e(24).then(t.bind(null,338)),"v-6b0a6271":()=>t.e(25).then(t.bind(null,339)),"v-782f6ddc":()=>t.e(26).then(t.bind(null,340)),"v-513c8141":()=>t.e(27).then(t.bind(null,341)),"v-5d36b894":()=>t.e(28).then(t.bind(null,342)),"v-53104ef6":()=>t.e(29).then(t.bind(null,343)),"v-a113e2c4":()=>t.e(30).then(t.bind(null,344))};function Gs(e){const n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}const Zs=/-(\w)/g,Ks=Gs(e=>e.replace(Zs,(e,n)=>n?n.toUpperCase():"")),Ys=/\B([A-Z])/g,Qs=Gs(e=>e.replace(Ys,"-$1").toLowerCase()),ei=Gs(e=>e.charAt(0).toUpperCase()+e.slice(1));function ni(e,n){if(!n)return;if(e(n))return e(n);return n.includes("-")?e(ei(Ks(n))):e(ei(n))||e(Qs(n))}const ti=Object.assign({},Xs,Js),oi=e=>ti[e],ri=e=>Js[e],ai=e=>Xs[e],si=e=>Wt.component(e);function ii(e){return ni(ri,e)}function ci(e){return ni(ai,e)}function ui(e){return ni(oi,e)}function li(e){return ni(si,e)}function di(...e){return Promise.all(e.filter(e=>e).map(async e=>{if(!li(e)&&ui(e)){const n=await ui(e)();Wt.component(e,n.default)}}))}function pi(e,n){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=n)}var fi=t(92),hi=t.n(fi),mi=t(93),vi=t.n(mi),xi={created(){if(this.siteMeta=this.$site.headTags.filter(([e])=>"meta"===e).map(([e,n])=>n),this.$ssrContext){const n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map(e=>{let n="<meta";return Object.keys(e).forEach(t=>{n+=` ${t}="${vi()(e[t])}"`}),n+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=bi(this.$canonicalUrl)}var e},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const e=this.getMergedMetaTags();this.currentMetaTags=yi(e,this.currentMetaTags)},getMergedMetaTags(){const e=this.$page.frontmatter.meta||[];return hi()([{name:"description",content:this.$description}],e,this.siteMeta,ki)},updateCanonicalLink(){gi(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",bi(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){yi(null,this.currentMetaTags),gi()}};function gi(){const e=document.querySelector("link[rel='canonical']");e&&e.remove()}function bi(e=""){return e?`<link href="${e}" rel="canonical" />`:""}function yi(e,n){if(n&&[...n].filter(e=>e.parentNode===document.head).forEach(e=>document.head.removeChild(e)),e)return e.map(e=>{const n=document.createElement("meta");return Object.keys(e).forEach(t=>{n.setAttribute(t,e[t])}),document.head.appendChild(n),n})}function ki(e){for(const n of["name","property","itemprop"])if(e.hasOwnProperty(n))return e[n]+n;return JSON.stringify(e)}var _i=t(48),wi={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(_i)()((function(){this.setActiveHash()}),300),setActiveHash(){const e=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter(n=>e.some(e=>e.hash===n.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),r=window.innerHeight+t;for(let e=0;e<n.length;e++){const a=n[e],s=n[e+1],i=0===e&&0===t||t>=a.parentElement.offsetTop+10&&(!s||t<s.parentElement.offsetTop-10),c=decodeURIComponent(this.$route.hash);if(i&&c!==decodeURIComponent(a.hash)){const t=a;if(r===o)for(let t=e+1;t<n.length;t++)if(c===decodeURIComponent(n[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},Ci=t(24),Ri=t.n(Ci),ji={mounted(){Ri.a.configure({showSpinner:!1}),this.$router.beforeEach((e,n,t)=>{e.path===n.path||Wt.component(e.name)||Ri.a.start(),t()}),this.$router.afterEach(()=>{Ri.a.done(),this.isSidebarOpen=!1})}};t(239),t(240);class Si{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:e="",duration:n=3e3}){let t=document.createElement("div");t.className="message move-in",t.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${e}</div>\n    `,this.containerEl.appendChild(t),n>0&&setTimeout(()=>{this.close(t)},n)}close(e){e.className=e.className.replace("move-in",""),e.className+="move-out",e.addEventListener("animationend",()=>{e.remove()})}}var Ti={mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(e=>{document.querySelectorAll(e).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(e){if(e.classList.contains("codecopy-enabled"))return;const n=document.createElement("i");n.className="code-copy",n.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',n.title="Copy to clipboard",n.addEventListener("click",()=>{this.copyToClipboard(e.innerText)}),e.appendChild(n),e.classList.add("codecopy-enabled")},copyToClipboard(e){const n=document.createElement("textarea");n.value=e,n.setAttribute("readonly",""),n.style.position="absolute",n.style.left="-9999px",document.body.appendChild(n);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);n.select(),document.execCommand("copy");(new Si).show({text:"复制成功",duration:1e3}),document.body.removeChild(n),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}};!function(e,n){void 0===n&&(n={});var t=n.insertAt;if(e&&"undefined"!=typeof document){var o=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===t&&o.firstChild?o.insertBefore(r,o.firstChild):o.appendChild(r),r.styleSheet?r.styleSheet.cssText=e:r.appendChild(document.createTextNode(e))}}("@media (max-width: 1000px) {\n  .vuepress-plugin-demo-block__h_code {\n    display: none;\n  }\n  .vuepress-plugin-demo-block__app {\n    margin-left: auto !important;\n    margin-right: auto !important;\n  }\n}\n.vuepress-plugin-demo-block__wrapper {\n  margin-top: 10px;\n  border: 1px solid #ebebeb;\n  border-radius: 4px;\n  transition: all 0.2s;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display {\n  height: 400px;\n  display: flex;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__app {\n  width: 300px;\n  border: 1px solid #ebebeb;\n  box-shadow: 1px 1px 3px #ebebeb;\n  margin-right: 5px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code {\n  flex: 1;\n  overflow: auto;\n  height: 100%;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code > pre {\n  overflow: visible;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  max-height: 400px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper div {\n  box-sizing: border-box;\n}\n.vuepress-plugin-demo-block__wrapper:hover {\n  box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code {\n  overflow: hidden;\n  height: 0;\n  padding: 0 !important;\n  background-color: #282c34;\n  border-radius: 0 !important;\n  transition: height 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code pre {\n  margin: 0 !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  padding: 20px;\n  border-bottom: 1px solid #ebebeb;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer {\n  position: relative;\n  text-align: center;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__codepen {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__expand::before {\n  border-top: none;\n  border-right: 6px solid transparent;\n  border-bottom: 6px solid #ccc;\n  border-left: 6px solid transparent;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__codepen,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand span,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand::before {\n  border-top-color: #3eaf7c !important;\n  border-bottom-color: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover svg {\n  fill: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand-text {\n  transition: all 0.5s;\n  opacity: 0;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:nth-last-child(2) {\n  right: 50px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:last-child {\n  right: 10px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button {\n  border-color: transparent;\n  background-color: transparent;\n  font-size: 14px;\n  color: #3eaf7c;\n  cursor: pointer;\n  outline: none;\n  margin: 0;\n  width: 46px;\n  position: relative;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::before {\n  content: attr(data-tip);\n  white-space: nowrap;\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  color: #eee;\n  line-height: 1;\n  z-index: 1000;\n  border-radius: 4px;\n  padding: 6px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::after {\n  content: '' !important;\n  display: block;\n  position: absolute;\n  left: 50%;\n  top: -5px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  border: 5px solid transparent;\n  border-top-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button svg {\n  width: 34px;\n  height: 20px;\n  fill: #ccc;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__codepen {\n  position: absolute;\n  top: 10px;\n  transition: all 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand {\n  position: relative;\n  width: 100px;\n  height: 40px;\n  margin: 0;\n  color: #3eaf7c;\n  font-size: 14px;\n  background-color: transparent;\n  border-color: transparent;\n  outline: none;\n  transition: all 0.5s;\n  cursor: pointer;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand::before {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 0;\n  height: 0;\n  border-top: 6px solid #ccc;\n  border-right: 6px solid transparent;\n  border-left: 6px solid transparent;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n}\n");var Ei={jsLib:[],cssLib:[],jsfiddle:!0,codepen:!0,codepenLayout:"left",codepenJsProcessor:"babel",codepenEditors:"101",horizontal:!1,vue:"https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js",react:"https://cdn.jsdelivr.net/npm/react/umd/react.production.min.js",reactDOM:"https://cdn.jsdelivr.net/npm/react-dom/umd/react-dom.production.min.js"},Oi={},Ii=function(e){return'<div id="app">\n'.concat(e,"\n</div>")},Ai=function(e){return window.$VUEPRESS_DEMO_BLOCK&&void 0!==window.$VUEPRESS_DEMO_BLOCK[e]?window.$VUEPRESS_DEMO_BLOCK[e]:Ei[e]},$i=function e(n,t,o){var r=document.createElement(n);return t&&Object.keys(t).forEach((function(e){if(e.indexOf("data"))r[e]=t[e];else{var n=e.replace("data","");r.dataset[n]=t[e]}})),o&&o.forEach((function(n){var t=n.tag,o=n.attrs,a=n.children;r.appendChild(e(t,o,a))})),r},Di=function(e,n,t){var o,r=(o=e.querySelectorAll(".".concat(n)),Array.prototype.slice.call(o));return 1!==r.length||t?r:r[0]},zi=function(e,n){var t,o,r=e.match(/<style>([\s\S]+)<\/style>/),a=e.match(/<template>([\s\S]+)<\/template>/),s=e.match(/<script>([\s\S]+)<\/script>/),i={css:r&&r[1].replace(/^\n|\n$/g,""),html:a&&a[1].replace(/^\n|\n$/g,""),js:s&&s[1].replace(/^\n|\n$/g,""),jsLib:n.jsLib||[],cssLib:n.cssLib||[]};i.htmlTpl=Ii(i.html),i.jsTpl=(t=i.js,o=t.replace(/export\s+default\s*?\{\n*/,"").replace(/\n*\}\s*$/,"").trim(),"new Vue({\n  el: '#app',\n  ".concat(o,"\n})")),i.script=function(e,n){var t=e.split(/export\s+default/),o="(function() {".concat(t[0]," ; return ").concat(t[1],"})()"),r=window.Babel?window.Babel.transform(o,{presets:["es2015"]}).code:o,a=[eval][0](r);return a.template=n,a}(i.js,i.html);var c=Ai("vue");return i.jsLib.unshift(c),i},Mi=function(e,n){var t,o=e.match(/<style>([\s\S]+)<\/style>/),r=e.match(/<html>([\s\S]+)<\/html>/),a=e.match(/<script>([\s\S]+)<\/script>/),s={css:o&&o[1].replace(/^\n|\n$/g,""),html:r&&r[1].replace(/^\n|\n$/g,""),js:a&&a[1].replace(/^\n|\n$/g,""),jsLib:n.jsLib||[],cssLib:n.cssLib||[]};return s.htmlTpl=s.html,s.jsTpl=s.js,s.script=(t=s.js,window.Babel?window.Babel.transform(t,{presets:["es2015"]}).code:t),s},Pi=function(e){return e=e.replace("export default ","").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,""),e+='ReactDOM.render(React.createElement(App), document.getElementById("app"))'};function Hi(){var e=Di(document,"vuepress-plugin-demo-block__wrapper",!0);e.length?e.forEach((function(e){if("true"!==e.dataset.created){e.style.display="block";var n=Di(e,"vuepress-plugin-demo-block__code"),t=Di(e,"vuepress-plugin-demo-block__display"),o=Di(e,"vuepress-plugin-demo-block__footer"),r=Di(t,"vuepress-plugin-demo-block__app"),a=decodeURIComponent(e.dataset.code),s=decodeURIComponent(e.dataset.config),i=decodeURIComponent(e.dataset.type);s=s?JSON.parse(s):{};var c=n.querySelector("div").clientHeight,u="react"===i?function(e,n){var t=(0,window.Babel.transform)(e,{presets:["es2015","react"]}).code,o="(function(exports){var module={};module.exports=exports;".concat(t,";return module.exports.__esModule?module.exports.default:module.exports;})({})"),r=new Function("return ".concat(o))(),a={js:r,css:r.__style__||"",jsLib:n.jsLib||[],cssLib:n.cssLib||[],jsTpl:Pi(e),htmlTpl:Ii("")},s=Ai("react"),i=Ai("reactDOM");return a.jsLib.unshift(s,i),a}(a,s):"vanilla"===i?Mi(a,s):zi(a,s),l=$i("button",{className:"".concat("vuepress-plugin-demo-block__expand")});if(o.appendChild(l),l.addEventListener("click",Li.bind(null,l,c,n,o)),Ai("jsfiddle")&&o.appendChild(function(e){var n=e.css,t=e.htmlTpl,o=e.jsTpl,r=e.jsLib,a=e.cssLib,s=r.concat(a).concat(Ai("cssLib")).concat(Ai("jsLib")).join(",");return $i("form",{className:"vuepress-plugin-demo-block__jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"css",value:n}},{tag:"input",attrs:{type:"hidden",name:"html",value:t}},{tag:"input",attrs:{type:"hidden",name:"js",value:o}},{tag:"input",attrs:{type:"hidden",name:"panel_js",value:3}},{tag:"input",attrs:{type:"hidden",name:"wrap",value:1}},{tag:"input",attrs:{type:"hidden",name:"resources",value:s}},{tag:"button",attrs:{type:"submit",className:"vuepress-plugin-demo-block__button",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088289967" class="icon" style="" viewBox="0 0 1170 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1952" xmlns:xlink="http://www.w3.org/1999/xlink" width="228.515625" height="200"><defs><style type="text/css"></style></defs><path d="M1028.571429 441.142857q63.428571 26.285714 102.571428 83.142857T1170.285714 650.857143q0 93.714286-67.428571 160.285714T940 877.714286q-2.285714 0-6.571429-0.285715t-6-0.285714H232q-97.142857-5.714286-164.571429-71.714286T0 645.142857q0-62.857143 31.428571-116t84-84q-6.857143-22.285714-6.857142-46.857143 0-65.714286 46.857142-112t113.714286-46.285714q54.285714 0 98.285714 33.142857 42.857143-88 127.142858-141.714286t186.571428-53.714285q94.857143 0 174.857143 46T982.571429 248.571429t46.571428 172q0 3.428571-0.285714 10.285714t-0.285714 10.285714zM267.428571 593.142857q0 69.714286 48 110.285714t118.857143 40.571429q78.285714 0 137.142857-56.571429-9.142857-11.428571-27.142857-32.285714T519.428571 626.285714q-38.285714 37.142857-82.285714 37.142857-31.428571 0-53.428571-19.142857T361.714286 594.285714q0-30.285714 22-49.714285t52.285714-19.428572q25.142857 0 48.285714 12t41.714286 31.428572 37.142857 42.857142 39.428572 46.857143 44 42.857143 55.428571 31.428572 69.428571 12q69.142857 0 116.857143-40.857143T936 594.857143q0-69.142857-48-109.714286t-118.285714-40.571428q-81.714286 0-137.714286 55.428571l53.142857 61.714286q37.714286-36.571429 81.142857-36.571429 29.714286 0 52.571429 18.857143t22.857143 48q0 32.571429-21.142857 52.285714t-53.714286 19.714286q-24.571429 0-47.142857-12t-41.142857-31.428571-37.428572-42.857143-39.714286-46.857143-44.285714-42.857143-55.142857-31.428571T434.285714 444.571429q-69.714286 0-118.285714 40.285714T267.428571 593.142857z" p-id="1953"></path></svg>',datatip:"JSFiddle"}}])}(u)),Ai("codepen")&&o.appendChild(function(e){var n=e.css,t=e.htmlTpl,o=e.jsTpl,r=e.jsLib,a=e.cssLib,s=JSON.stringify({css:n,html:t,js:o,js_external:r.concat(Ai("jsLib")).join(";"),css_external:a.concat(Ai("cssLib")).join(";"),layout:Ai("codepenLayout"),js_pre_processor:Ai("codepenJsProcessor"),editors:Ai("codepenEditors")});return $i("form",{className:"vuepress-plugin-demo-block__codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"data",value:s}},{tag:"button",attrs:{type:"submit",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088271207" class="icon" style="" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1737" xmlns:xlink="http://www.w3.org/1999/xlink" width="200" height="200"><defs><style type="text/css"></style></defs><path d="M123.428571 668l344.571429 229.714286v-205.142857L277.142857 565.142857z m-35.428571-82.285714l110.285714-73.714286-110.285714-73.714286v147.428572z m468 312l344.571429-229.714286-153.714286-102.857143-190.857143 127.428572v205.142857z m-44-281.714286l155.428571-104-155.428571-104-155.428571 104zM277.142857 458.857143l190.857143-127.428572V126.285714L123.428571 356z m548.571429 53.142857l110.285714 73.714286V438.285714z m-78.857143-53.142857l153.714286-102.857143-344.571429-229.714286v205.142857z m277.142857-102.857143v312q0 23.428571-19.428571 36.571429l-468 312q-12 7.428571-24.571429 7.428571t-24.571429-7.428571L19.428571 704.571429q-19.428571-13.142857-19.428571-36.571429V356q0-23.428571 19.428571-36.571429L487.428571 7.428571q12-7.428571 24.571429-7.428571t24.571429 7.428571l468 312q19.428571 13.142857 19.428571 36.571429z" p-id="1738"></path></svg>',className:"vuepress-plugin-demo-block__button",datatip:"Codepen"}}])}(u)),void 0!==s.horizontal?s.horizontal:Ai("horizontal")){e.classList.add("vuepress-plugin-demo-block__horizontal");var d=n.firstChild.cloneNode(!0);d.classList.add("vuepress-plugin-demo-block__h_code"),t.appendChild(d)}if(u.css&&function(e){if(!Oi[e]){var n=$i("style",{innerHTML:e});document.body.appendChild(n),Oi[e]=!0}}(u.css),"react"===i)ReactDOM.render(React.createElement(u.js),r);else if("vue"===i){var p=(new(Vue.extend(u.script))).$mount();r.appendChild(p.$el)}else"vanilla"===i&&(r.innerHTML=u.html,new Function("return (function(){".concat(u.script,"})()"))());e.dataset.created="true"}})):setTimeout((function(e){Hi()}),300)}function Li(e,n,t,o){var r="1"!==e.dataset.isExpand;t.style.height=r?"".concat(n,"px"):0,r?o.classList.add("vuepress-plugin-demo-block__show-link"):o.classList.remove("vuepress-plugin-demo-block__show-link"),e.dataset.isExpand=r?"1":"0"}var Bi={mounted:function(){window.$VUEPRESS_DEMO_BLOCK={jsfiddle:!1,codepen:!0,horizontal:!1},Hi()},updated:function(){Hi()}},Ui="auto",Vi="zoom-in",Fi="zoom-out",Ni="grab",qi="move";function Wi(e,n,t){var o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r={passive:!1};o?e.addEventListener(n,t,r):e.removeEventListener(n,t,r)}function Xi(e,n){if(e){var t=new Image;t.onload=function(){n&&n(t)},t.src=e}}function Ji(e){return e.dataset.original?e.dataset.original:"A"===e.parentNode.tagName?e.parentNode.getAttribute("href"):null}function Gi(e,n,t){!function(e){var n=Zi,t=Ki;if(e.transition){var o=e.transition;delete e.transition,e[n]=o}if(e.transform){var r=e.transform;delete e.transform,e[t]=r}}(n);var o=e.style,r={};for(var a in n)t&&(r[a]=o[a]||""),o[a]=n[a];return r}var Zi="transition",Ki="transform",Yi="transform",Qi="transitionend";var ec=function(){},nc={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:ec,onClose:ec,onGrab:ec,onMove:ec,onRelease:ec,onBeforeOpen:ec,onBeforeClose:ec,onBeforeGrab:ec,onBeforeRelease:ec,onImageLoading:ec,onImageLoaded:ec},tc={init:function(e){var n,t;n=this,t=e,Object.getOwnPropertyNames(Object.getPrototypeOf(n)).forEach((function(e){n[e]=n[e].bind(t)}))},click:function(e){if(e.preventDefault(),rc(e))return window.open(this.target.srcOriginal||e.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(e.currentTarget)},scroll:function(){var e=document.documentElement||document.body.parentNode||document.body,n=window.pageXOffset||e.scrollLeft,t=window.pageYOffset||e.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:n,y:t});var o=this.lastScrollPosition.x-n,r=this.lastScrollPosition.y-t,a=this.options.scrollThreshold;(Math.abs(r)>=a||Math.abs(o)>=a)&&(this.lastScrollPosition=null,this.close())},keydown:function(e){(function(e){return"Escape"===(e.key||e.code)||27===e.keyCode})(e)&&(this.released?this.close():this.release(this.close))},mousedown:function(e){if(oc(e)&&!rc(e)){e.preventDefault();var n=e.clientX,t=e.clientY;this.pressTimer=setTimeout(function(){this.grab(n,t)}.bind(this),200)}},mousemove:function(e){this.released||this.move(e.clientX,e.clientY)},mouseup:function(e){oc(e)&&!rc(e)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(e){e.preventDefault();var n=e.touches[0],t=n.clientX,o=n.clientY;this.pressTimer=setTimeout(function(){this.grab(t,o)}.bind(this),200)},touchmove:function(e){if(!this.released){var n=e.touches[0],t=n.clientX,o=n.clientY;this.move(t,o)}},touchend:function(e){(function(e){e.targetTouches.length})(e)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function oc(e){return 0===e.button}function rc(e){return e.metaKey||e.ctrlKey}var ac={init:function(e){this.el=document.createElement("div"),this.instance=e,this.parent=document.body,Gi(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(e.options),Wi(this.el,"click",e.handler.clickOverlay.bind(e))},updateStyle:function(e){Gi(this.el,{zIndex:e.zIndex,backgroundColor:e.bgColor,transition:"opacity\n        "+e.transitionDuration+"s\n        "+e.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},sc="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ic=function(){function e(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(n,t,o){return t&&e(n.prototype,t),o&&e(n,o),n}}(),cc=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},uc={init:function(e,n){this.el=e,this.instance=n,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=Ji(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var e=this.instance.options,n=e.zIndex,t=e.enableGrab,o=e.transitionDuration,r=e.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:n+1,cursor:t?Ni:Fi,transition:Yi+"\n        "+o+"s\n        "+r,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=Gi(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,Gi(this.el,{transform:"none"})},grab:function(e,n,t){var o=lc(),r=o.x-e,a=o.y-n;Gi(this.el,{cursor:qi,transform:"translate3d(\n        "+(this.translate.x+r)+"px, "+(this.translate.y+a)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(e,n,t){var o=lc(),r=o.x-e,a=o.y-n;Gi(this.el,{transition:Yi,transform:"translate3d(\n        "+(this.translate.x+r)+"px, "+(this.translate.y+a)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){Gi(this.el,this.styleClose)},restoreOpenStyle:function(){Gi(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var e=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var n=this.el.cloneNode(!1);n.setAttribute("src",this.srcOriginal),n.style.position="fixed",n.style.visibility="hidden",e.appendChild(n),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),e.removeChild(n)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var e=lc(),n=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:e.x-n,y:e.y-t}},calculateScale:function(){var e=this.el.dataset,n=e.zoomingHeight,t=e.zoomingWidth,o=this.instance.options,r=o.customSize,a=o.scaleBase;if(!r&&n&&t)return{x:t/this.rect.width,y:n/this.rect.height};if(r&&"object"===(void 0===r?"undefined":sc(r)))return{x:r.width/this.rect.width,y:r.height/this.rect.height};var s=this.rect.width/2,i=this.rect.height/2,c=lc(),u={x:c.x-s,y:c.y-i},l=u.x/s,d=u.y/i,p=a+Math.min(l,d);if(r&&"string"==typeof r){var f=t||this.el.naturalWidth,h=n||this.el.naturalHeight,m=parseFloat(r)*f/(100*this.rect.width),v=parseFloat(r)*h/(100*this.rect.height);if(p>m||p>v)return{x:m,y:v}}return{x:p,y:p}}};function lc(){var e=document.documentElement;return{x:Math.min(e.clientWidth,window.innerWidth)/2,y:Math.min(e.clientHeight,window.innerHeight)/2}}function dc(e,n,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(o){Wi(e,o,n[o],t)}))}var pc=function(){function e(n){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.target=Object.create(uc),this.overlay=Object.create(ac),this.handler=Object.create(tc),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=cc({},nc,n),this.overlay.init(this),this.handler.init(this)}return ic(e,[{key:"listen",value:function(e){if("string"==typeof e)for(var n=document.querySelectorAll(e),t=n.length;t--;)this.listen(n[t]);else"IMG"===e.tagName&&(e.style.cursor=Vi,Wi(e,"click",this.handler.click),this.options.preloadImage&&Xi(Ji(e)));return this}},{key:"config",value:function(e){return e?(cc(this.options,e),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(e){var n=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var o="string"==typeof e?document.querySelector(e):e;if("IMG"===o.tagName){if(this.options.onBeforeOpen(o),this.target.init(o,this),!this.options.preloadImage){var r=this.target.srcOriginal;null!=r&&(this.options.onImageLoading(o),Xi(r,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),Wi(document,"scroll",this.handler.scroll),Wi(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&Wi(window,"resize",this.handler.resizeWindow);var a=function e(){Wi(o,Qi,e,!1),n.lock=!1,n.target.upgradeSource(),n.options.enableGrab&&dc(document,n.handler,!0),t(o)};return Wi(o,Qi,a),this}}}},{key:"close",value:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=Ui,this.overlay.fadeOut(),this.target.zoomOut(),Wi(document,"scroll",this.handler.scroll,!1),Wi(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&Wi(window,"resize",this.handler.resizeWindow,!1);var o=function o(){Wi(t,Qi,o,!1),e.shown=!1,e.lock=!1,e.target.downgradeSource(),e.options.enableGrab&&dc(document,e.handler,!1),e.target.restoreCloseStyle(),e.overlay.remove(),n(t)};return Wi(t,Qi,o),this}}},{key:"grab",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var r=this.target.el;this.options.onBeforeGrab(r),this.released=!1,this.target.grab(e,n,t);var a=function e(){Wi(r,Qi,e,!1),o(r)};return Wi(r,Qi,a),this}}},{key:"move",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=qi,this.target.move(e,n,t);var r=this.target.el,a=function e(){Wi(r,Qi,e,!1),o(r)};return Wi(r,Qi,a),this}}},{key:"release",value:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=Ui,this.target.restoreOpenStyle();var o=function o(){Wi(t,Qi,o,!1),e.lock=!1,e.released=!0,n(t)};return Wi(t,Qi,o),this}}}]),e}();const fc=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),hc=Number("500");class mc{constructor(){this.instance=new pc(fc)}update(e=".theme-vdoing-content img:not(.no-zoom)"){"undefined"!=typeof window&&this.instance.listen(e)}updateDelay(e=".theme-vdoing-content img:not(.no-zoom)",n=hc){setTimeout(()=>this.update(e),n)}}var vc=[xi,wi,ji,Ti,Bi,{watch:{"$page.path"(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted(){this.$vuepress.zooming=new mc,this.$vuepress.zooming.updateDelay()}}],xc={name:"GlobalLayout",computed:{layout(){const e=this.getLayout();return pi("layout",e),Wt.component(e)}},methods:{getLayout(){if(this.$page.path){const e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},gc=t(7),bc=Object(gc.a)(xc,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,n,t){switch(n){case"components":e[n]||(e[n]={}),Object.assign(e[n],t);break;case"mixins":e[n]||(e[n]=[]),e[n].push(...t);break;default:throw new Error("Unknown option name.")}}(bc,"mixins",vc);const yc=[{name:"v-0984cce1",path:"/pages/9088dd/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-0984cce1").then(t)}},{path:"/pages/9088dd/index.html",redirect:"/pages/9088dd/"},{path:"/01.rust/01.tauri/01.解决 Rust Tauri 1.0 构建时下载 WiX失败.html",redirect:"/pages/9088dd/"},{name:"v-3fc9d1f0",path:"/pages/b63bcd/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-3fc9d1f0").then(t)}},{path:"/pages/b63bcd/index.html",redirect:"/pages/b63bcd/"},{path:"/02.go/01.开发环境/01.Go 配置 VS code 启动.html",redirect:"/pages/b63bcd/"},{name:"v-72b8f81b",path:"/pages/8ce629/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-72b8f81b").then(t)}},{path:"/pages/8ce629/index.html",redirect:"/pages/8ce629/"},{path:"/02.go/01.开发环境/02.windows系统中VS code未识别nodejs cmdlet错误.html",redirect:"/pages/8ce629/"},{name:"v-48fa0d46",path:"/pages/dfd26d/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-48fa0d46").then(t)}},{path:"/pages/dfd26d/index.html",redirect:"/pages/dfd26d/"},{path:"/03.react/01.React Hook 简介.html",redirect:"/pages/dfd26d/"},{name:"v-cf1e7c3c",path:"/pages/b364c0/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-cf1e7c3c").then(t)}},{path:"/pages/b364c0/index.html",redirect:"/pages/b364c0/"},{path:"/03.react/02.useState基础用法.html",redirect:"/pages/b364c0/"},{name:"v-203b00fc",path:"/pages/0e215c/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-203b00fc").then(t)}},{path:"/pages/0e215c/index.html",redirect:"/pages/0e215c/"},{path:"/03.react/03.useState高级用法.html",redirect:"/pages/0e215c/"},{name:"v-a25d69dc",path:"/pages/16dc88/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-a25d69dc").then(t)}},{path:"/pages/16dc88/index.html",redirect:"/pages/16dc88/"},{path:"/03.react/04.useEffect基础用法.html",redirect:"/pages/16dc88/"},{name:"v-56ff8d3c",path:"/pages/b9c039/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-56ff8d3c").then(t)}},{path:"/pages/b9c039/index.html",redirect:"/pages/b9c039/"},{path:"/03.react/05.useEffect高级用法.html",redirect:"/pages/b9c039/"},{name:"v-71a2faae",path:"/pages/fd14d7/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-71a2faae").then(t)}},{path:"/pages/fd14d7/index.html",redirect:"/pages/fd14d7/"},{path:"/03.react/06.useContext基础用法.html",redirect:"/pages/fd14d7/"},{name:"v-7c321b48",path:"/pages/15da39/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-7c321b48").then(t)}},{path:"/pages/15da39/index.html",redirect:"/pages/15da39/"},{path:"/03.react/07.useContext高级用法.html",redirect:"/pages/15da39/"},{name:"v-79108ef8",path:"/pages/ab6774/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-79108ef8").then(t)}},{path:"/pages/ab6774/index.html",redirect:"/pages/ab6774/"},{path:"/03.react/08.useReducer基础用法.html",redirect:"/pages/ab6774/"},{name:"v-f8c0a0dc",path:"/pages/fd7fdb/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-f8c0a0dc").then(t)}},{path:"/pages/fd7fdb/index.html",redirect:"/pages/fd7fdb/"},{path:"/03.react/09.useReducer高级用法.html",redirect:"/pages/fd7fdb/"},{name:"v-349dd31c",path:"/pages/9d19f1/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-349dd31c").then(t)}},{path:"/pages/9d19f1/index.html",redirect:"/pages/9d19f1/"},{path:"/03.react/10.useCallback基础用法.html",redirect:"/pages/9d19f1/"},{name:"v-748e7cb2",path:"/pages/8b008f/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-748e7cb2").then(t)}},{path:"/pages/8b008f/index.html",redirect:"/pages/8b008f/"},{path:"/03.react/11.useMemo基础用法.html",redirect:"/pages/8b008f/"},{name:"v-0e390e5c",path:"/pages/4c9695/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-0e390e5c").then(t)}},{path:"/pages/4c9695/index.html",redirect:"/pages/4c9695/"},{path:"/03.react/12.useRef基础用法.html",redirect:"/pages/4c9695/"},{name:"v-866ffc9c",path:"/pages/ede426/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-866ffc9c").then(t)}},{path:"/pages/ede426/index.html",redirect:"/pages/ede426/"},{path:"/03.react/13.useImperativeHandle基础用法.html",redirect:"/pages/ede426/"},{name:"v-3b9dbf9c",path:"/pages/1b392f/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-3b9dbf9c").then(t)}},{path:"/pages/1b392f/index.html",redirect:"/pages/1b392f/"},{path:"/03.react/14.useLayoutEffect基础用法.html",redirect:"/pages/1b392f/"},{name:"v-1afb1872",path:"/pages/e1ebef/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-1afb1872").then(t)}},{path:"/pages/e1ebef/index.html",redirect:"/pages/e1ebef/"},{path:"/03.react/15.useDebugValue基础用法.html",redirect:"/pages/e1ebef/"},{name:"v-3a895b40",path:"/pages/c38877/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-3a895b40").then(t)}},{path:"/pages/c38877/index.html",redirect:"/pages/c38877/"},{path:"/03.react/16.自定义hook.html",redirect:"/pages/c38877/"},{name:"v-4bd231aa",path:"/pages/621c1c/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-4bd231aa").then(t)}},{path:"/pages/621c1c/index.html",redirect:"/pages/621c1c/"},{path:"/03.react/17.React Hook 总结.html",redirect:"/pages/621c1c/"},{name:"v-6b0a6271",path:"/pages/a44117/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-6b0a6271").then(t)}},{path:"/pages/a44117/index.html",redirect:"/pages/a44117/"},{path:"/03.react/18.示例：React使用Echarts所用到的hooks.html",redirect:"/pages/a44117/"},{name:"v-782f6ddc",path:"/pages/74a184/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-782f6ddc").then(t)}},{path:"/pages/74a184/index.html",redirect:"/pages/74a184/"},{path:"/03.react/19.useTransition基础用法.html",redirect:"/pages/74a184/"},{name:"v-513c8141",path:"/pages/0116b5/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-513c8141").then(t)}},{path:"/pages/0116b5/index.html",redirect:"/pages/0116b5/"},{path:"/03.react/20.React基础知识.html",redirect:"/pages/0116b5/"},{name:"v-5d36b894",path:"/pages/89216e/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-5d36b894").then(t)}},{path:"/pages/89216e/index.html",redirect:"/pages/89216e/"},{path:"/03.react/21.React扩展阅读.html",redirect:"/pages/89216e/"},{name:"v-53104ef6",path:"/blog/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-53104ef6").then(t)}},{path:"/blog/index.html",redirect:"/blog/"},{path:"/@pages/archivesPage.html",redirect:"/blog/"},{name:"v-a113e2c4",path:"/",component:bc,beforeEnter:(e,n,t)=>{di("Layout","v-a113e2c4").then(t)}},{path:"/index.html",redirect:"/"},{path:"*",component:bc}],kc={title:"Allen",description:"rust",base:"/",headTags:[["link",{rel:"icon",href:"/img/favicon.ico"}],["meta",{name:"keywords",content:"allen,,blog,vdoing"}],["meta",{name:"theme-color",content:"#11a8cd"}]],pages:[{title:"解决 Rust Tauri 1.0 构建时下载 WiX失败",frontmatter:{title:"解决 Rust Tauri 1.0 构建时下载 WiX失败",date:"2023-05-15T09:31:28.000Z",permalink:"/pages/9088dd/"},regularPath:"/01.rust/01.tauri/01.%E8%A7%A3%E5%86%B3%20Rust%20Tauri%201.0%20%E6%9E%84%E5%BB%BA%E6%97%B6%E4%B8%8B%E8%BD%BD%20WiX%E5%A4%B1%E8%B4%A5.html",relativePath:"01.rust/01.tauri/01.解决 Rust Tauri 1.0 构建时下载 WiX失败.md",key:"v-0984cce1",path:"/pages/9088dd/",headersStr:null,content:'Windows 的安装器 WiX 的下载失败上：\n\n\n\n外层的代理对命令行又不生效，最好的方式是把这个 WiX 包在浏览器下载完，然后放在 Tauri 需要的地方，让它直接使用，避免再在命令行里下载。\n\nTauri 的判断代码在这里：https://github.com/tauri-apps/tauri/blob/dev/tooling/bundler/src/bundle/windows/msi.rs#L29\n\n/// Runs all of the commands to build the MSI installer.\n/// Returns a vector of PathBuf that shows where the MSI was created.\npub fn bundle_project(settings: &Settings, updater: bool) -> crate::Result<Vec<PathBuf>> {\n  let mut wix_path = dirs_next::cache_dir().unwrap();\n  wix_path.push("tauri/WixTools");\n\n  if !wix_path.exists() {\n    wix::get_and_extract_wix(&wix_path)?;\n  } else if WIX_REQUIRED_FILES\n    .iter()\n    .any(|p| !wix_path.join(p).exists())\n  {\n    warn!("WixTools directory is missing some files. Recreating it.");\n    std::fs::remove_dir_all(&wix_path)?;\n    wix::get_and_extract_wix(&wix_path)?;\n  }\n\n  wix::build_wix_app_installer(settings, &wix_path, updater)\n}\n\n\ndirs_next::cache_dir() 的结果如下：\n\nPLATFORM   VALUE                             EXAMPLE\nLinux      $XDG_CACHE_HOME or $HOME/.cache   /home/alice/.cache\nmacOS      $HOME/Library/Caches              /Users/Alice/Library/Caches\nWindows    {FOLDERID_LocalAppData}           C:\\Users\\Alice\\AppData\\Local\n\n所以直接把 Wix 下载完后，在 C:\\Users\\xxxxxxxx\\AppData\\Loca 中，创建 tauri/WixTools 文件夹，然后把内容解压到里面就可以了。\n\n正常构建完成：\n\n',normalizedContent:'windows 的安装器 wix 的下载失败上：\n\n\n\n外层的代理对命令行又不生效，最好的方式是把这个 wix 包在浏览器下载完，然后放在 tauri 需要的地方，让它直接使用，避免再在命令行里下载。\n\ntauri 的判断代码在这里：https://github.com/tauri-apps/tauri/blob/dev/tooling/bundler/src/bundle/windows/msi.rs#l29\n\n/// runs all of the commands to build the msi installer.\n/// returns a vector of pathbuf that shows where the msi was created.\npub fn bundle_project(settings: &settings, updater: bool) -> crate::result<vec<pathbuf>> {\n  let mut wix_path = dirs_next::cache_dir().unwrap();\n  wix_path.push("tauri/wixtools");\n\n  if !wix_path.exists() {\n    wix::get_and_extract_wix(&wix_path)?;\n  } else if wix_required_files\n    .iter()\n    .any(|p| !wix_path.join(p).exists())\n  {\n    warn!("wixtools directory is missing some files. recreating it.");\n    std::fs::remove_dir_all(&wix_path)?;\n    wix::get_and_extract_wix(&wix_path)?;\n  }\n\n  wix::build_wix_app_installer(settings, &wix_path, updater)\n}\n\n\ndirs_next::cache_dir() 的结果如下：\n\nplatform   value                             example\nlinux      $xdg_cache_home or $home/.cache   /home/alice/.cache\nmacos      $home/library/caches              /users/alice/library/caches\nwindows    {folderid_localappdata}           c:\\users\\alice\\appdata\\local\n\n所以直接把 wix 下载完后，在 c:\\users\\xxxxxxxx\\appdata\\loca 中，创建 tauri/wixtools 文件夹，然后把内容解压到里面就可以了。\n\n正常构建完成：\n\n',charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"Go 配置 VS code 启动",frontmatter:{title:"Go 配置 VS code 启动",date:"2023-05-15T20:29:27.000Z",permalink:"/pages/b63bcd/"},regularPath:"/02.go/01.%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/01.Go%20%E9%85%8D%E7%BD%AE%20VS%20code%20%E5%90%AF%E5%8A%A8.html",relativePath:"02.go/01.开发环境/01.Go 配置 VS code 启动.md",key:"v-3fc9d1f0",path:"/pages/b63bcd/",headers:[{level:2,title:"1、安装go插件",slug:"_1、安装go插件",normalizedTitle:"1、安装go插件",charIndex:110},{level:2,title:"2、安装debug插件",slug:"_2、安装debug插件",normalizedTitle:"2、安装debug插件",charIndex:125},{level:2,title:"3、配置启动文件",slug:"_3、配置启动文件",normalizedTitle:"3、配置启动文件",charIndex:339}],headersStr:"1、安装go插件 2、安装debug插件 3、配置启动文件",content:'最近笔者在学习gokins过程中，最开始的时候，使用goland编译运行，但是后面由于免费试用天数用完就无法使用了，经过比较，还是决定使用VS code运行，但是VS code默认是不支持运行，需要自己手动配置\n\n\n# 1、安装go插件\n\n\n\n\n# 2、安装debug插件\n\n * 输入快捷键Ctrl + Shift + P打开命令快捷输入框，输入go install,选择下图的选项\n\n\n\n * 然后下一个选择框选择dlv 的debug组件（这边建议全选，避免后面使用到对应的工具又要再装一遍），点击OK就可以开始安装了，安装过程中由于是下载国外资源，会比较慢和失败，建议多试几次，如果实在不行的话，就使用手动安装的方式，安装方式请参考dlv的github库指南\n\n\n\n\n# 3、配置启动文件\n\nctrl+shift+p 输入 Debug: Open launch.json 打开 launch.json 文件，如果第一次打开,会新建一个配置文件，默认配置内容如下：\n\n{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    "version": "0.2.0",\n    "configurations": [\n\n\t\t{\n            "name": "Launch",\n            "type": "go",\n            "request": "launch",\n            "mode": "auto",\n            "program": "${fileDirname}",\n            "env": {},\n            "args": []\n        }\n\t]\n}\n\n\n常用的属性如下所示：\n\n属性           介绍\nname         调试界面下拉选择项的名称\ntype         设置为go无需改动，是 vs code 用于计算调试代码需要用哪个扩展\nmode         可以设置为 auto, debug, remote, test, exec 中的一个\nprogram      调试程序的路径（绝对路径）\nenv          调试时使用的环境变量。例如:{ "ENVNAME": "ENVVALUE" }\nenvFile      包含环境变量文件的绝对路径，在 env 中设置的属性会覆盖 envFile 中的配置\nargs         传给正在调试程序命令行参数数组\nshowLog      布尔值，是否将调试信息输出\nlogOutput    配置调试输出的组件（debugger, gdbwire, lldbout, debuglineerr,\n             rpc）,使用,分隔， showLog 设置为 true 时，此项配置生效\nbuildFlags   构建 go 程序时传给 go 编译器的标志，如果需要使用构建标记（e.g. go build\n             -tags=whatever_tag）在参数 buildFlags 里写入 -tags=whatever_tag"\n             即可，支持多标签，使用单引号将标签包围,例如： "-tags=\'first_tag second_tag\n             third_tag\'"\nremotePath   远程调试程序的绝对路径，当 mode 设置为 remote 时有效\n\n其中对应的常用VS code常用公用变量如下所示：\n\n属性                   介绍\n${workspaceFolder}   调试 VS Code 打开工作空间的根目录下的所有文件\n${file}              调试当前文件\n${fileDirname        } 调试当前文件所在目录下的所有文件\n\n> 具体的其他配置，请参考VS code 的官方文档',normalizedContent:'最近笔者在学习gokins过程中，最开始的时候，使用goland编译运行，但是后面由于免费试用天数用完就无法使用了，经过比较，还是决定使用vs code运行，但是vs code默认是不支持运行，需要自己手动配置\n\n\n# 1、安装go插件\n\n\n\n\n# 2、安装debug插件\n\n * 输入快捷键ctrl + shift + p打开命令快捷输入框，输入go install,选择下图的选项\n\n\n\n * 然后下一个选择框选择dlv 的debug组件（这边建议全选，避免后面使用到对应的工具又要再装一遍），点击ok就可以开始安装了，安装过程中由于是下载国外资源，会比较慢和失败，建议多试几次，如果实在不行的话，就使用手动安装的方式，安装方式请参考dlv的github库指南\n\n\n\n\n# 3、配置启动文件\n\nctrl+shift+p 输入 debug: open launch.json 打开 launch.json 文件，如果第一次打开,会新建一个配置文件，默认配置内容如下：\n\n{\n    // use intellisense to learn about possible attributes.\n    // hover to view descriptions of existing attributes.\n    // for more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    "version": "0.2.0",\n    "configurations": [\n\n\t\t{\n            "name": "launch",\n            "type": "go",\n            "request": "launch",\n            "mode": "auto",\n            "program": "${filedirname}",\n            "env": {},\n            "args": []\n        }\n\t]\n}\n\n\n常用的属性如下所示：\n\n属性           介绍\nname         调试界面下拉选择项的名称\ntype         设置为go无需改动，是 vs code 用于计算调试代码需要用哪个扩展\nmode         可以设置为 auto, debug, remote, test, exec 中的一个\nprogram      调试程序的路径（绝对路径）\nenv          调试时使用的环境变量。例如:{ "envname": "envvalue" }\nenvfile      包含环境变量文件的绝对路径，在 env 中设置的属性会覆盖 envfile 中的配置\nargs         传给正在调试程序命令行参数数组\nshowlog      布尔值，是否将调试信息输出\nlogoutput    配置调试输出的组件（debugger, gdbwire, lldbout, debuglineerr,\n             rpc）,使用,分隔， showlog 设置为 true 时，此项配置生效\nbuildflags   构建 go 程序时传给 go 编译器的标志，如果需要使用构建标记（e.g. go build\n             -tags=whatever_tag）在参数 buildflags 里写入 -tags=whatever_tag"\n             即可，支持多标签，使用单引号将标签包围,例如： "-tags=\'first_tag second_tag\n             third_tag\'"\nremotepath   远程调试程序的绝对路径，当 mode 设置为 remote 时有效\n\n其中对应的常用vs code常用公用变量如下所示：\n\n属性                   介绍\n${workspacefolder}   调试 vs code 打开工作空间的根目录下的所有文件\n${file}              调试当前文件\n${filedirname        } 调试当前文件所在目录下的所有文件\n\n> 具体的其他配置，请参考vs code 的官方文档',charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"windows系统中VS code未识别nodejs cmdlet错误",frontmatter:{title:"windows系统中VS code未识别nodejs cmdlet错误",date:"2023-05-16T09:05:52.000Z",permalink:"/pages/8ce629/"},regularPath:"/02.go/01.%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/02.windows%E7%B3%BB%E7%BB%9F%E4%B8%ADVS%20code%E6%9C%AA%E8%AF%86%E5%88%ABnodejs%20cmdlet%E9%94%99%E8%AF%AF.html",relativePath:"02.go/01.开发环境/02.windows系统中VS code未识别nodejs cmdlet错误.md",key:"v-72b8f81b",path:"/pages/8ce629/",headersStr:null,content:"# 报错\n\n最近笔者在windows使用VS code开发的时候，遇到一个奇怪的问题，在调试代码的过程中，发现通过代码执行VS code的命令命令终端时，始终无法正常运行，一直报cmdlet错误，但是通过自己手动打开命令终端执行命令却一切正常。错误如下图所示：\n\n\n# 处理\n\n经过查询资料发现，是由于windows权限问题，导致对应的脚本执行在代码打开的终端没有权限，直接就报错了，最开始由于编码问题看不到对应的错误信息，一直查询各种资料、代码断点，都没有发现问题，最后退出VS code，重新以管理员权限打开VS code再执行程序就解决了。",normalizedContent:"# 报错\n\n最近笔者在windows使用vs code开发的时候，遇到一个奇怪的问题，在调试代码的过程中，发现通过代码执行vs code的命令命令终端时，始终无法正常运行，一直报cmdlet错误，但是通过自己手动打开命令终端执行命令却一切正常。错误如下图所示：\n\n\n# 处理\n\n经过查询资料发现，是由于windows权限问题，导致对应的脚本执行在代码打开的终端没有权限，直接就报错了，最开始由于编码问题看不到对应的错误信息，一直查询各种资料、代码断点，都没有发现问题，最后退出vs code，重新以管理员权限打开vs code再执行程序就解决了。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"01 React Hook 简介",frontmatter:{title:"01 React Hook 简介",date:"2023-09-06T14:32:10.000Z",permalink:"/pages/dfd26d/"},regularPath:"/03.react/01.React%20Hook%20%E7%AE%80%E4%BB%8B.html",relativePath:"03.react/01.React Hook 简介.md",key:"v-48fa0d46",path:"/pages/dfd26d/",headers:[{level:2,title:"学习前提",slug:"学习前提",normalizedTitle:"学习前提",charIndex:85},{level:2,title:"什么是Hooks？",slug:"什么是hooks",normalizedTitle:"什么是hooks？",charIndex:331},{level:5,title:"特别提醒：在React官网中使用的是Hook，而在有些教程中使用的是Hooks。在本教程中Hook和Hooks是同一个意思，不要纠结什么时候用单数什么时候是复数。",slug:"特别提醒-在react官网中使用的是hook-而在有些教程中使用的是hooks。在本教程中hook和hooks是同一个意思-不要纠结什么时候用单数什么时候是复数。",normalizedTitle:"特别提醒：在react官网中使用的是hook，而在有些教程中使用的是hooks。在本教程中hook和hooks是同一个意思，不要纠结什么时候用单数什么时候是复数。",charIndex:620},{level:5,title:"请注意：",slug:"请注意",normalizedTitle:"请注意：",charIndex:705},{level:2,title:"为什么要用Hooks？",slug:"为什么要用hooks",normalizedTitle:"为什么要用hooks？",charIndex:1030},{level:5,title:"缺点一：复杂且不容易理解的“this”",slug:"缺点一-复杂且不容易理解的-this",normalizedTitle:"缺点一：复杂且不容易理解的“this”",charIndex:1060},{level:5,title:"缺点二：组件数据状态逻辑不能重用、组件之间传值过程复杂",slug:"缺点二-组件数据状态逻辑不能重用、组件之间传值过程复杂",normalizedTitle:"缺点二：组件数据状态逻辑不能重用、组件之间传值过程复杂",charIndex:1193},{level:5,title:"缺点三：复杂场景下代码难以组织在一起",slug:"缺点三-复杂场景下代码难以组织在一起",normalizedTitle:"缺点三：复杂场景下代码难以组织在一起",charIndex:1558},{level:5,title:"Hooks是如何解决上述类组件的缺点？",slug:"hooks是如何解决上述类组件的缺点",normalizedTitle:"hooks是如何解决上述类组件的缺点？",charIndex:2118},{level:5,title:"最为关键的是，hook还能实现一些类组件根本不能实现的功能，比如全局共享数据，代替Redux。",slug:"最为关键的是-hook还能实现一些类组件根本不能实现的功能-比如全局共享数据-代替redux。",normalizedTitle:"最为关键的是，hook还能实现一些类组件根本不能实现的功能，比如全局共享数据，代替redux。",charIndex:2677},{level:5,title:"你只需记住一个结论：忘掉类组件，使用Hook进行函数组件开发，将是一个明智选择。",slug:"你只需记住一个结论-忘掉类组件-使用hook进行函数组件开发-将是一个明智选择。",normalizedTitle:"你只需记住一个结论：忘掉类组件，使用hook进行函数组件开发，将是一个明智选择。",charIndex:2803},{level:2,title:"React生命周期函数",slug:"react生命周期函数",normalizedTitle:"react生命周期函数",charIndex:420},{level:2,title:"本节小结",slug:"本节小结",normalizedTitle:"本节小结",charIndex:4273}],headersStr:"学习前提 什么是Hooks？ 特别提醒：在React官网中使用的是Hook，而在有些教程中使用的是Hooks。在本教程中Hook和Hooks是同一个意思，不要纠结什么时候用单数什么时候是复数。 请注意： 为什么要用Hooks？ 缺点一：复杂且不容易理解的“this” 缺点二：组件数据状态逻辑不能重用、组件之间传值过程复杂 缺点三：复杂场景下代码难以组织在一起 Hooks是如何解决上述类组件的缺点？ 最为关键的是，hook还能实现一些类组件根本不能实现的功能，比如全局共享数据，代替Redux。 你只需记住一个结论：忘掉类组件，使用Hook进行函数组件开发，将是一个明智选择。 React生命周期函数 本节小结",content:'# 01 React Hook 简介\n\n首先，欢迎你来学习React Hook，通过本教程你会了解到React Hook工作原理以及我们推荐使用Hook的理由。\n\n\n# 学习前提\n\n在学习本课程之前，需要你对以下知识点有基础的了解：\n1、React基础原理；\n2、函数组件(Functional components)和类组件(class components)，属性传参(props)，自定义内部数据(state)，生命周期函数等；\n3、使用谷歌浏览器且安装了“React Developer Tools”调试工具。\n\n本系列文章适合有一定React开发基础的人，若是React新手，建议先从阅读React官方中文文档学起。\n\n接下来正式开始本教程。\n\n\n# 什么是Hooks？\n\nHook是React 16.8版本中新增的一个新特性，丰富扩展了原有函数组件的功能，让函数组件拥有了像类组件一样的相似特性。\n\n在之前版本中函数组件不能使用React生命周期函数，Hook本身单词意思是“钩子”，作用就是“勾住某些生命周期函数或某些数据状态，并进行某些关联触发调用”。\n\n不同的Hook(钩子)有不同的作用，可以勾住不同的“点”，比如“勾住组件更新完成对应的生命周期函数”、“勾住某props值的变化”等。\n\n正因为React有多个内置Hook，所以本小节的标题才是“什么是Hooks？”，没错，用到了Hook的复数单词Hooks。\n\n# 特别提醒：在React官网中使用的是Hook，而在有些教程中使用的是Hooks。在本教程中Hook和Hooks是同一个意思，不要纠结什么时候用单数什么时候是复数。\n\n# 请注意：\n\n1、尽管函数组件拥有了类组件多大多数的相似特性，但有一点除外：函数组件中没有类组件中“自定义state”的特性，因此你无法在函数组件中使用“this.state.xx”这样的代码。\n\n没有不代表功能的缺失，恰恰相反，因为当你充分了解Hooks之后，你会发现函数组件内部自定义数据状态功能远远超出类组件。\n\n2、Hooks只能运行在函数组件中，不能运行在类组件中。\n补充：准确来说，Hooks只能运行在函数组件的“内部顶层中”，不能运行在if/for等其他函数的代码体内，不允许被if/for等包裹住。\n\n3、Hooks函数必须为纯函数，所谓纯函数就是函数内部不能修改可能影响执行结果的任意参数，确保每次执行的代码结果都是一样的。\n\n\n# 为什么要用Hooks？\n\n先说一下类组件的一些缺点：\n\n# 缺点一：复杂且不容易理解的“this”\n\n例如事件绑定处理函数，都需要bind(this)才可以正确执行。\n例如想获取某些自定义属性，都需要使用this.state.xx或this.props.xx。\n\n这样造成代码不够精简，并且有些时候热更新不能正常运行。\n\n# 缺点二：组件数据状态逻辑不能重用、组件之间传值过程复杂\n\n“组件数据状态逻辑不能重用”，详细解释如下：\n“组件数据状态”是由：定义数据、默认赋值、获取数据、修改数据、数据逻辑几个环节构成。 由于类组件中的组件数据状态state必须写在该组件构造函数内部，无法将state抽离出组件，因此别的组件如果有类似state逻辑，也必须内部自己实现一次，所以才得出“组件数据状态逻辑不能重用”的结论。\n\n“组件之间传值过程复杂”，详细解释如下：\nReact本身为单向数据流，即父组件可以传值给子组件，但子组件不允许直接修改父组件中的数据状态。\n\n子组件为了达到修改父组件中的数据状态，通常采用“高阶组件(HOC)”或“父组件暴露修改函数给子组件(render props)”这2种方式。 这2种方式都会让组件变得复杂且降低可复用性。\n\n# 缺点三：复杂场景下代码难以组织在一起\n\n复杂场景下，比如数据获取(data fetching)和事件订阅(event listeners)，相关代码难以组织在一起。\n\n“相关代码难以组织在一起”，详细解释如下：\n\n第1个“难以组织”的原因：数据获取和事件订阅被分散在不同生命周期函数中。\n\n例如数据获取：组件第一次被挂载(componentDidMount)、组件每次更新完毕(componentDidUpdate)\n例如事件监听：组件第一次被挂载(componentDidMount)、组件即将被卸载(componentWillUnmount)\n\n第2个“难以组织”的原因：内部state数据只能是整体，无法被拆分更细致\n\n类组件中所有内部数据都被储存在this.state中，例如某个组件定义有2个内部数据 name,age，那么永远都是this.state.name、this.state.age。 name和age永远都只是this.state中的一个属性，无法做到将name和age拆分成独立对象个体。\n\n所有内部数据都储存在this.state中，当内部数据复杂时，势必增加维护this.state的难度和复杂性。\n\n“复杂场景下代码难以组织在一起”会造成另外一个延伸性问题：加大了代码自动测试难度。\n\n# Hooks是如何解决上述类组件的缺点？\n\n如果你现在迫切想知道答案，我想对你说：恭喜你，欢迎进入Hooks的世界。\n\n类组件缺点一：复杂且不容易理解的“this”\nHooks解决方式：函数组件和普通JS函数非常相似，在普通JS函数中定义的变量、方法都可以不使用“this.”，而直接使用该变量或函数，因此你不再需要去关心“this”了。\n\n类组件缺点二：组件数据状态逻辑不能重用\nHooks解决方式：\n通过自定义Hook，可以数据状态逻辑从组件中抽离出去，这样同一个Hook可以被多个组件使用，解决组件数据状态逻辑并不能重用的问题。\n\n类组件缺点二：组件之间传值过程复杂、缺点三：复杂场景下代码难以组织在一起\nHooks解决方式：\n通过React内置的useState()函数，可以将不同数据分别从"this.state"中独立拆分出去。降低数据复杂度和可维护性，同时解决类组件缺点三中“内部state数据只能是整体，无法被拆分更细”的问题。\n\n通过React内置的useEffect()函数，将componentDidMount、componentDidUpdate、componentWillUncount 3个生命周期函数通过Hook(钩子)关联成1个处理函数，解决事件订阅分散在多个生命周期函数的问题。\n\n# 最为关键的是，hook还能实现一些类组件根本不能实现的功能，比如全局共享数据，代替Redux。\n\n如果阅读过上面文字，你依然一头雾水，不要着急，你现在只需要对Hooks有一个大体了解即可。\n随着后面的深入学习，你将逐个掌握Hooks的关键用法。\n\n# 你只需记住一个结论：忘掉类组件，使用Hook进行函数组件开发，将是一个明智选择。\n\n\n> 以下内容更新于 2021.01.10\n\n下面讲解一下 React 的生命周期函数，面对如此复杂的生命周期函数，是没有必要过于了解和研究的，目前来说，一般只需学习使用 useEffect 这个 hook 即可。\n\nuseEffect 这个 hook 会在稍后讲解。\n\n\n# React生命周期函数\n\nReact 一次状态更新，一共分为 2 个阶段、4 个生命周期。\n\n2 个阶段：\n\n 1. render阶段：包含Diff算法，计算出状态变化\n 2. commit渲染阶段：ReactDom渲染器，将状态变化渲染在视图中\n\n4个生命周期：\n\n 1. Mount(第一次挂载)\n 2. Update(更新)\n 3. Unmount(卸载)\n 4. Error(子项发生错误)\n\n生命周期函数                      所属阶段       所属生命周期\nconstructor                 Render阶段   Mount\ncomponentWillReceiveProps   Render阶段   Update\ngetDerivedStateFromProps    Render阶段   并存于Moun、Update\ngetDerivedStateFromError    Render阶段   Error\nshouldComponentUpdate       Render阶段   Update\ncomponentWillMount          Render阶段   Mount\ncomponentWillUpdate         Render阶段   Update\nrender                      Render阶段   并存于Mount、Update\ncomponentDidMount           Commit阶段   Mount\ngetSnapshotBeforeUpdate     Commit阶段   Update\ncomponentDidUpdate          Commit阶段   Update\ncomponentWillUnmount        Commit阶段   Unmount\ncomponentDidCatch           Commit阶段   Error\n\n注意事情：\n\ncomponentWillReceiveProps、componentWillMount、componentWillUpdate 这 3 个生命周期函数正在逐步被 React 官方放弃使用，不推荐继续使用这 3 个生命周期函数。\n\n与之对应的是 getDerivedStateFromProps、getDerivedStateFromError 这 2 个这是被推荐使用的。\n\n关于各个生命周期函数详细介绍，可以参考 React 官方文档： https://zh-hans.reactjs.org/docs/react-component.html#commonly-used-lifecycle-methods\n\n补充说明：\n\n目前并不是所有的生命周期函数都对应有 hook 函数。\n\n再次重复一遍，这些生命周期函数你只需大致了解，初学者只需学会 useEffect 这个 hook 即可。\n\n> 以上内容更新于 2021.01.10\n\n\n# 本节小结\n\n1、Hook是React 16.8及以上版本才拥有的特性。\n2、Hook只是React“增加”的概念和一些API，对原有React体系并没有任何破坏。\n3、Hook有很多优势，比如不需要使用“this”、数据状态细致拆分、数据状态逻辑抽离出组件、代码组织更加自由灵活等。\n4、Hook只能用于函数组件，不能用于类组件中。\n5、Hook虽好，但React依然保留对类组件的支持，如果你就是不喜欢Hook，更偏向于继续使用类组件，那么也是可以的，只是你需要继续面对类组件的一些缺点。\n\n----------------------------------------\n\n至此，你对Hook有了一个初步概念，接下来开始学习第1个Hook函数 useState。',normalizedContent:'# 01 react hook 简介\n\n首先，欢迎你来学习react hook，通过本教程你会了解到react hook工作原理以及我们推荐使用hook的理由。\n\n\n# 学习前提\n\n在学习本课程之前，需要你对以下知识点有基础的了解：\n1、react基础原理；\n2、函数组件(functional components)和类组件(class components)，属性传参(props)，自定义内部数据(state)，生命周期函数等；\n3、使用谷歌浏览器且安装了“react developer tools”调试工具。\n\n本系列文章适合有一定react开发基础的人，若是react新手，建议先从阅读react官方中文文档学起。\n\n接下来正式开始本教程。\n\n\n# 什么是hooks？\n\nhook是react 16.8版本中新增的一个新特性，丰富扩展了原有函数组件的功能，让函数组件拥有了像类组件一样的相似特性。\n\n在之前版本中函数组件不能使用react生命周期函数，hook本身单词意思是“钩子”，作用就是“勾住某些生命周期函数或某些数据状态，并进行某些关联触发调用”。\n\n不同的hook(钩子)有不同的作用，可以勾住不同的“点”，比如“勾住组件更新完成对应的生命周期函数”、“勾住某props值的变化”等。\n\n正因为react有多个内置hook，所以本小节的标题才是“什么是hooks？”，没错，用到了hook的复数单词hooks。\n\n# 特别提醒：在react官网中使用的是hook，而在有些教程中使用的是hooks。在本教程中hook和hooks是同一个意思，不要纠结什么时候用单数什么时候是复数。\n\n# 请注意：\n\n1、尽管函数组件拥有了类组件多大多数的相似特性，但有一点除外：函数组件中没有类组件中“自定义state”的特性，因此你无法在函数组件中使用“this.state.xx”这样的代码。\n\n没有不代表功能的缺失，恰恰相反，因为当你充分了解hooks之后，你会发现函数组件内部自定义数据状态功能远远超出类组件。\n\n2、hooks只能运行在函数组件中，不能运行在类组件中。\n补充：准确来说，hooks只能运行在函数组件的“内部顶层中”，不能运行在if/for等其他函数的代码体内，不允许被if/for等包裹住。\n\n3、hooks函数必须为纯函数，所谓纯函数就是函数内部不能修改可能影响执行结果的任意参数，确保每次执行的代码结果都是一样的。\n\n\n# 为什么要用hooks？\n\n先说一下类组件的一些缺点：\n\n# 缺点一：复杂且不容易理解的“this”\n\n例如事件绑定处理函数，都需要bind(this)才可以正确执行。\n例如想获取某些自定义属性，都需要使用this.state.xx或this.props.xx。\n\n这样造成代码不够精简，并且有些时候热更新不能正常运行。\n\n# 缺点二：组件数据状态逻辑不能重用、组件之间传值过程复杂\n\n“组件数据状态逻辑不能重用”，详细解释如下：\n“组件数据状态”是由：定义数据、默认赋值、获取数据、修改数据、数据逻辑几个环节构成。 由于类组件中的组件数据状态state必须写在该组件构造函数内部，无法将state抽离出组件，因此别的组件如果有类似state逻辑，也必须内部自己实现一次，所以才得出“组件数据状态逻辑不能重用”的结论。\n\n“组件之间传值过程复杂”，详细解释如下：\nreact本身为单向数据流，即父组件可以传值给子组件，但子组件不允许直接修改父组件中的数据状态。\n\n子组件为了达到修改父组件中的数据状态，通常采用“高阶组件(hoc)”或“父组件暴露修改函数给子组件(render props)”这2种方式。 这2种方式都会让组件变得复杂且降低可复用性。\n\n# 缺点三：复杂场景下代码难以组织在一起\n\n复杂场景下，比如数据获取(data fetching)和事件订阅(event listeners)，相关代码难以组织在一起。\n\n“相关代码难以组织在一起”，详细解释如下：\n\n第1个“难以组织”的原因：数据获取和事件订阅被分散在不同生命周期函数中。\n\n例如数据获取：组件第一次被挂载(componentdidmount)、组件每次更新完毕(componentdidupdate)\n例如事件监听：组件第一次被挂载(componentdidmount)、组件即将被卸载(componentwillunmount)\n\n第2个“难以组织”的原因：内部state数据只能是整体，无法被拆分更细致\n\n类组件中所有内部数据都被储存在this.state中，例如某个组件定义有2个内部数据 name,age，那么永远都是this.state.name、this.state.age。 name和age永远都只是this.state中的一个属性，无法做到将name和age拆分成独立对象个体。\n\n所有内部数据都储存在this.state中，当内部数据复杂时，势必增加维护this.state的难度和复杂性。\n\n“复杂场景下代码难以组织在一起”会造成另外一个延伸性问题：加大了代码自动测试难度。\n\n# hooks是如何解决上述类组件的缺点？\n\n如果你现在迫切想知道答案，我想对你说：恭喜你，欢迎进入hooks的世界。\n\n类组件缺点一：复杂且不容易理解的“this”\nhooks解决方式：函数组件和普通js函数非常相似，在普通js函数中定义的变量、方法都可以不使用“this.”，而直接使用该变量或函数，因此你不再需要去关心“this”了。\n\n类组件缺点二：组件数据状态逻辑不能重用\nhooks解决方式：\n通过自定义hook，可以数据状态逻辑从组件中抽离出去，这样同一个hook可以被多个组件使用，解决组件数据状态逻辑并不能重用的问题。\n\n类组件缺点二：组件之间传值过程复杂、缺点三：复杂场景下代码难以组织在一起\nhooks解决方式：\n通过react内置的usestate()函数，可以将不同数据分别从"this.state"中独立拆分出去。降低数据复杂度和可维护性，同时解决类组件缺点三中“内部state数据只能是整体，无法被拆分更细”的问题。\n\n通过react内置的useeffect()函数，将componentdidmount、componentdidupdate、componentwilluncount 3个生命周期函数通过hook(钩子)关联成1个处理函数，解决事件订阅分散在多个生命周期函数的问题。\n\n# 最为关键的是，hook还能实现一些类组件根本不能实现的功能，比如全局共享数据，代替redux。\n\n如果阅读过上面文字，你依然一头雾水，不要着急，你现在只需要对hooks有一个大体了解即可。\n随着后面的深入学习，你将逐个掌握hooks的关键用法。\n\n# 你只需记住一个结论：忘掉类组件，使用hook进行函数组件开发，将是一个明智选择。\n\n\n> 以下内容更新于 2021.01.10\n\n下面讲解一下 react 的生命周期函数，面对如此复杂的生命周期函数，是没有必要过于了解和研究的，目前来说，一般只需学习使用 useeffect 这个 hook 即可。\n\nuseeffect 这个 hook 会在稍后讲解。\n\n\n# react生命周期函数\n\nreact 一次状态更新，一共分为 2 个阶段、4 个生命周期。\n\n2 个阶段：\n\n 1. render阶段：包含diff算法，计算出状态变化\n 2. commit渲染阶段：reactdom渲染器，将状态变化渲染在视图中\n\n4个生命周期：\n\n 1. mount(第一次挂载)\n 2. update(更新)\n 3. unmount(卸载)\n 4. error(子项发生错误)\n\n生命周期函数                      所属阶段       所属生命周期\nconstructor                 render阶段   mount\ncomponentwillreceiveprops   render阶段   update\ngetderivedstatefromprops    render阶段   并存于moun、update\ngetderivedstatefromerror    render阶段   error\nshouldcomponentupdate       render阶段   update\ncomponentwillmount          render阶段   mount\ncomponentwillupdate         render阶段   update\nrender                      render阶段   并存于mount、update\ncomponentdidmount           commit阶段   mount\ngetsnapshotbeforeupdate     commit阶段   update\ncomponentdidupdate          commit阶段   update\ncomponentwillunmount        commit阶段   unmount\ncomponentdidcatch           commit阶段   error\n\n注意事情：\n\ncomponentwillreceiveprops、componentwillmount、componentwillupdate 这 3 个生命周期函数正在逐步被 react 官方放弃使用，不推荐继续使用这 3 个生命周期函数。\n\n与之对应的是 getderivedstatefromprops、getderivedstatefromerror 这 2 个这是被推荐使用的。\n\n关于各个生命周期函数详细介绍，可以参考 react 官方文档： https://zh-hans.reactjs.org/docs/react-component.html#commonly-used-lifecycle-methods\n\n补充说明：\n\n目前并不是所有的生命周期函数都对应有 hook 函数。\n\n再次重复一遍，这些生命周期函数你只需大致了解，初学者只需学会 useeffect 这个 hook 即可。\n\n> 以上内容更新于 2021.01.10\n\n\n# 本节小结\n\n1、hook是react 16.8及以上版本才拥有的特性。\n2、hook只是react“增加”的概念和一些api，对原有react体系并没有任何破坏。\n3、hook有很多优势，比如不需要使用“this”、数据状态细致拆分、数据状态逻辑抽离出组件、代码组织更加自由灵活等。\n4、hook只能用于函数组件，不能用于类组件中。\n5、hook虽好，但react依然保留对类组件的支持，如果你就是不喜欢hook，更偏向于继续使用类组件，那么也是可以的，只是你需要继续面对类组件的一些缺点。\n\n----------------------------------------\n\n至此，你对hook有了一个初步概念，接下来开始学习第1个hook函数 usestate。',charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"02 useState基础用法",frontmatter:{title:"02 useState基础用法",date:"2023-09-06T14:37:04.000Z",permalink:"/pages/b364c0/"},regularPath:"/03.react/02.useState%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95.html",relativePath:"03.react/02.useState基础用法.md",key:"v-cf1e7c3c",path:"/pages/b364c0/",headers:[{level:2,title:"useState概念解释",slug:"usestate概念解释",normalizedTitle:"usestate概念解释",charIndex:22},{level:2,title:"useState是来解决类组件什么问题的？",slug:"usestate是来解决类组件什么问题的",normalizedTitle:"usestate是来解决类组件什么问题的？",charIndex:274},{level:2,title:"useState函数源码：",slug:"usestate函数源码",normalizedTitle:"usestate函数源码：",charIndex:795},{level:5,title:"补充一些TypeScript常识：",slug:"补充一些typescript常识",normalizedTitle:"补充一些typescript常识：",charIndex:1320},{level:2,title:"useState基本用法",slug:"usestate基本用法",normalizedTitle:"usestate基本用法",charIndex:1736},{level:5,title:"代码形式：",slug:"代码形式",normalizedTitle:"代码形式：",charIndex:1822},{level:5,title:"拆解说明：",slug:"拆解说明",normalizedTitle:"拆解说明：",charIndex:1925},{level:4,title:"'variable'补充说明",slug:"variable-补充说明",normalizedTitle:"'variable'补充说明",charIndex:2144},{level:5,title:"'setVariable'补充说明：",slug:"setvariable-补充说明",normalizedTitle:"'setvariable'补充说明：",charIndex:2327},{level:5,title:"'value'补充说明：",slug:"value-补充说明",normalizedTitle:"'value'补充说明：",charIndex:2460},{level:5,title:"'newValue'补充说明(非常重要)：",slug:"newvalue-补充说明-非常重要",normalizedTitle:"'newvalue'补充说明(非常重要)：",charIndex:2559},{level:2,title:"useState使用示例：",slug:"usestate使用示例",normalizedTitle:"usestate使用示例：",charIndex:3003},{level:2,title:"练习题",slug:"练习题",normalizedTitle:"练习题",charIndex:3602},{level:5,title:"完整示例：",slug:"完整示例",normalizedTitle:"完整示例：",charIndex:3640}],headersStr:"useState概念解释 useState是来解决类组件什么问题的？ useState函数源码： 补充一些TypeScript常识： useState基本用法 代码形式： 拆解说明： 'variable'补充说明 'setVariable'补充说明： 'value'补充说明： 'newValue'补充说明(非常重要)： useState使用示例： 练习题 完整示例：",content:"# 02 useState基础用法\n\n\n# useState概念解释\n\n我们第一个要学习的Hook(钩子函数)是useState，他的作用是“勾住”函数组件中自定义的变量。\n\n“勾住”？\n回顾一下 “React Hook 简介” 文中那句话：Hook本身单词意思是“钩子”，作用就是“勾住某些生命周期函数或某些数据状态，并进行某些关联触发调用”。\n\n“如何勾住”？ 在React底层代码中，是通过自定义dispatcher，采用“发布订阅模式”实现的。\n\n关于“钩子”、“勾住”、“如何勾住”的概念以后在学习其他Hook函数时不再做解释。\n\n\n# useState是来解决类组件什么问题的？\n\n答：useState能够解决类组件 所有自定义变量只能存储在this.state 的问题。\n\n举例：若某组件需要有2个自定义变量name和age，那么在类组件中只能如下定义\n\nconstructor(props) {\n    super(props);\n    this.state = {\n      name:'puxiao',\n      age:34\n    }\n}\n\n\nname和age只能作为this.state的一个属性。\n\n没有对比就没有伤害，看一下使用useState后，函数组件是如何实现上述需求的\n\nconst [name,setName] = useState('puxiao');\nconst [age,setAge] = useState(34);\n\n\n1、函数组件本身是一个函数，不是类，因此没有构造函数constructor(props)；\n2、任何你想定义的变量都可以单独拆分出去，独立定义，互不影响；\n\n两段代码对比之下，你就会发现使用Hook的useState后，会让我们定义的变量相对独立，清晰简单，便于管理。\n\n接下来开始学习useState。\n\n\n# useState函数源码：\n\n首先看一下React源码中的ReactHooks.js。\n\n//备注：源码采用TypeScript编写，如果不懂TS代码，阅读起来稍显困难\nexport function useState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用Hook”，并不是“Hook源码分析”。之所以贴出源码只是为了显得本文比较有深度。^_^\n\n更新于2020.11.10，这里强调一下：React 源码中使用的是 flow 语法，根本不是 TypeScript 语法，只不过 2 者实在是太像了，以至于让我之前一直误以为 React 源码中是 TS。不过你完全可以将 TS 的泛型知识去套用到 flow 中。在此特别说明一下，至于后续章节中就不再做提醒和修改了，你就当成 TS 语法去理解也行。\n\n# 补充一些TypeScript常识：\n\n1、react 本身采用TypeScript编写，还是补充点TS常识，方便对各个 hook 函数源码的理解。\n2、对于useState以及以后要学习的其他hook函数源码，函数参数中会反复出现<S>、<T>、<P>、<I>、<I>，这些大写字母，react约定他们对应的单词如下：\nstate -> S -> 约定表示某种“数据”\ntype -> T -> 约定表示某种“类型”\nprops -> P -> 约定表示“属性传值对应的props”\ninitial -> I -> 约定表示某个“初始值”\n\n1、这种用<X>包裹起来的类型声明，在TS中成为“泛型”。理论上是可以使用任意单词的，上面那些缩写只是react自己约定单词缩写。\n2、对于一段TS代码，如果出现了<S>，那么后面所有的<S>都将表示“某种相同类型的数据”。对于TypeScript的泛型相关知识，请自己百度学习。\n\n\n# useState基本用法\n\nuseState(value)函数会返回一个数组，该数组包含2个元素：第1个元素为我们定义的变量，第2个元素为修改该变量对应的函数名称。\n\n# 代码形式：\n\nconst [variable,setVariable] = useState(value);\n//....\nsetVariable(newValue);//修改variable的值\n\n\n# 拆解说明：\n\n1、const [a,b] = [a,b] 这种形式为ES6的“解构赋值”；\n2、'variable'为函数组件中自定义的变量名；\n3、'setVariable'为修改'variable'对应的函数名；\n4、'useState'为本次学习的Hook函数；\n5、'value'为变量默认值\n6、'setVariable(newValue)'为调用setVariable并将新的值newValue赋值给variable；\n\n# 'variable'补充说明\n\n1、variable为变量名，实际使用中可以修改成任意变量名，比如name、age、count等等；\n2、但是，函数组件接收父级组件属性传值的变量名为props，因此建议你不要将变量名定为props，以免混淆；\n3、我不听话，我就非要将变量名定义成props，那又会怎么样？答案是不会有什么问题，不仅不会报错而且还会正常执行。\n\n# 'setVariable'补充说明：\n\n1、该名称采用 \"set\"+\"变量名\" 的驼峰命名形式，只是为了提高代码可读性。\n2、一般React项目都约定使用此种命名方式，所以推荐你也如此使用。\n3、当然你也可以使用任意你喜欢的命名风格，但是切记不能以数字开头。\n\n# 'value'补充说明：\n\n1、必填项，不可缺省，若缺省则实际运行时会提示变量名未定义；\n2、值的类型可以是字符串、数字、数组、对象；\n3、值还可以为null，但不可以为undefined；\n\n# 'newValue'补充说明(非常重要)：\n\nsetVariable采用 “异步直接赋值” 的形式，并不会像类组件中的setState()那样做“异步对比累加赋值”。\n\n“异步”？\n这里的“异步”和类组件中setState中的异步是同一个意思，都是为了优化React渲染性能而故意为之。\n\n\"直接赋值\"？\n1、在Hook中，对于简单类型数据，比如number、string类型，可以直接通过setVariable(newValue)直接进行赋值。\n2、但对于复杂类型数据，比如array、object类型，若想修改其中某一个属性值而不影响其他属性，则需要先复制出一份，修改某属性后再整体赋值。具体如何做，请看下一篇“useState高级用法”中“数据类型为Objcet/Array修改方法”内容。\n\n如果新值和当前值完全一样，那么会引发React重新渲染吗？请看下一篇“useState高级用法”中“性能优化”内容。\n\n停！上面的信息量有点多，让我们把思绪先回到最基础的用法上。\n\n\n# useState使用示例：\n\n//函数组件内定义变量name\nconst [name,setName] = useState('nodejs'); //name默认值为nodejs\n\n//在函数组件内，某些事件交互处理函数中修改name的值，例如某次鼠标点击的处理函数handleClick\nconst handleClick = () => {\n  setName('koa');\n  //请注意，setName('koa')是异步修改的，如果此时执行console.log(name) 输出的值依然是nodejs\n  //请留意下一篇文章 “03 useState高级用法” 中 “解决数据异步” 相关部分\n}\n\n\n上述代码中，我们进行了以下操作：\n1、声明一个变量name、修改name的方法setName、并将name默认值设置为'nodejs'；\n2、通过setName将name值修改为'koa'；\n\n注意：在一个组件中，可以不限次数使用useState()，因此，我们可以声明多个变量，例如下面代码：\n\nconst [name,setName] = useState('puxiao');\nconst [age,setAge] = useState(34);\n\n\n在该代码片段中，我们分别定义了2个变量：name、age 以及他们对应的修改函数setName、setAge。\n\n\n# 练习题\n\n用useState实现一个计数器，默认为0，每次点击+1。\n\n# 完整示例：\n\nimport React, { useState } from 'react';\n\nfunction Component() {\n\n  const [count, setCount] = useState(0);\n\n  function clickHandler(){\n    setCount(count+1);\n  }\n\n  return <div onClick={clickHandler}>\n    {count}\n  </div>\n}\n\nexport default Component;\n\n\n请注意上述代码中，没有用到this，这就是函数组件中使用Hook的魅力之一，再也不用去关心烦人的this到底指向谁这个问题了。\n\n实际代码中，本人更加倾向于使用箭头函数来定义方法，所以上述 function clickHandler() 会写成：\n\nconst clickHandler = () => {\n  setCount(count+1);\n}\n\n\n----------------------------------------\n\n至此，关于useState基础用法已经讲完。",normalizedContent:"# 02 usestate基础用法\n\n\n# usestate概念解释\n\n我们第一个要学习的hook(钩子函数)是usestate，他的作用是“勾住”函数组件中自定义的变量。\n\n“勾住”？\n回顾一下 “react hook 简介” 文中那句话：hook本身单词意思是“钩子”，作用就是“勾住某些生命周期函数或某些数据状态，并进行某些关联触发调用”。\n\n“如何勾住”？ 在react底层代码中，是通过自定义dispatcher，采用“发布订阅模式”实现的。\n\n关于“钩子”、“勾住”、“如何勾住”的概念以后在学习其他hook函数时不再做解释。\n\n\n# usestate是来解决类组件什么问题的？\n\n答：usestate能够解决类组件 所有自定义变量只能存储在this.state 的问题。\n\n举例：若某组件需要有2个自定义变量name和age，那么在类组件中只能如下定义\n\nconstructor(props) {\n    super(props);\n    this.state = {\n      name:'puxiao',\n      age:34\n    }\n}\n\n\nname和age只能作为this.state的一个属性。\n\n没有对比就没有伤害，看一下使用usestate后，函数组件是如何实现上述需求的\n\nconst [name,setname] = usestate('puxiao');\nconst [age,setage] = usestate(34);\n\n\n1、函数组件本身是一个函数，不是类，因此没有构造函数constructor(props)；\n2、任何你想定义的变量都可以单独拆分出去，独立定义，互不影响；\n\n两段代码对比之下，你就会发现使用hook的usestate后，会让我们定义的变量相对独立，清晰简单，便于管理。\n\n接下来开始学习usestate。\n\n\n# usestate函数源码：\n\n首先看一下react源码中的reacthooks.js。\n\n//备注：源码采用typescript编写，如果不懂ts代码，阅读起来稍显困难\nexport function usestate<s>(\n  initialstate: (() => s) | s,\n): [s, dispatch<basicstateaction<s>>] {\n  const dispatcher = resolvedispatcher();\n  return dispatcher.usestate(initialstate);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用hook”，并不是“hook源码分析”。之所以贴出源码只是为了显得本文比较有深度。^_^\n\n更新于2020.11.10，这里强调一下：react 源码中使用的是 flow 语法，根本不是 typescript 语法，只不过 2 者实在是太像了，以至于让我之前一直误以为 react 源码中是 ts。不过你完全可以将 ts 的泛型知识去套用到 flow 中。在此特别说明一下，至于后续章节中就不再做提醒和修改了，你就当成 ts 语法去理解也行。\n\n# 补充一些typescript常识：\n\n1、react 本身采用typescript编写，还是补充点ts常识，方便对各个 hook 函数源码的理解。\n2、对于usestate以及以后要学习的其他hook函数源码，函数参数中会反复出现<s>、<t>、<p>、<i>、<i>，这些大写字母，react约定他们对应的单词如下：\nstate -> s -> 约定表示某种“数据”\ntype -> t -> 约定表示某种“类型”\nprops -> p -> 约定表示“属性传值对应的props”\ninitial -> i -> 约定表示某个“初始值”\n\n1、这种用<x>包裹起来的类型声明，在ts中成为“泛型”。理论上是可以使用任意单词的，上面那些缩写只是react自己约定单词缩写。\n2、对于一段ts代码，如果出现了<s>，那么后面所有的<s>都将表示“某种相同类型的数据”。对于typescript的泛型相关知识，请自己百度学习。\n\n\n# usestate基本用法\n\nusestate(value)函数会返回一个数组，该数组包含2个元素：第1个元素为我们定义的变量，第2个元素为修改该变量对应的函数名称。\n\n# 代码形式：\n\nconst [variable,setvariable] = usestate(value);\n//....\nsetvariable(newvalue);//修改variable的值\n\n\n# 拆解说明：\n\n1、const [a,b] = [a,b] 这种形式为es6的“解构赋值”；\n2、'variable'为函数组件中自定义的变量名；\n3、'setvariable'为修改'variable'对应的函数名；\n4、'usestate'为本次学习的hook函数；\n5、'value'为变量默认值\n6、'setvariable(newvalue)'为调用setvariable并将新的值newvalue赋值给variable；\n\n# 'variable'补充说明\n\n1、variable为变量名，实际使用中可以修改成任意变量名，比如name、age、count等等；\n2、但是，函数组件接收父级组件属性传值的变量名为props，因此建议你不要将变量名定为props，以免混淆；\n3、我不听话，我就非要将变量名定义成props，那又会怎么样？答案是不会有什么问题，不仅不会报错而且还会正常执行。\n\n# 'setvariable'补充说明：\n\n1、该名称采用 \"set\"+\"变量名\" 的驼峰命名形式，只是为了提高代码可读性。\n2、一般react项目都约定使用此种命名方式，所以推荐你也如此使用。\n3、当然你也可以使用任意你喜欢的命名风格，但是切记不能以数字开头。\n\n# 'value'补充说明：\n\n1、必填项，不可缺省，若缺省则实际运行时会提示变量名未定义；\n2、值的类型可以是字符串、数字、数组、对象；\n3、值还可以为null，但不可以为undefined；\n\n# 'newvalue'补充说明(非常重要)：\n\nsetvariable采用 “异步直接赋值” 的形式，并不会像类组件中的setstate()那样做“异步对比累加赋值”。\n\n“异步”？\n这里的“异步”和类组件中setstate中的异步是同一个意思，都是为了优化react渲染性能而故意为之。\n\n\"直接赋值\"？\n1、在hook中，对于简单类型数据，比如number、string类型，可以直接通过setvariable(newvalue)直接进行赋值。\n2、但对于复杂类型数据，比如array、object类型，若想修改其中某一个属性值而不影响其他属性，则需要先复制出一份，修改某属性后再整体赋值。具体如何做，请看下一篇“usestate高级用法”中“数据类型为objcet/array修改方法”内容。\n\n如果新值和当前值完全一样，那么会引发react重新渲染吗？请看下一篇“usestate高级用法”中“性能优化”内容。\n\n停！上面的信息量有点多，让我们把思绪先回到最基础的用法上。\n\n\n# usestate使用示例：\n\n//函数组件内定义变量name\nconst [name,setname] = usestate('nodejs'); //name默认值为nodejs\n\n//在函数组件内，某些事件交互处理函数中修改name的值，例如某次鼠标点击的处理函数handleclick\nconst handleclick = () => {\n  setname('koa');\n  //请注意，setname('koa')是异步修改的，如果此时执行console.log(name) 输出的值依然是nodejs\n  //请留意下一篇文章 “03 usestate高级用法” 中 “解决数据异步” 相关部分\n}\n\n\n上述代码中，我们进行了以下操作：\n1、声明一个变量name、修改name的方法setname、并将name默认值设置为'nodejs'；\n2、通过setname将name值修改为'koa'；\n\n注意：在一个组件中，可以不限次数使用usestate()，因此，我们可以声明多个变量，例如下面代码：\n\nconst [name,setname] = usestate('puxiao');\nconst [age,setage] = usestate(34);\n\n\n在该代码片段中，我们分别定义了2个变量：name、age 以及他们对应的修改函数setname、setage。\n\n\n# 练习题\n\n用usestate实现一个计数器，默认为0，每次点击+1。\n\n# 完整示例：\n\nimport react, { usestate } from 'react';\n\nfunction component() {\n\n  const [count, setcount] = usestate(0);\n\n  function clickhandler(){\n    setcount(count+1);\n  }\n\n  return <div onclick={clickhandler}>\n    {count}\n  </div>\n}\n\nexport default component;\n\n\n请注意上述代码中，没有用到this，这就是函数组件中使用hook的魅力之一，再也不用去关心烦人的this到底指向谁这个问题了。\n\n实际代码中，本人更加倾向于使用箭头函数来定义方法，所以上述 function clickhandler() 会写成：\n\nconst clickhandler = () => {\n  setcount(count+1);\n}\n\n\n----------------------------------------\n\n至此，关于usestate基础用法已经讲完。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"03 useState高级用法",frontmatter:{title:"03 useState高级用法",date:"2023-09-06T14:37:11.000Z",permalink:"/pages/0e215c/"},regularPath:"/03.react/03.useState%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95.html",relativePath:"03.react/03.useState高级用法.md",key:"v-203b00fc",path:"/pages/0e215c/",headers:[{level:2,title:"恢复默认值",slug:"恢复默认值",normalizedTitle:"恢复默认值",charIndex:73},{level:2,title:"解决数据异步",slug:"解决数据异步",normalizedTitle:"解决数据异步",charIndex:662},{level:5,title:"解决办法：",slug:"解决办法",normalizedTitle:"解决办法：",charIndex:1025},{level:2,title:"数据类型为Objcet的修改方法",slug:"数据类型为objcet的修改方法",normalizedTitle:"数据类型为objcet的修改方法",charIndex:1552},{level:5,title:"正确的做法：",slug:"正确的做法",normalizedTitle:"正确的做法：",charIndex:2142},{level:2,title:"数据类型为Array的修改方法",slug:"数据类型为array的修改方法",normalizedTitle:"数据类型为array的修改方法",charIndex:3041},{level:2,title:"性能优化",slug:"性能优化",normalizedTitle:"性能优化",charIndex:4769},{level:2,title:"自定义Hook",slug:"自定义hook",normalizedTitle:"自定义hook",charIndex:5478}],headersStr:"恢复默认值 解决数据异步 解决办法： 数据类型为Objcet的修改方法 正确的做法： 数据类型为Array的修改方法 性能优化 自定义Hook",content:"# 03 useState高级用法\n\n所谓高级用法，只不过是一些深层知识点和实用技巧，你甚至可以把本章当做对前面知识点的一个巩固和学习。\n\n\n# 恢复默认值\n\n组件需求：实现一个计数器，有3个按钮，点击后分别实现：恢复默认值、点击+1、点击-1\n\n实现代码：\n\n    import React, { useState } from 'react';\n    \n    function Component() {\n      const initCount = 0;\n      const [count, setCount] = useState(initCount);\n    \n      return <div>\n        {count}\n        <button onClick={() => {setCount(initCount)}}>init</button>\n        <button onClick={() => {setCount(count+1)}}>+1</button>\n        <button onClick={() => {setCount(count-1)}}>-1</button>\n      </div>\n    }\n    \n    export default Component;\n\n\n代码分析：\n1、通过额外定义一个变量initCount=0，作为count的默认值；\n2、任何时候想恢复默认值，直接将initCount赋值给count；\n\n\n# 解决数据异步\n\n还是基于上面那个示例，假设现在新增1个按钮，点击该按钮后执行以下代码：\n\nfor(let i=0; i<3; i++){\n  setCount(count+1);\n}\n\n\n通过for循环，执行了3次setCount(count+1)，那么你觉得count会 +3 吗？\n答案是：肯定不会\n\n无论for循环执行几次，最终实际结果都将是仅仅执行一次 +1。\n\n为什么？\n类组件中setState赋值过程是异步的，同样在Hook中 setXxx 赋值也是异步的，比如上述代码中的setCount。\n\n虽然执行了3次setCount(count+1)，可是每一次修改后的count并不是立即生效的。当第2次和第3次执行时获取到count的值和第1次获取到的count值是一样的，所以最终其实相当于仅执行了1次。\n\n# 解决办法：\n\n你肯定第一时间想到的是这样解决方式：\n\nlet num = count;\nfor(let i=0; i<3; i++){\n  num +=1;\n}\nsetCount(num);\n\n\n这样做肯定没问题，只不过有更简便、性能更高的方式。\n\n和类组件中解决异步的办法类似，就是不直接赋值，而是采用“箭头函数返回值的形式”赋值。\n\n把代码修改为：\n\nfor(let i=0; i<3; i++){\n  setCount(prevData => {return prevData+1});\n  //可以简化为 setCount(prevData => prevData+1);\n}\n\n\n代码分析：\n1、prevData为我们定义的一个形参，指当前count应该的值；\n2、{return prevData+1} 中，将 prevData+1，并将运算结果return出去。当然也非常推荐使用更加简化的写法：setCount(prevData => prevData+1)；\n3、最终将prevData赋值给count；\n\n补充说明：你可以将prevData修改成任意你喜欢的变量名称，比如prev，只需要确保和后面return里的一致即可。\n\n\n# 数据类型为Objcet的修改方法\n\n之前的示例中，每个useState对应的值都是简单的string或number，如果对应的值是object，又该如何处理呢？\n\n例如：\n\nconst [person, setPerson] = useState({name:'puxiao',age:34});\n\n\n若想将age的值修改为18，该怎么写？\n\n如果你有类组件编程经验，你肯定第一时间想是这样的：\n\nsetPerson({age:18});\n\n\n在类组件中，setState是执行的是“异步对比累加赋值”，何为“对比”？ 就是先对比之前数据属性中是否有age，如果有则修改age值，同时不会影响到其他属性的值。我猜测react是使用ES6中新增加的Object.assign()这个函数来实现这一步的。\n\n但是，用useState定义的修改函数 setXxxx，例如setPerson中，执行的是 “异步直接赋值”。\n\n请看实际执行的结果：\n\nconsole.log(person);//{name:'puxiao',age:34}\nsetPerson({age:18});\nconsole.log(person);//{age:18}\n\n\n没错，虽然只是希望修改age的值，但是由于是“直接赋值”，导致{age:18}替换了整个{name:'puxiao',age:34}\n\n# 正确的做法：\n\n我们需要先将person拷贝一份，修改之后再进行赋值。\n\nlet newData = {...person};\nnewData.age = 18;\nsetPerson(newData);\n\n\n以上代码还有一种简写形式：\n\nsetPerson({...person,age:18}); //这种简写是解构赋值带来的，并不是React提供的\n\n\n代码分析：\n1、先通过...person，将原有person做一次解构，得到一份复制品(浅拷贝)；\n2、修改age的值；\n3、将修改过后的新数据，通过setPerson赋值给person；\n\n完整示例：\n\n    import React, { useState } from 'react';\n\n    function Component() {\n\n      const [person, setPerson] = useState({name:'puxiao',age:34});\n\n      const nameChangeHandler = (eve) => {\n        setPerson({...person,name:eve.target.value});\n      }\n\n      const ageChangeHandler = (eve) => {\n        setPerson({...person,age:eve.target.value});\n      }\n\n      return <div>\n        <input type='text' value={person.name} onChange={nameChangeHandler} />\n        <input type='number' value={person.age} onChange={ageChangeHandler} />\n        {JSON.stringify(person)}\n      </div>\n    }\n    export default Component;\n\n\n\n# 数据类型为Array的修改方法\n\n和数据类型为Object相似，都是需要通过先拷贝一次，修改后再整体赋值。\n\n这里举一个简单的小例子，以下代码实现了一个类似学习计划列表的功能组件。\n\n    import React, { useState } from 'react';\n\n    function Component() {\n\n      const [str, setStr] = useState('');\n      const [arr, setArr] = useState(['react', 'Koa']);\n\n      const inputChangeHandler = (eve) => {\n        setStr(eve.target.value);\n      }\n\n      const addHeadHandler = (eve) => {\n        setArr([str,...arr]);//添加至头\n        setStr('');\n      }\n\n      const addEndHandler = (eve) => {\n        setArr([...arr, str]);//添加至尾\n        setStr('');\n      }\n\n      const delHeadHandler = (eve) => {\n        let new_arr = [...arr];\n        new_arr.shift();//从头删除1项目\n        setArr(new_arr);\n      }\n\n      const delEndHandler = (eve) => {\n        let new_arr = [...arr];\n        new_arr.pop();//从尾删除1项目\n        setArr(new_arr);\n      }\n\n      const delByIndex = (eve) => {\n        let index = eve.target.attributes.index.value;\n        let new_arr = [...arr];\n        new_arr.splice(index,1);//删除当前项\n        setArr(new_arr);\n      }\n\n      return <div>\n        <input type='text' value={str} onChange={inputChangeHandler} />\n        <button onClick={addHeadHandler} >添加至头</button>\n        <button onClick={addEndHandler} >添加至尾</button>\n        <button onClick={delHeadHandler} >从头删除1项</button>\n        <button onClick={delEndHandler} >从尾删除1项</button>\n        <ul>\n            {arr.map(\n                (item, index) => {\n                    return <li key={`item${index}`}>学习{index} -  {item}\n                        <span index={index} onClick={delByIndex} style={{ cursor: 'pointer' }}>删除</span>\n                    </li>\n                }\n            )}\n        </ul>\n      </div>\n    }\n\n    export default Component;\n\n\n\n# 性能优化\n\n通过 setXxx 设置新值，但是如果新值和当前值完全一样，那么会引发React重新渲染吗？\n\n通过React官方文档可以知道，当使用 setXxx 赋值时，Hook会使用Object.is()来对比当前值和新值，结果为true则不渲染，结果为false就会重新渲染。\n\nlet str='a';\nObject.is(str,'a'); //true\n\nlet str='18';\nObject.is(str,18); //str为String类型，18为Number类型，因此结果为false\n\nlet obj={name:'a'};\nObject.is(obj,{name:'a'}); //false\n//虽然obj和{name:'a'}字面上相同，但是obj==={name:'a'}为false，并且在Object.is()运算下认为两者不是同一个对象\n//事实上他们确实不是同一个对象，他们各自占用了一份内存\n\nlet obj={name:'a'};\nlet a=obj;\nlet b=obj;\nObject.is(a,b); //因为a和b都指向obj，因此结果为true\n\n\n由上面测试可以看出：\n1、对于简单类型的值，例如String、Number 新旧值一样的情况下是不会引起重新渲染的；\n2、对于复杂类型的值，即使新旧值 “看上去是一样的” 也会引起重新渲染。除非新旧值指向同一个对象，或者可以说成新旧值分别是同一个对象的引用；\n\n采用复杂类型的值不是不可以用，很多场景下都需要用到，但是请记得上面的测试结果。\n\n为了可能存在的性能问题，如果可以，最好避免使用复杂类型的值。\n\n\n# 自定义Hook\n\n所谓自定义Hook，就是将Hook函数从函数组件中抽离，抽离之后多个函数组件可以共用该自定义Hook，共享该Hook的逻辑。\n\n因为目前仅学习了useState，再多学习几个Hook函数后，会单独拿出一个篇章来讲解如何自定义Hook。\n\n----------------------------------------\n\n至此，关于useState高级用法已经讲完，相信你已经掌握了useState的使用方法。\n\nuseState是本系列文章讲解的第一个Hook函数，同时也是使用频率最高的Hook，甚至可以说useState是函数组件开发的基石，因此本章稍显啰嗦，但目的就是希望你能理解透彻。\n\n在后面讲解其他Hook函数时，将会尽量使用简洁、高冷的文章风格。\n\n接下来学习第2个Hook函数useEffect。",normalizedContent:"# 03 usestate高级用法\n\n所谓高级用法，只不过是一些深层知识点和实用技巧，你甚至可以把本章当做对前面知识点的一个巩固和学习。\n\n\n# 恢复默认值\n\n组件需求：实现一个计数器，有3个按钮，点击后分别实现：恢复默认值、点击+1、点击-1\n\n实现代码：\n\n    import react, { usestate } from 'react';\n    \n    function component() {\n      const initcount = 0;\n      const [count, setcount] = usestate(initcount);\n    \n      return <div>\n        {count}\n        <button onclick={() => {setcount(initcount)}}>init</button>\n        <button onclick={() => {setcount(count+1)}}>+1</button>\n        <button onclick={() => {setcount(count-1)}}>-1</button>\n      </div>\n    }\n    \n    export default component;\n\n\n代码分析：\n1、通过额外定义一个变量initcount=0，作为count的默认值；\n2、任何时候想恢复默认值，直接将initcount赋值给count；\n\n\n# 解决数据异步\n\n还是基于上面那个示例，假设现在新增1个按钮，点击该按钮后执行以下代码：\n\nfor(let i=0; i<3; i++){\n  setcount(count+1);\n}\n\n\n通过for循环，执行了3次setcount(count+1)，那么你觉得count会 +3 吗？\n答案是：肯定不会\n\n无论for循环执行几次，最终实际结果都将是仅仅执行一次 +1。\n\n为什么？\n类组件中setstate赋值过程是异步的，同样在hook中 setxxx 赋值也是异步的，比如上述代码中的setcount。\n\n虽然执行了3次setcount(count+1)，可是每一次修改后的count并不是立即生效的。当第2次和第3次执行时获取到count的值和第1次获取到的count值是一样的，所以最终其实相当于仅执行了1次。\n\n# 解决办法：\n\n你肯定第一时间想到的是这样解决方式：\n\nlet num = count;\nfor(let i=0; i<3; i++){\n  num +=1;\n}\nsetcount(num);\n\n\n这样做肯定没问题，只不过有更简便、性能更高的方式。\n\n和类组件中解决异步的办法类似，就是不直接赋值，而是采用“箭头函数返回值的形式”赋值。\n\n把代码修改为：\n\nfor(let i=0; i<3; i++){\n  setcount(prevdata => {return prevdata+1});\n  //可以简化为 setcount(prevdata => prevdata+1);\n}\n\n\n代码分析：\n1、prevdata为我们定义的一个形参，指当前count应该的值；\n2、{return prevdata+1} 中，将 prevdata+1，并将运算结果return出去。当然也非常推荐使用更加简化的写法：setcount(prevdata => prevdata+1)；\n3、最终将prevdata赋值给count；\n\n补充说明：你可以将prevdata修改成任意你喜欢的变量名称，比如prev，只需要确保和后面return里的一致即可。\n\n\n# 数据类型为objcet的修改方法\n\n之前的示例中，每个usestate对应的值都是简单的string或number，如果对应的值是object，又该如何处理呢？\n\n例如：\n\nconst [person, setperson] = usestate({name:'puxiao',age:34});\n\n\n若想将age的值修改为18，该怎么写？\n\n如果你有类组件编程经验，你肯定第一时间想是这样的：\n\nsetperson({age:18});\n\n\n在类组件中，setstate是执行的是“异步对比累加赋值”，何为“对比”？ 就是先对比之前数据属性中是否有age，如果有则修改age值，同时不会影响到其他属性的值。我猜测react是使用es6中新增加的object.assign()这个函数来实现这一步的。\n\n但是，用usestate定义的修改函数 setxxxx，例如setperson中，执行的是 “异步直接赋值”。\n\n请看实际执行的结果：\n\nconsole.log(person);//{name:'puxiao',age:34}\nsetperson({age:18});\nconsole.log(person);//{age:18}\n\n\n没错，虽然只是希望修改age的值，但是由于是“直接赋值”，导致{age:18}替换了整个{name:'puxiao',age:34}\n\n# 正确的做法：\n\n我们需要先将person拷贝一份，修改之后再进行赋值。\n\nlet newdata = {...person};\nnewdata.age = 18;\nsetperson(newdata);\n\n\n以上代码还有一种简写形式：\n\nsetperson({...person,age:18}); //这种简写是解构赋值带来的，并不是react提供的\n\n\n代码分析：\n1、先通过...person，将原有person做一次解构，得到一份复制品(浅拷贝)；\n2、修改age的值；\n3、将修改过后的新数据，通过setperson赋值给person；\n\n完整示例：\n\n    import react, { usestate } from 'react';\n\n    function component() {\n\n      const [person, setperson] = usestate({name:'puxiao',age:34});\n\n      const namechangehandler = (eve) => {\n        setperson({...person,name:eve.target.value});\n      }\n\n      const agechangehandler = (eve) => {\n        setperson({...person,age:eve.target.value});\n      }\n\n      return <div>\n        <input type='text' value={person.name} onchange={namechangehandler} />\n        <input type='number' value={person.age} onchange={agechangehandler} />\n        {json.stringify(person)}\n      </div>\n    }\n    export default component;\n\n\n\n# 数据类型为array的修改方法\n\n和数据类型为object相似，都是需要通过先拷贝一次，修改后再整体赋值。\n\n这里举一个简单的小例子，以下代码实现了一个类似学习计划列表的功能组件。\n\n    import react, { usestate } from 'react';\n\n    function component() {\n\n      const [str, setstr] = usestate('');\n      const [arr, setarr] = usestate(['react', 'koa']);\n\n      const inputchangehandler = (eve) => {\n        setstr(eve.target.value);\n      }\n\n      const addheadhandler = (eve) => {\n        setarr([str,...arr]);//添加至头\n        setstr('');\n      }\n\n      const addendhandler = (eve) => {\n        setarr([...arr, str]);//添加至尾\n        setstr('');\n      }\n\n      const delheadhandler = (eve) => {\n        let new_arr = [...arr];\n        new_arr.shift();//从头删除1项目\n        setarr(new_arr);\n      }\n\n      const delendhandler = (eve) => {\n        let new_arr = [...arr];\n        new_arr.pop();//从尾删除1项目\n        setarr(new_arr);\n      }\n\n      const delbyindex = (eve) => {\n        let index = eve.target.attributes.index.value;\n        let new_arr = [...arr];\n        new_arr.splice(index,1);//删除当前项\n        setarr(new_arr);\n      }\n\n      return <div>\n        <input type='text' value={str} onchange={inputchangehandler} />\n        <button onclick={addheadhandler} >添加至头</button>\n        <button onclick={addendhandler} >添加至尾</button>\n        <button onclick={delheadhandler} >从头删除1项</button>\n        <button onclick={delendhandler} >从尾删除1项</button>\n        <ul>\n            {arr.map(\n                (item, index) => {\n                    return <li key={`item${index}`}>学习{index} -  {item}\n                        <span index={index} onclick={delbyindex} style={{ cursor: 'pointer' }}>删除</span>\n                    </li>\n                }\n            )}\n        </ul>\n      </div>\n    }\n\n    export default component;\n\n\n\n# 性能优化\n\n通过 setxxx 设置新值，但是如果新值和当前值完全一样，那么会引发react重新渲染吗？\n\n通过react官方文档可以知道，当使用 setxxx 赋值时，hook会使用object.is()来对比当前值和新值，结果为true则不渲染，结果为false就会重新渲染。\n\nlet str='a';\nobject.is(str,'a'); //true\n\nlet str='18';\nobject.is(str,18); //str为string类型，18为number类型，因此结果为false\n\nlet obj={name:'a'};\nobject.is(obj,{name:'a'}); //false\n//虽然obj和{name:'a'}字面上相同，但是obj==={name:'a'}为false，并且在object.is()运算下认为两者不是同一个对象\n//事实上他们确实不是同一个对象，他们各自占用了一份内存\n\nlet obj={name:'a'};\nlet a=obj;\nlet b=obj;\nobject.is(a,b); //因为a和b都指向obj，因此结果为true\n\n\n由上面测试可以看出：\n1、对于简单类型的值，例如string、number 新旧值一样的情况下是不会引起重新渲染的；\n2、对于复杂类型的值，即使新旧值 “看上去是一样的” 也会引起重新渲染。除非新旧值指向同一个对象，或者可以说成新旧值分别是同一个对象的引用；\n\n采用复杂类型的值不是不可以用，很多场景下都需要用到，但是请记得上面的测试结果。\n\n为了可能存在的性能问题，如果可以，最好避免使用复杂类型的值。\n\n\n# 自定义hook\n\n所谓自定义hook，就是将hook函数从函数组件中抽离，抽离之后多个函数组件可以共用该自定义hook，共享该hook的逻辑。\n\n因为目前仅学习了usestate，再多学习几个hook函数后，会单独拿出一个篇章来讲解如何自定义hook。\n\n----------------------------------------\n\n至此，关于usestate高级用法已经讲完，相信你已经掌握了usestate的使用方法。\n\nusestate是本系列文章讲解的第一个hook函数，同时也是使用频率最高的hook，甚至可以说usestate是函数组件开发的基石，因此本章稍显啰嗦，但目的就是希望你能理解透彻。\n\n在后面讲解其他hook函数时，将会尽量使用简洁、高冷的文章风格。\n\n接下来学习第2个hook函数useeffect。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"04 useEffect基础用法",frontmatter:{title:"04 useEffect基础用法",date:"2023-09-06T17:47:10.000Z",permalink:"/pages/16dc88/"},regularPath:"/03.react/04.useEffect%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95.html",relativePath:"03.react/04.useEffect基础用法.md",key:"v-a25d69dc",path:"/pages/16dc88/",headers:[{level:2,title:"useEffect概念解释",slug:"useeffect概念解释",normalizedTitle:"useeffect概念解释",charIndex:23},{level:2,title:"useEffect是来解决类组件什么问题的？",slug:"useeffect是来解决类组件什么问题的",normalizedTitle:"useeffect是来解决类组件什么问题的？",charIndex:478},{level:2,title:"useEffect函数源码：",slug:"useeffect函数源码",normalizedTitle:"useeffect函数源码：",charIndex:1928},{level:2,title:"useEffect基本用法",slug:"useeffect基本用法",normalizedTitle:"useeffect基本用法",charIndex:2319},{level:5,title:"代码形式：",slug:"代码形式",normalizedTitle:"代码形式：",charIndex:2894},{level:5,title:"拆解说明：",slug:"拆解说明",normalizedTitle:"拆解说明：",charIndex:3099},{level:4,title:"'effect'补充说明",slug:"effect-补充说明",normalizedTitle:"'effect'补充说明",charIndex:3271},{level:5,title:"'[deps]'补充说明：",slug:"deps-补充说明",normalizedTitle:"'[deps]'补充说明：",charIndex:3339},{level:2,title:"useEffect使用示例：",slug:"useeffect使用示例",normalizedTitle:"useeffect使用示例：",charIndex:3561}],headersStr:"useEffect概念解释 useEffect是来解决类组件什么问题的？ useEffect函数源码： useEffect基本用法 代码形式： 拆解说明： 'effect'补充说明 '[deps]'补充说明： useEffect使用示例：",content:"# 04 useEffect基础用法\n\n\n# useEffect概念解释\n\n我们第二个要学习的Hook(钩子函数)是useEffect，他的作用是“勾住”函数组件中某些生命周期函数。\n\n都能勾住哪些生命周期函数？\n答：componentDidMount(组件被挂载完成后)、componentDidUpdate(组件重新渲染完成后)、componentWillUnmount(组件即将被卸载前)\n\n为什么是这3个生命周期函数？\n答：因为修改数据我们可以使用前面学到的useState，数据变更会触发组件重新渲染，上面3个就是和组件渲染关联最紧密的生命周期函数。\n\n那其他生命周期函数呢？\n答：该问题的回答，引用React官方中文文档FAQ，如下\n\n> 我们给 Hook 设定的目标是尽早覆盖 class 的所有使用场景。目前暂时还没有对应不常用的 getSnapshotBeforeUpdate，getDerivedStateFromError 和 componentDidCatch 生命周期的 Hook 等价写法，但我们计划尽早把它们加进来。\n\n\n# useEffect是来解决类组件什么问题的？\n\n答：useEffect是来解决类组件 某些执行代码被分散在不同的生命周期函数中 的问题。\n\n举例1：若某类组件中有变量a，默认值为0，当组件第一次被挂载后或组件重新渲染后，将网页标题显示为a的值。\n那么在类组件里，我们需要写的代码是：\n\n//为了更加清楚看到每次渲染，我们在网页标题中 a 的后面再增加一个随机数字\ncomponentDidMount(){\n    document.title = `${this.state.a} - ${Math.floor(Math.random()*100)}`;\n}\ncomponentDidUpdate(){\n    document.title = `${this.state.a} - ${Math.floor(Math.random()*100)}`;\n}\n\n\n从上面这种代码里你会看到，为了保证第一次被挂载、组件重新渲染后都执行修改网页标题的行为，相同的代码我们需要分别在componentDidMount、componentDidUpdate中写2次。\n\n举例2：假设需要给上面那个组件新增一个功能，当组件第一次被挂载后执行一个自动累加器 setInterval，每1秒 a 的值+1。为了防止内存泄露，我们在该组件即将被卸载前清除掉该累加器。\n那么在类组件里，我们需要写的代码是：\n\ntimer = null;//新增一个可内部访问的累加器变量(注：类组件定义属性时前面无法使用 var/let/const)\ncomponentDidMount(){\n    document.title = `${this.state.a} - ${Math.floor(Math.random()*100)}`;\n    this.timer = setInterval(() => {this.setState({a:this.state.a+1})}, 1000);//添加累加器\n}\ncomponentDidUpdate(){\n    document.title = `${this.state.a} - ${Math.floor(Math.random()*100)}`; \n}\ncomponentWillUnmount(){\n    clearInterval(this.timer);//清除累加器\n}\n\n\n从上面代码可以看到，增加累加器和清除累加器这2个相关的执行代码被分别定义在componentDidMount、componentWillUnmount这两个生命周期函数中。\n\n举例3：假设给上面的组件再新增一个变量 b，当 b 的值发生变化后也会引发组件重新渲染，然后呢？有什么隐患吗？\n答：b 的值改变引发组件重新渲染，然后肯定是会触发componentDidUpdate函数，这时会让修改网页标题的代码再次执行一次，尽管此时a的值并没有发生任何变化。\n\n再来回顾一下上面的3个例子：\n1、举例1中，相同的代码可能需要在不同生命周期函数中写2次；\n2、举例2中，相关的代码可能需要在不同生命周期函数中定义；\n3、举例3中，无论是哪个原因引发的组件重新渲染，都会触发生命周期函数的执行，造成一些不必要的代码执行；\n\n以上就是 类组件“某些执行代码被分散在不同的生命周期函数中”引发的问题具体表现，而useEffect就是来解决这些问题的。\n\n接下来开始学习useState。\n\n\n# useEffect函数源码：\n\n回到useEffect的学习中，首先看一下React源码中的ReactHooks.js。\n\n//备注：源码采用TypeScript编写，如果不懂TS代码，阅读起来稍显困难\nexport function useEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用Hook”，并不是“Hook源码分析”。之所以贴出源码只是为了让你以后也可以给面试官吹嘘你读过React源码。^_^\n\n\n# useEffect基本用法\n\nuseEffect(effect,[deps])函数可以传入2个参数，第1个参数为我们定义的执行函数、第2个参数是依赖关系(可选参数)。若一个函数组件中定义了多个useEffect，那么他们实际执行顺序是按照在代码中定义的先后顺序来执行的。\n\n具体说明如下：\n第1个值effect是一个function，用来编写useEffect对应的执行代码。\n还记得本文开头提到的useEffect能勾住哪3个生命周期函数吗？\ncomponentDidMount、componentDidUpdate、componentWillUnmount ，当上述3个生命周期函数执行后，就会触发useEffect函数，进而执行而第1个参数 effect 中的内容。\n\n组件挂载后(componentDidMount)与组件重新渲染后(componentDidUpdate)对应的代码合并为一个函数这个容易理解，可是组件卸载前(componentWillUnmount)也能融入进来？\n答：是的，通过在 effect 中 return 一个函数来实现的。\n\n关于第2个参数 [deps] ，先知道这个是可选参数，是Hook用来向React表明useEffect依赖关系的即可。关于它的用法会在useEffect高级用法中有更多详细讲述。\n\n# 代码形式：\n\nuseEffect(() => {\n    //此处编写 组件挂载之后和组件重新渲染之后执行的代码\n    ...\n\n    return () => {\n        //此处编写 组件即将被卸载前执行的代码\n        ...\n    }\n},[deps])\n\n\n之前说过useEffect第1个参数 effect 是个 function，只是这个 function 稍显复杂。\n\n# 拆解说明：\n\n1、effect 函数主体内容中的代码，就是组件挂载之后和组件重新渲染之后你需要执行的代码；\n2、effect 函数 return 出去的返回函数主体内容中的代码，就是组件即将被卸载前你需要执行的代码；\n3、第2个参数 [deps]，为可选参数，若有值则向React表明该useEffect是依赖哪些变量发生改变而触发的；\n\n# 'effect'补充说明\n\n1、若你不需要在组件卸载前执行任何代码，那么可以忽略不写 effect 中的 return相关代码；\n\n# '[deps]'补充说明：\n\n1、若缺省，则组件挂载、组件重新渲染、组件即将被卸载前，每一次都会触发该useEffect；\n3、若传值，则必须为数组，数组的内容是函数组件中通过useState自定义的变量或者是父组件传值过来的props中的变量，告诉React只有数组内的变量发生变化时才会触发useEffect；\n4、若传值，但是传的是空数组 []，则表示该useEffect里的内容仅会在“挂载完成后和组件即将被卸载前”执行一次；\n\n\n# useEffect使用示例：\n\n还记得本文上面关于 类组件“某些执行代码被分散在不同的生命周期函数中”引发的问题时，所举的3个例子吗？\n我们用Hook来依次分别实现举例1、举例2、举例3，通过3个功能的代码示例，让你明白useEffect的具体用法。\n\n举例1：若某类组件中有变量a，默认值为0，当组件第一次被挂载后或组件重新渲染后，将网页标题显示为a的值。\n补充说明：\n1、为了让 a 的值可以发生变化，我们在组件中添加一个按钮，每次点击 a 的值 +1\n2、为了更加清楚看到每次渲染，我们在网页标题中 a 的后面再增加一个随机数字\n\nimport React, { useState,useEffect} from 'react';\n\nfunction Component() {\n  const [a, setA] = useState(0);//定义变量a，并且默认值为0\n  useEffect(() => {\n      //无论是第一次挂载还是以后每次组件更新，修改网页标题的执行代码只需要在这里写一次即可\n      document.title = `${a} - ${Math.floor(Math.random()*100)}`;\n  })\n  const clickAbtHandler = (eve) =>{\n      setA(a+1);\n  }\n  return <div>\n      {a}\n      <button onClick={clickAbtHandler}>a+1</button>\n    </div>\n}\n\nexport default Component;\n\n\n从上述代码可以看出，“类组件中相同的代码可能需要在不同生命周期函数中写2次”这个问题已通过Hook useEffect已解决。\n\n这里只是实现列 举例1 中的功能，是useEffect最基础的用法。举例2、举例3 中的功能实现我们放到 useEffect 高级用法 中来讲解。\n\n----------------------------------------\n\n至此，关于useEffect基础用法已经讲完。",normalizedContent:"# 04 useeffect基础用法\n\n\n# useeffect概念解释\n\n我们第二个要学习的hook(钩子函数)是useeffect，他的作用是“勾住”函数组件中某些生命周期函数。\n\n都能勾住哪些生命周期函数？\n答：componentdidmount(组件被挂载完成后)、componentdidupdate(组件重新渲染完成后)、componentwillunmount(组件即将被卸载前)\n\n为什么是这3个生命周期函数？\n答：因为修改数据我们可以使用前面学到的usestate，数据变更会触发组件重新渲染，上面3个就是和组件渲染关联最紧密的生命周期函数。\n\n那其他生命周期函数呢？\n答：该问题的回答，引用react官方中文文档faq，如下\n\n> 我们给 hook 设定的目标是尽早覆盖 class 的所有使用场景。目前暂时还没有对应不常用的 getsnapshotbeforeupdate，getderivedstatefromerror 和 componentdidcatch 生命周期的 hook 等价写法，但我们计划尽早把它们加进来。\n\n\n# useeffect是来解决类组件什么问题的？\n\n答：useeffect是来解决类组件 某些执行代码被分散在不同的生命周期函数中 的问题。\n\n举例1：若某类组件中有变量a，默认值为0，当组件第一次被挂载后或组件重新渲染后，将网页标题显示为a的值。\n那么在类组件里，我们需要写的代码是：\n\n//为了更加清楚看到每次渲染，我们在网页标题中 a 的后面再增加一个随机数字\ncomponentdidmount(){\n    document.title = `${this.state.a} - ${math.floor(math.random()*100)}`;\n}\ncomponentdidupdate(){\n    document.title = `${this.state.a} - ${math.floor(math.random()*100)}`;\n}\n\n\n从上面这种代码里你会看到，为了保证第一次被挂载、组件重新渲染后都执行修改网页标题的行为，相同的代码我们需要分别在componentdidmount、componentdidupdate中写2次。\n\n举例2：假设需要给上面那个组件新增一个功能，当组件第一次被挂载后执行一个自动累加器 setinterval，每1秒 a 的值+1。为了防止内存泄露，我们在该组件即将被卸载前清除掉该累加器。\n那么在类组件里，我们需要写的代码是：\n\ntimer = null;//新增一个可内部访问的累加器变量(注：类组件定义属性时前面无法使用 var/let/const)\ncomponentdidmount(){\n    document.title = `${this.state.a} - ${math.floor(math.random()*100)}`;\n    this.timer = setinterval(() => {this.setstate({a:this.state.a+1})}, 1000);//添加累加器\n}\ncomponentdidupdate(){\n    document.title = `${this.state.a} - ${math.floor(math.random()*100)}`; \n}\ncomponentwillunmount(){\n    clearinterval(this.timer);//清除累加器\n}\n\n\n从上面代码可以看到，增加累加器和清除累加器这2个相关的执行代码被分别定义在componentdidmount、componentwillunmount这两个生命周期函数中。\n\n举例3：假设给上面的组件再新增一个变量 b，当 b 的值发生变化后也会引发组件重新渲染，然后呢？有什么隐患吗？\n答：b 的值改变引发组件重新渲染，然后肯定是会触发componentdidupdate函数，这时会让修改网页标题的代码再次执行一次，尽管此时a的值并没有发生任何变化。\n\n再来回顾一下上面的3个例子：\n1、举例1中，相同的代码可能需要在不同生命周期函数中写2次；\n2、举例2中，相关的代码可能需要在不同生命周期函数中定义；\n3、举例3中，无论是哪个原因引发的组件重新渲染，都会触发生命周期函数的执行，造成一些不必要的代码执行；\n\n以上就是 类组件“某些执行代码被分散在不同的生命周期函数中”引发的问题具体表现，而useeffect就是来解决这些问题的。\n\n接下来开始学习usestate。\n\n\n# useeffect函数源码：\n\n回到useeffect的学习中，首先看一下react源码中的reacthooks.js。\n\n//备注：源码采用typescript编写，如果不懂ts代码，阅读起来稍显困难\nexport function useeffect(\n  create: () => (() => void) | void,\n  deps: array<mixed> | void | null,\n): void {\n  const dispatcher = resolvedispatcher();\n  return dispatcher.useeffect(create, deps);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用hook”，并不是“hook源码分析”。之所以贴出源码只是为了让你以后也可以给面试官吹嘘你读过react源码。^_^\n\n\n# useeffect基本用法\n\nuseeffect(effect,[deps])函数可以传入2个参数，第1个参数为我们定义的执行函数、第2个参数是依赖关系(可选参数)。若一个函数组件中定义了多个useeffect，那么他们实际执行顺序是按照在代码中定义的先后顺序来执行的。\n\n具体说明如下：\n第1个值effect是一个function，用来编写useeffect对应的执行代码。\n还记得本文开头提到的useeffect能勾住哪3个生命周期函数吗？\ncomponentdidmount、componentdidupdate、componentwillunmount ，当上述3个生命周期函数执行后，就会触发useeffect函数，进而执行而第1个参数 effect 中的内容。\n\n组件挂载后(componentdidmount)与组件重新渲染后(componentdidupdate)对应的代码合并为一个函数这个容易理解，可是组件卸载前(componentwillunmount)也能融入进来？\n答：是的，通过在 effect 中 return 一个函数来实现的。\n\n关于第2个参数 [deps] ，先知道这个是可选参数，是hook用来向react表明useeffect依赖关系的即可。关于它的用法会在useeffect高级用法中有更多详细讲述。\n\n# 代码形式：\n\nuseeffect(() => {\n    //此处编写 组件挂载之后和组件重新渲染之后执行的代码\n    ...\n\n    return () => {\n        //此处编写 组件即将被卸载前执行的代码\n        ...\n    }\n},[deps])\n\n\n之前说过useeffect第1个参数 effect 是个 function，只是这个 function 稍显复杂。\n\n# 拆解说明：\n\n1、effect 函数主体内容中的代码，就是组件挂载之后和组件重新渲染之后你需要执行的代码；\n2、effect 函数 return 出去的返回函数主体内容中的代码，就是组件即将被卸载前你需要执行的代码；\n3、第2个参数 [deps]，为可选参数，若有值则向react表明该useeffect是依赖哪些变量发生改变而触发的；\n\n# 'effect'补充说明\n\n1、若你不需要在组件卸载前执行任何代码，那么可以忽略不写 effect 中的 return相关代码；\n\n# '[deps]'补充说明：\n\n1、若缺省，则组件挂载、组件重新渲染、组件即将被卸载前，每一次都会触发该useeffect；\n3、若传值，则必须为数组，数组的内容是函数组件中通过usestate自定义的变量或者是父组件传值过来的props中的变量，告诉react只有数组内的变量发生变化时才会触发useeffect；\n4、若传值，但是传的是空数组 []，则表示该useeffect里的内容仅会在“挂载完成后和组件即将被卸载前”执行一次；\n\n\n# useeffect使用示例：\n\n还记得本文上面关于 类组件“某些执行代码被分散在不同的生命周期函数中”引发的问题时，所举的3个例子吗？\n我们用hook来依次分别实现举例1、举例2、举例3，通过3个功能的代码示例，让你明白useeffect的具体用法。\n\n举例1：若某类组件中有变量a，默认值为0，当组件第一次被挂载后或组件重新渲染后，将网页标题显示为a的值。\n补充说明：\n1、为了让 a 的值可以发生变化，我们在组件中添加一个按钮，每次点击 a 的值 +1\n2、为了更加清楚看到每次渲染，我们在网页标题中 a 的后面再增加一个随机数字\n\nimport react, { usestate,useeffect} from 'react';\n\nfunction component() {\n  const [a, seta] = usestate(0);//定义变量a，并且默认值为0\n  useeffect(() => {\n      //无论是第一次挂载还是以后每次组件更新，修改网页标题的执行代码只需要在这里写一次即可\n      document.title = `${a} - ${math.floor(math.random()*100)}`;\n  })\n  const clickabthandler = (eve) =>{\n      seta(a+1);\n  }\n  return <div>\n      {a}\n      <button onclick={clickabthandler}>a+1</button>\n    </div>\n}\n\nexport default component;\n\n\n从上述代码可以看出，“类组件中相同的代码可能需要在不同生命周期函数中写2次”这个问题已通过hook useeffect已解决。\n\n这里只是实现列 举例1 中的功能，是useeffect最基础的用法。举例2、举例3 中的功能实现我们放到 useeffect 高级用法 中来讲解。\n\n----------------------------------------\n\n至此，关于useeffect基础用法已经讲完。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"05 useEffect高级用法",frontmatter:{title:"05 useEffect高级用法",date:"2023-09-06T17:47:16.000Z",permalink:"/pages/b9c039/"},regularPath:"/03.react/05.useEffect%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95.html",relativePath:"03.react/05.useEffect高级用法.md",key:"v-56ff8d3c",path:"/pages/b9c039/",headers:[{level:2,title:"让useEffect只在挂载后和卸载前执行一次",slug:"让useeffect只在挂载后和卸载前执行一次",normalizedTitle:"让useeffect只在挂载后和卸载前执行一次",charIndex:74},{level:5,title:"为什么会有这个问题？",slug:"为什么会有这个问题",normalizedTitle:"为什么会有这个问题？",charIndex:1812},{level:2,title:"性能优化",slug:"性能优化",normalizedTitle:"性能优化",charIndex:2469}],headersStr:"让useEffect只在挂载后和卸载前执行一次 为什么会有这个问题？ 性能优化",content:"# 05 useEffect高级用法\n\n所谓高级用法，只不过是一些深层知识点和实用技巧，你甚至可以把本章当做对前面知识点的一个巩固和学习。\n\n\n# 让useEffect只在挂载后和卸载前执行一次\n\n让我们实现 “04 useEffect基础用法” 中 举例2 提到的功能。\n\n组件需求：\n1、若某类组件中有变量a，默认值为0，当组件第一次被挂载后或组件重新渲染后，将网页标题显示为a的值。\n2、当组件第一次被挂载后执行一个自动累加器 setInterval，每1秒 a 的值+1。为了防止内存泄露，我们在该组件即将被卸载前清除掉该累加器。\n\n需求分析：\n关于自动累加器的操作，只关联 “组件挂载后和组件卸载前” 这2个生命周期函数中，那useEffect还包含了每次组件重新渲染后，这该怎么办？\n\n答：useEffect函数的第2个参数表示该依赖关系，将useEffect的第2个参数，设置为空数组 []，即表示告诉React，这个useEffect不依赖任何变量的更新所引发的组件重新渲染，以后此组件再更新也不需要调用此useEffect。\n\n这样就可以实现只在第一次挂载后和卸载前调用此useEffect的目的。\n\nimport React, { useState,useEffect} from 'react';\n\nfunction Component() {\n  const [a, setA] = useState(0);//定义变量a，并且默认值为0\n\n  //定义第1个useEffect，专门用来处理自动累加器\n  useEffect(() => {\n    let timer = setInterval(() => {setA(a+1)},1000);// <-- 请注意这行代码，暗藏玄机\n    return () => {\n        clearInterval(timer);\n    }\n  }, []);//此处第2个参数为[]，告知React以后该组件任何更新引发的重新渲染都与此useEffect无关\n\n  //定义第2个useEffect，专门用来处理网页标题更新\n  useEffect(() => {\n    document.title = `${a} - ${Math.floor(Math.random()*100)}`;\n  },[a])\n  return <div> {a} </div>\n}\n\nexport default Component;\n\n\n以上代码实际运行正确吗？\n答：不正确！\n\n？\n小朋友，脸上是否有很多问号？？？\n\n实际运行会发现，当组件挂载后，确实会执行一次 setA(a+1)，a 的值修改为了 1，然后... a 的值一直为 1，并没有继续累加。\n\n上述代码会收到react的一个错误警告提示：Either include it or remove the dependency array. You can also do a functional update 'setA(a => ...)' if you only need 'a' in the 'setA' call.\n该错误警告意思是：如果你确认你传入的第2个参数是空数组，那么你可能会用到 setA(a => ...) 这种方式来更新a的值。\n\n问题出在哪里？\n\n让我们再看看那行有玄机的代码：\n\nlet timer = setInterval(() => {setA(a+1)},1000);  \n\n\n再看看 react 给我们的错误警告提示：You can also do a functional update 'setA(a => ...)' if you only need 'a' in the 'setA' call. 你可能会用到 setA(a => ...) 这种方式来更新a的值。\n\nsetA(a => ...) 这是在 “03 useState高级用法”中，解决数据异步 时讲的更新方式。\n\n那我们就按照提示，将那行代码修改为：\n\nlet timer = setInterval(() => {setA(a => a+1)},1000);  \n\n\n再次执行，错误提示警告没有了，组件也完全按照我们的预期来执行了。react自带的语法检查真的好智能。\n\n# 为什么会有这个问题？\n\n关于刚才setInterval中累加 a 的值遇到的问题，React官方文档中也有类似示例，只不过他们用的变量是count，而我们这里用的变量是 a。\n\n我们看看从React官方文档中引用的话：\n\n> 有时候，你的 effect 可能会使用一些频繁变化的值。你可能会忽略依赖列表中 state，但这通常会引起 Bug，传入空的依赖数组 []，意味着该 hook 只在组件挂载时运行一次，并非重新渲染时。但如此会有问题，在 setInterval 的回调中，count 的值不会发生变化。因为当 effect 执行时，我们会创建一个闭包，并将 count 的值被保存在该闭包当中，且初值为 0。每隔一秒，回调就会执行 setCount(0 + 1)，因此，count 永远不会超过 1。\n\n再次重复一遍：如果useEffect函数第2个参数为空数组，那么react会将该useEffect的第1个参数 effect 建立一个闭包，该闭包里的变量 a 被永远设定为当初的值，即 0。尽管setInterval正常工作，每次都“正常执行了”，可是 setA(a+1)中 a 的值一直没变化，一直都是当初的0，所以造成 0 + 1 一直都等于 1 的结果。\n\n而如果修改成 setA(a => a+1) 的形式，那么就解决了 a 数据异步的问题，每次都是读取最新当前 a 的值。\n\n这个点是使用 useEffect 很容易掉进去的一个坑，切记切记。\n\n或者以后养成都用异步更新数据的习惯。\n\n\n# 性能优化\n\n通过上面的例子，我们其实已经实现了 前文中 举例2 和举例3 的效果。\n\n咦~ 刚才讲的是举例2，没有将举例3啊... 因为举例3中提到的类组件中有多个变量数据，在函数组件中这个问题本身是靠useState来解决的，跟useEffect无关。\n\n接下来讲一下useEffect函数第2个参数提高性能的正确用法。\n\n举例：若一个组件中有一个自定义变量obj，obj有两个属性a、b，当a发生变化时，网页标题也跟着a发生变化。\n补充说明：\n1、我们为了让a、b都可以发生变化，将在组件中创建2个按钮，点击之后分别可以修改a、b的值；\n2、为了更加清楚看到每次渲染，我们在网页标题中 a 的后面再增加一个随机数字；\n\n我们首先看以下代码：\n\nimport React, { useState,useEffect} from 'react';\nfunction Component() {\n  const [obj,setObj] = useState({a:0,b:0});\n  useEffect(() => {\n    document.title = `${obj.a} - ${Math.floor(Math.random()*50)}`;\n  }); //注意此时我们并未设置useEffect函数的第2个参数\n\n  //如果下面代码看不懂，你需要重新去温习useState高级用法中的“数据类型为Objcet，修改方法”\n  return <div>\n    {JSON.stringify(obj)}\n    <button onClick={() => {setObj({...obj,a:obj.a+1})}}>a+1</button> \n    <button onClick={() => {setObj({...obj,b:obj.b+1})}}>b+1</button>\n  </div>\n}\nexport default Component;\n\n\n由于我们在网页标题中添加了随机数，因此实际运行你会发现即使修改b的值，也会引发网页标题重新“变更一次”。\n\n理由显而易见，修改b的值也会触发组件重新渲染，进而触发useEffect中的代码。\n\n正确的做法应该是我们给useEffect添加上第2个参数：[obj.a]，明确告诉React，只有当obj.a变更引发的重新渲染才执行本条useEffect。\n\nuseEffect(() => {\n   document.title = `${obj.a} - ${Math.floor(Math.random()*50)}`;\n },[obj.a]); //第2个参数为数组，该数组中可以包含多个变量\n\n\n添加过[obj.a]之后，再次运行，无论obj.b或者其他数据变量引发的组件重新渲染，都不会执行该useEffect。\n\n因此达到提高性能的目的。\n\n----------------------------------------\n\n至此，关于useEffect高级用法已经讲完，相信useState和useEffect的组合使用，已经能够让你写出一些简单的React Hook 组件。\n\n接下来学习第3个Hook函数useContext。",normalizedContent:"# 05 useeffect高级用法\n\n所谓高级用法，只不过是一些深层知识点和实用技巧，你甚至可以把本章当做对前面知识点的一个巩固和学习。\n\n\n# 让useeffect只在挂载后和卸载前执行一次\n\n让我们实现 “04 useeffect基础用法” 中 举例2 提到的功能。\n\n组件需求：\n1、若某类组件中有变量a，默认值为0，当组件第一次被挂载后或组件重新渲染后，将网页标题显示为a的值。\n2、当组件第一次被挂载后执行一个自动累加器 setinterval，每1秒 a 的值+1。为了防止内存泄露，我们在该组件即将被卸载前清除掉该累加器。\n\n需求分析：\n关于自动累加器的操作，只关联 “组件挂载后和组件卸载前” 这2个生命周期函数中，那useeffect还包含了每次组件重新渲染后，这该怎么办？\n\n答：useeffect函数的第2个参数表示该依赖关系，将useeffect的第2个参数，设置为空数组 []，即表示告诉react，这个useeffect不依赖任何变量的更新所引发的组件重新渲染，以后此组件再更新也不需要调用此useeffect。\n\n这样就可以实现只在第一次挂载后和卸载前调用此useeffect的目的。\n\nimport react, { usestate,useeffect} from 'react';\n\nfunction component() {\n  const [a, seta] = usestate(0);//定义变量a，并且默认值为0\n\n  //定义第1个useeffect，专门用来处理自动累加器\n  useeffect(() => {\n    let timer = setinterval(() => {seta(a+1)},1000);// <-- 请注意这行代码，暗藏玄机\n    return () => {\n        clearinterval(timer);\n    }\n  }, []);//此处第2个参数为[]，告知react以后该组件任何更新引发的重新渲染都与此useeffect无关\n\n  //定义第2个useeffect，专门用来处理网页标题更新\n  useeffect(() => {\n    document.title = `${a} - ${math.floor(math.random()*100)}`;\n  },[a])\n  return <div> {a} </div>\n}\n\nexport default component;\n\n\n以上代码实际运行正确吗？\n答：不正确！\n\n？\n小朋友，脸上是否有很多问号？？？\n\n实际运行会发现，当组件挂载后，确实会执行一次 seta(a+1)，a 的值修改为了 1，然后... a 的值一直为 1，并没有继续累加。\n\n上述代码会收到react的一个错误警告提示：either include it or remove the dependency array. you can also do a functional update 'seta(a => ...)' if you only need 'a' in the 'seta' call.\n该错误警告意思是：如果你确认你传入的第2个参数是空数组，那么你可能会用到 seta(a => ...) 这种方式来更新a的值。\n\n问题出在哪里？\n\n让我们再看看那行有玄机的代码：\n\nlet timer = setinterval(() => {seta(a+1)},1000);  \n\n\n再看看 react 给我们的错误警告提示：you can also do a functional update 'seta(a => ...)' if you only need 'a' in the 'seta' call. 你可能会用到 seta(a => ...) 这种方式来更新a的值。\n\nseta(a => ...) 这是在 “03 usestate高级用法”中，解决数据异步 时讲的更新方式。\n\n那我们就按照提示，将那行代码修改为：\n\nlet timer = setinterval(() => {seta(a => a+1)},1000);  \n\n\n再次执行，错误提示警告没有了，组件也完全按照我们的预期来执行了。react自带的语法检查真的好智能。\n\n# 为什么会有这个问题？\n\n关于刚才setinterval中累加 a 的值遇到的问题，react官方文档中也有类似示例，只不过他们用的变量是count，而我们这里用的变量是 a。\n\n我们看看从react官方文档中引用的话：\n\n> 有时候，你的 effect 可能会使用一些频繁变化的值。你可能会忽略依赖列表中 state，但这通常会引起 bug，传入空的依赖数组 []，意味着该 hook 只在组件挂载时运行一次，并非重新渲染时。但如此会有问题，在 setinterval 的回调中，count 的值不会发生变化。因为当 effect 执行时，我们会创建一个闭包，并将 count 的值被保存在该闭包当中，且初值为 0。每隔一秒，回调就会执行 setcount(0 + 1)，因此，count 永远不会超过 1。\n\n再次重复一遍：如果useeffect函数第2个参数为空数组，那么react会将该useeffect的第1个参数 effect 建立一个闭包，该闭包里的变量 a 被永远设定为当初的值，即 0。尽管setinterval正常工作，每次都“正常执行了”，可是 seta(a+1)中 a 的值一直没变化，一直都是当初的0，所以造成 0 + 1 一直都等于 1 的结果。\n\n而如果修改成 seta(a => a+1) 的形式，那么就解决了 a 数据异步的问题，每次都是读取最新当前 a 的值。\n\n这个点是使用 useeffect 很容易掉进去的一个坑，切记切记。\n\n或者以后养成都用异步更新数据的习惯。\n\n\n# 性能优化\n\n通过上面的例子，我们其实已经实现了 前文中 举例2 和举例3 的效果。\n\n咦~ 刚才讲的是举例2，没有将举例3啊... 因为举例3中提到的类组件中有多个变量数据，在函数组件中这个问题本身是靠usestate来解决的，跟useeffect无关。\n\n接下来讲一下useeffect函数第2个参数提高性能的正确用法。\n\n举例：若一个组件中有一个自定义变量obj，obj有两个属性a、b，当a发生变化时，网页标题也跟着a发生变化。\n补充说明：\n1、我们为了让a、b都可以发生变化，将在组件中创建2个按钮，点击之后分别可以修改a、b的值；\n2、为了更加清楚看到每次渲染，我们在网页标题中 a 的后面再增加一个随机数字；\n\n我们首先看以下代码：\n\nimport react, { usestate,useeffect} from 'react';\nfunction component() {\n  const [obj,setobj] = usestate({a:0,b:0});\n  useeffect(() => {\n    document.title = `${obj.a} - ${math.floor(math.random()*50)}`;\n  }); //注意此时我们并未设置useeffect函数的第2个参数\n\n  //如果下面代码看不懂，你需要重新去温习usestate高级用法中的“数据类型为objcet，修改方法”\n  return <div>\n    {json.stringify(obj)}\n    <button onclick={() => {setobj({...obj,a:obj.a+1})}}>a+1</button> \n    <button onclick={() => {setobj({...obj,b:obj.b+1})}}>b+1</button>\n  </div>\n}\nexport default component;\n\n\n由于我们在网页标题中添加了随机数，因此实际运行你会发现即使修改b的值，也会引发网页标题重新“变更一次”。\n\n理由显而易见，修改b的值也会触发组件重新渲染，进而触发useeffect中的代码。\n\n正确的做法应该是我们给useeffect添加上第2个参数：[obj.a]，明确告诉react，只有当obj.a变更引发的重新渲染才执行本条useeffect。\n\nuseeffect(() => {\n   document.title = `${obj.a} - ${math.floor(math.random()*50)}`;\n },[obj.a]); //第2个参数为数组，该数组中可以包含多个变量\n\n\n添加过[obj.a]之后，再次运行，无论obj.b或者其他数据变量引发的组件重新渲染，都不会执行该useeffect。\n\n因此达到提高性能的目的。\n\n----------------------------------------\n\n至此，关于useeffect高级用法已经讲完，相信usestate和useeffect的组合使用，已经能够让你写出一些简单的react hook 组件。\n\n接下来学习第3个hook函数usecontext。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"06 useContext基础用法",frontmatter:{title:"06 useContext基础用法",date:"2023-09-07T11:40:49.000Z",permalink:"/pages/fd14d7/"},regularPath:"/03.react/06.useContext%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95.html",relativePath:"03.react/06.useContext基础用法.md",key:"v-71a2faae",path:"/pages/fd14d7/",headers:[{level:2,title:"useContext概念解释",slug:"usecontext概念解释",normalizedTitle:"usecontext概念解释",charIndex:24},{level:2,title:"useContext是来解决什么问题的？",slug:"usecontext是来解决什么问题的",normalizedTitle:"usecontext是来解决什么问题的？",charIndex:1038},{level:2,title:"useContext函数源码：",slug:"usecontext函数源码",normalizedTitle:"usecontext函数源码：",charIndex:1289},{level:2,title:"useContext基本用法",slug:"usecontext基本用法",normalizedTitle:"usecontext基本用法",charIndex:3167},{level:5,title:"代码形式：",slug:"代码形式",normalizedTitle:"代码形式：",charIndex:3261},{level:5,title:"拆解说明：",slug:"拆解说明",normalizedTitle:"拆解说明：",charIndex:3513},{level:4,title:"'引入GlobalContext'补充说明",slug:"引入globalcontext-补充说明",normalizedTitle:"'引入globalcontext'补充说明",charIndex:3739},{level:4,title:"'global'补充说明",slug:"global-补充说明",normalizedTitle:"'global'补充说明",charIndex:3864},{level:2,title:"useContext使用示例：",slug:"usecontext使用示例",normalizedTitle:"usecontext使用示例：",charIndex:4019}],headersStr:"useContext概念解释 useContext是来解决什么问题的？ useContext函数源码： useContext基本用法 代码形式： 拆解说明： '引入GlobalContext'补充说明 'global'补充说明 useContext使用示例：",content:"# 06 useContext基础用法\n\n\n# useContext概念解释\n\n我们第三个要学习的Hook(钩子函数)是useContext，他的作用是“勾住”获取由React.createContext()创建、<XxxContext.Provider>添加设置的共享数据value值。useContext可以替代<XxxContext.Consumer>标签，简化获取共享数据的代码。\n\n我们知道，原本不同级别的组件之间传递属性值，必须逐层传递，即使中间层的组件不需要这些数据。\n注意：这里说的组件指React所有组件，包含类组件和函数组件。\n\n数据层层传递增加了组件的复杂性，降低了可复用性。为了解决这个问题，我们可以使用以下方式：\n1、在组件顶层或单独的模块中，由React.createContext()创建一个共享数据对象；\n2、在父组件中添加共享数据对象的引用，通过且只能通过<XxxContext.provider value={xx:'xxx'}></XxxContext.provider>的形式将数据传递给子组件。请注意传值必须使用value={obj}这种形式，若值本身为字符串则可以改为 value='xxx'；\n3、若下一层的子组件用不到共享数据对象中的数据，则可以不做任何属性标签传递；\n4、若某一层的子组件需要用到共享数据对象的数据，则可通过<XxxContext.Consumer></XxxContext.Consumer>获取到数据；\n5、在类组件中除了<XxxContext.Consumer>标签，还有另外一种获取共享数据方式：static xxx = XxxContext; 但是这种形式在函数组件中无法使用。\n\n简而言之<XxxContext.Provider>用来添加共享数据、<XxxContext.Consumer>用来获取共享数据。\n备注：provider单词本意为供应者、consumer单词本意为消费者，刚好对应他们相对于共享数据的关系。\n\n上面简单描述了React.createContext()的用法，由于本系列文章主要讲Hook的使用方法，React本身的知识点并不是重点讲解对象。若你对React.createContext()、<XxxContext.Provider>、<XxxContext.Consumer>的用法还不太明白，请通过其他途径自行学习。\n\n让我们回到useContext学习中。\n\n\n# useContext是来解决什么问题的？\n\n答：useContext是<XxxContext.Consumer>的替代品，可以大量简化获取共享数据值的代码。\n\n补充说明：\n1、函数组件和类组件，对于<XxxContext.Provider>、<XxxContext.Consumer>使用方式没有任何差别。\n2、你可以在函数组件中不使用useContext，继续使用<XxxContext.Consumer>，这都没问题。只不过使用useContext后，可以让获取共享数据相关代码简单一些。\n\n\n# useContext函数源码：\n\n回到useContext的学习中，首先看一下React源码中的ReactHooks.js。\n\n    //备注：源码采用TypeScript编写，如果不懂TS代码，阅读起来稍显困难\n    export function useContext<T>(\n      Context: ReactContext<T>,\n      unstable_observedBits: number | boolean | void,): T {\n      const dispatcher = resolveDispatcher();\n      if (__DEV__) {\n        if (unstable_observedBits !== undefined) {\n          console.error(\n            'useContext() second argument is reserved for future ' +\n            'use in React. Passing it is not supported. ' +\n            'You passed: %s.%s',\n            unstable_observedBits,\n            typeof unstable_observedBits === 'number' && Array.isArray(arguments[2])\n            ? '\\n\\nDid you call array.map(useContext)? ' +\n              'Calling Hooks inside a loop is not supported. ' +\n              'Learn more at https://fb.me/rules-of-hooks'\n            : '',\n          );\n      }\n\n      // TODO: add a more generic warning for invalid values.\n      if ((Context: any)._context !== undefined) {\n        const realContext = (Context: any)._context;\n        // Don't deduplicate because this legitimately causes bugs\n        // and nobody should be using this in existing code.\n        if (realContext.Consumer === Context) {\n          console.error(\n            'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\n              'removed in a future major release. Did you mean to call useContext(Context) instead?',\n          );\n        } else if (realContext.Provider === Context) {\n          console.error(\n            'Calling useContext(Context.Provider) is not supported. ' +\n              'Did you mean to call useContext(Context) instead?',\n          );\n        }\n      }\n    }\n      return dispatcher.useContext(Context, unstable_observedBits);\n    }\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用Hook”，并不是“Hook源码分析”。之所以贴出源码只是想让你看懂以后告诉我，反正我是没看懂。^_^\n\n\n# useContext基本用法\n\nuseContext(context)函数可以传入1个参数，该参数为共享数据对象的实例，useContext函数会返回该共享对象实例的value值。\n\n# 代码形式：\n\nimport GlobalContext from './global-context'; //引入共享数据对象\n\nfunction Component(){\n  const global = useContext(GlobalContext); //在函数组件中声明一个变量来代表该共享数据对象的value值\n\n  //若想获取共享数据对象中的属性xxx的值，直接使用global.xxx即可\n  return <div>\n    {global.xxx}\n  </div>\n}\n\n\n# 拆解说明：\n\n1、子组件(函数组件)需要先引入共享数据对象GlobalContext；\n2、内部定义一个常量global，用来接收useContext函数返回GlobalContext的value值；\n3、函数组件在return时，可以不使用<GlobalCount.Customer>标签，而是直接使用global.xx来获取共享数据；\n4、请注意，这里执行的依然是单向数据流，只可以获取global.xx，不可以直接更改global.xx;\n\n# '引入GlobalContext'补充说明\n\n示例中是通过import方式引入的，如果直接把GlobalContext定义在该组件内部，那不是就不用import了吗？\n答：是的，你可以这么做。只不过定义在外部单独的模块中，各个组件都可以引用。\n\n# 'global'补充说明\n\n为了代码语义化，上述代码中使用到了global这个单词，但是请注意，该单词和原生JS中global(全局变量)无任何关联。实际项目中你可以使用任意具有语义的相关单词。比如定义用户共享数据你可以定义为UserContext、新闻共享数据你可以定义为NewsContext等。\n\n\n# useContext使用示例：\n\n举例：若某React组件一共由3层组件嵌套而成，从外到里分别是AppComponent、MiddleComponent、ChildComponent。AppComponent需要传递数据给ChildComponent。\n\n若使用useContext来实现，代码示例如下：\n\n//global-context.js\nimport React from 'react';\nconst GlobalContext = React.createContext(); //请注意，这里还可以给React.createContext()传入一个默认值\n//例如：const GlobalContext = React.createContext({name:'Yang',age:18})\n//假如<GlobalContext.Provider>中没有设置value的值，就会使用上面定义的默认值\nexport default GlobalContext;\n\n...\n\n//component.js\nimport React, { useContext } from 'react';\nimport GlobalContext from './global-context';\n\nfunction AppComponent() {\n  //标签<GlobalContext.Provider>中向下传递数据，必须使用value这个属性，且数据必须是键值对类型的object\n  //如果不添加value，那么子组件获取到的共享数据value值是React.createContext(defaultValues)中的默认值defaultValues\n  return <div>\n    <GlobalContext.Provider value={{name:'puxiao',age:34}}>\n        <MiddleComponent />\n    </GlobalContext.Provider>\n  </div>\n}\n\nfunction MiddleComponent(){\n  //MiddleComponent 不需要做任何 “属性数据传递接力”，因此降低该组件数据传递复杂性，提高组件可复用性\n  return <div>\n    <ChildComponent />\n  </div>\n}\n\nfunction ChildComponent(){\n  const global = useContext(GlobalContext); //获取共享数据对象的value值\n  //忘掉<GlobalContext.Consumer>标签，直接用global获取需要的值\n  return <div>\n    {global.name} - {global.age}\n  </div>\n}\n\nexport default AppComponent;\n\n\n假如ChildComponent不使用useContext，而是使用<GlobalContext.Consumer>标签，那么代码相应修改为：\n\nfunction ChildComponent(){\n  return <GlobalContext.Consumer>\n    {\n        global => {\n            return <div>{global.name} - {global.age}</div>\n        }\n    }\n  </GlobalContext.Consumer>\n}\n\n\n使用useContext可以大大降低获取数据代码复杂性。\n\n请注意：useContext只是简化了获取共享数据value的代码，但是对于<XxxContext.Provider>的使用没有做任何改变，如果组件需要设置2个XxxContext，那么依然需要进行<XxxContext.Provider>嵌套。\n\n上述代码中AppComponent只向下传递出去1个共享数据对象value值，那如果需要同时传递多个共享数据对象的value值，那该如何实现？\n关于这个问题，会在 useContext高级用法中讲解。\n\n----------------------------------------\n\n至此，关于useContext基础用法已经讲完。",normalizedContent:"# 06 usecontext基础用法\n\n\n# usecontext概念解释\n\n我们第三个要学习的hook(钩子函数)是usecontext，他的作用是“勾住”获取由react.createcontext()创建、<xxxcontext.provider>添加设置的共享数据value值。usecontext可以替代<xxxcontext.consumer>标签，简化获取共享数据的代码。\n\n我们知道，原本不同级别的组件之间传递属性值，必须逐层传递，即使中间层的组件不需要这些数据。\n注意：这里说的组件指react所有组件，包含类组件和函数组件。\n\n数据层层传递增加了组件的复杂性，降低了可复用性。为了解决这个问题，我们可以使用以下方式：\n1、在组件顶层或单独的模块中，由react.createcontext()创建一个共享数据对象；\n2、在父组件中添加共享数据对象的引用，通过且只能通过<xxxcontext.provider value={xx:'xxx'}></xxxcontext.provider>的形式将数据传递给子组件。请注意传值必须使用value={obj}这种形式，若值本身为字符串则可以改为 value='xxx'；\n3、若下一层的子组件用不到共享数据对象中的数据，则可以不做任何属性标签传递；\n4、若某一层的子组件需要用到共享数据对象的数据，则可通过<xxxcontext.consumer></xxxcontext.consumer>获取到数据；\n5、在类组件中除了<xxxcontext.consumer>标签，还有另外一种获取共享数据方式：static xxx = xxxcontext; 但是这种形式在函数组件中无法使用。\n\n简而言之<xxxcontext.provider>用来添加共享数据、<xxxcontext.consumer>用来获取共享数据。\n备注：provider单词本意为供应者、consumer单词本意为消费者，刚好对应他们相对于共享数据的关系。\n\n上面简单描述了react.createcontext()的用法，由于本系列文章主要讲hook的使用方法，react本身的知识点并不是重点讲解对象。若你对react.createcontext()、<xxxcontext.provider>、<xxxcontext.consumer>的用法还不太明白，请通过其他途径自行学习。\n\n让我们回到usecontext学习中。\n\n\n# usecontext是来解决什么问题的？\n\n答：usecontext是<xxxcontext.consumer>的替代品，可以大量简化获取共享数据值的代码。\n\n补充说明：\n1、函数组件和类组件，对于<xxxcontext.provider>、<xxxcontext.consumer>使用方式没有任何差别。\n2、你可以在函数组件中不使用usecontext，继续使用<xxxcontext.consumer>，这都没问题。只不过使用usecontext后，可以让获取共享数据相关代码简单一些。\n\n\n# usecontext函数源码：\n\n回到usecontext的学习中，首先看一下react源码中的reacthooks.js。\n\n    //备注：源码采用typescript编写，如果不懂ts代码，阅读起来稍显困难\n    export function usecontext<t>(\n      context: reactcontext<t>,\n      unstable_observedbits: number | boolean | void,): t {\n      const dispatcher = resolvedispatcher();\n      if (__dev__) {\n        if (unstable_observedbits !== undefined) {\n          console.error(\n            'usecontext() second argument is reserved for future ' +\n            'use in react. passing it is not supported. ' +\n            'you passed: %s.%s',\n            unstable_observedbits,\n            typeof unstable_observedbits === 'number' && array.isarray(arguments[2])\n            ? '\\n\\ndid you call array.map(usecontext)? ' +\n              'calling hooks inside a loop is not supported. ' +\n              'learn more at https://fb.me/rules-of-hooks'\n            : '',\n          );\n      }\n\n      // todo: add a more generic warning for invalid values.\n      if ((context: any)._context !== undefined) {\n        const realcontext = (context: any)._context;\n        // don't deduplicate because this legitimately causes bugs\n        // and nobody should be using this in existing code.\n        if (realcontext.consumer === context) {\n          console.error(\n            'calling usecontext(context.consumer) is not supported, may cause bugs, and will be ' +\n              'removed in a future major release. did you mean to call usecontext(context) instead?',\n          );\n        } else if (realcontext.provider === context) {\n          console.error(\n            'calling usecontext(context.provider) is not supported. ' +\n              'did you mean to call usecontext(context) instead?',\n          );\n        }\n      }\n    }\n      return dispatcher.usecontext(context, unstable_observedbits);\n    }\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用hook”，并不是“hook源码分析”。之所以贴出源码只是想让你看懂以后告诉我，反正我是没看懂。^_^\n\n\n# usecontext基本用法\n\nusecontext(context)函数可以传入1个参数，该参数为共享数据对象的实例，usecontext函数会返回该共享对象实例的value值。\n\n# 代码形式：\n\nimport globalcontext from './global-context'; //引入共享数据对象\n\nfunction component(){\n  const global = usecontext(globalcontext); //在函数组件中声明一个变量来代表该共享数据对象的value值\n\n  //若想获取共享数据对象中的属性xxx的值，直接使用global.xxx即可\n  return <div>\n    {global.xxx}\n  </div>\n}\n\n\n# 拆解说明：\n\n1、子组件(函数组件)需要先引入共享数据对象globalcontext；\n2、内部定义一个常量global，用来接收usecontext函数返回globalcontext的value值；\n3、函数组件在return时，可以不使用<globalcount.customer>标签，而是直接使用global.xx来获取共享数据；\n4、请注意，这里执行的依然是单向数据流，只可以获取global.xx，不可以直接更改global.xx;\n\n# '引入globalcontext'补充说明\n\n示例中是通过import方式引入的，如果直接把globalcontext定义在该组件内部，那不是就不用import了吗？\n答：是的，你可以这么做。只不过定义在外部单独的模块中，各个组件都可以引用。\n\n# 'global'补充说明\n\n为了代码语义化，上述代码中使用到了global这个单词，但是请注意，该单词和原生js中global(全局变量)无任何关联。实际项目中你可以使用任意具有语义的相关单词。比如定义用户共享数据你可以定义为usercontext、新闻共享数据你可以定义为newscontext等。\n\n\n# usecontext使用示例：\n\n举例：若某react组件一共由3层组件嵌套而成，从外到里分别是appcomponent、middlecomponent、childcomponent。appcomponent需要传递数据给childcomponent。\n\n若使用usecontext来实现，代码示例如下：\n\n//global-context.js\nimport react from 'react';\nconst globalcontext = react.createcontext(); //请注意，这里还可以给react.createcontext()传入一个默认值\n//例如：const globalcontext = react.createcontext({name:'yang',age:18})\n//假如<globalcontext.provider>中没有设置value的值，就会使用上面定义的默认值\nexport default globalcontext;\n\n...\n\n//component.js\nimport react, { usecontext } from 'react';\nimport globalcontext from './global-context';\n\nfunction appcomponent() {\n  //标签<globalcontext.provider>中向下传递数据，必须使用value这个属性，且数据必须是键值对类型的object\n  //如果不添加value，那么子组件获取到的共享数据value值是react.createcontext(defaultvalues)中的默认值defaultvalues\n  return <div>\n    <globalcontext.provider value={{name:'puxiao',age:34}}>\n        <middlecomponent />\n    </globalcontext.provider>\n  </div>\n}\n\nfunction middlecomponent(){\n  //middlecomponent 不需要做任何 “属性数据传递接力”，因此降低该组件数据传递复杂性，提高组件可复用性\n  return <div>\n    <childcomponent />\n  </div>\n}\n\nfunction childcomponent(){\n  const global = usecontext(globalcontext); //获取共享数据对象的value值\n  //忘掉<globalcontext.consumer>标签，直接用global获取需要的值\n  return <div>\n    {global.name} - {global.age}\n  </div>\n}\n\nexport default appcomponent;\n\n\n假如childcomponent不使用usecontext，而是使用<globalcontext.consumer>标签，那么代码相应修改为：\n\nfunction childcomponent(){\n  return <globalcontext.consumer>\n    {\n        global => {\n            return <div>{global.name} - {global.age}</div>\n        }\n    }\n  </globalcontext.consumer>\n}\n\n\n使用usecontext可以大大降低获取数据代码复杂性。\n\n请注意：usecontext只是简化了获取共享数据value的代码，但是对于<xxxcontext.provider>的使用没有做任何改变，如果组件需要设置2个xxxcontext，那么依然需要进行<xxxcontext.provider>嵌套。\n\n上述代码中appcomponent只向下传递出去1个共享数据对象value值，那如果需要同时传递多个共享数据对象的value值，那该如何实现？\n关于这个问题，会在 usecontext高级用法中讲解。\n\n----------------------------------------\n\n至此，关于usecontext基础用法已经讲完。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"07 useContext高级用法",frontmatter:{title:"07 useContext高级用法",date:"2023-09-07T11:40:56.000Z",permalink:"/pages/15da39/"},regularPath:"/03.react/07.useContext%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95.html",relativePath:"03.react/07.useContext高级用法.md",key:"v-7c321b48",path:"/pages/15da39/",headers:[{level:2,title:"同时传递多个共享数据值给1个子组件",slug:"同时传递多个共享数据值给1个子组件",normalizedTitle:"同时传递多个共享数据值给1个子组件",charIndex:75},{level:2,title:"同时将1个共享数据值传递给多个子组件",slug:"同时将1个共享数据值传递给多个子组件",normalizedTitle:"同时将1个共享数据值传递给多个子组件",charIndex:1034},{level:2,title:"为什么不使用Redux？",slug:"为什么不使用redux",normalizedTitle:"为什么不使用redux？",charIndex:1343}],headersStr:"同时传递多个共享数据值给1个子组件 同时将1个共享数据值传递给多个子组件 为什么不使用Redux？",content:"# 07 useContext高级用法\n\n所谓高级用法，只不过是一些深层知识点和实用技巧，你甚至可以把本章当做对前面知识点的一个巩固和学习。\n\n\n# 同时传递多个共享数据值给1个子组件\n\n实现以下组件需求：\n1、有2个共享数据对象 UserContext、NewsContext；\n2、父组件为AppComponent、子组件为ChildComponent；\n3、父组件需要同时将UserContext、NewsContext的数据同时传递给子组件；\n\n实现代码：\n\n    import React,{ useContext } from 'react'\n\n    const UserContext = React.createContext();\n    const NewsContext = React.createContext();\n\n    function AppComponent() {\n      return (\n        <UserContext.Provider value={{name:'puxiao'}}>\n            <NewsContext.Provider value={{title:'Hello React Hook.'}}>\n                <ChildComponent />\n            </NewsContext.Provider>\n        </UserContext.Provider>\n      )\n    }\n\n    function ChildComponent(){\n      const user = useContext(UserContext);\n      const news = useContext(NewsContext);\n      return <div>\n        {user.name} - {news.title}\n      </div>\n    }\n\n    export default AppComponent;\n\n\n代码分析：\n1、父组件同时要实现传递2个共享数据对象value值，需要使用<XxxContext.Provider value={obj}>标签进行2次嵌套。\n2、子组件使用了useContext，他可以自由随意使用父组件传递过来的共享数据value，并不需要多次嵌套获取。\n\n\n# 同时将1个共享数据值传递给多个子组件\n\n使用<XxxContext.Provider></XxxContext.Provider>标签将多个子组件包裹起来，即可实现。\n\n    <XxxContext.Provider value={{name:'puxiao'}}>\n        <ComponentA />\n        <ComponentB />\n        <ComponentC />\n    </XxxContext.Provider>\n\n\n3个子组件<ComponentA />、<ComponentB />、<ComponentC />都可使用useContext获取共享数据值。\n\n\n# 为什么不使用Redux？\n\n在Hook出现以前，React主要负责视图层的渲染，并不负责组件数据状态管理，所以才有了第三方Redux模块，专门来负责React的数据管理。\n\n但是自从有了Hook后，使用React Hook 进行函数组件开发，实现数据状态管理变得切实可行。只要根据实际项目需求，使用useContext以及下一章节要学习的useReducer，一定程度上是可以满足常见需求的。\n\n毕竟使用Redux会增大项目复杂度，此外还要花费学习Redux成本。\n\n具体需求具体分析，不必过分追求Redux。\n\n----------------------------------------\n\n至此，关于useContext高级用法已经讲完，useContext降低了组件之间数据传递的复杂性，让我们编写代码更加心情愉悦，而不用去关心层层嵌套问题。\n\n接下来学习第4个Hook函数useReducer。",normalizedContent:"# 07 usecontext高级用法\n\n所谓高级用法，只不过是一些深层知识点和实用技巧，你甚至可以把本章当做对前面知识点的一个巩固和学习。\n\n\n# 同时传递多个共享数据值给1个子组件\n\n实现以下组件需求：\n1、有2个共享数据对象 usercontext、newscontext；\n2、父组件为appcomponent、子组件为childcomponent；\n3、父组件需要同时将usercontext、newscontext的数据同时传递给子组件；\n\n实现代码：\n\n    import react,{ usecontext } from 'react'\n\n    const usercontext = react.createcontext();\n    const newscontext = react.createcontext();\n\n    function appcomponent() {\n      return (\n        <usercontext.provider value={{name:'puxiao'}}>\n            <newscontext.provider value={{title:'hello react hook.'}}>\n                <childcomponent />\n            </newscontext.provider>\n        </usercontext.provider>\n      )\n    }\n\n    function childcomponent(){\n      const user = usecontext(usercontext);\n      const news = usecontext(newscontext);\n      return <div>\n        {user.name} - {news.title}\n      </div>\n    }\n\n    export default appcomponent;\n\n\n代码分析：\n1、父组件同时要实现传递2个共享数据对象value值，需要使用<xxxcontext.provider value={obj}>标签进行2次嵌套。\n2、子组件使用了usecontext，他可以自由随意使用父组件传递过来的共享数据value，并不需要多次嵌套获取。\n\n\n# 同时将1个共享数据值传递给多个子组件\n\n使用<xxxcontext.provider></xxxcontext.provider>标签将多个子组件包裹起来，即可实现。\n\n    <xxxcontext.provider value={{name:'puxiao'}}>\n        <componenta />\n        <componentb />\n        <componentc />\n    </xxxcontext.provider>\n\n\n3个子组件<componenta />、<componentb />、<componentc />都可使用usecontext获取共享数据值。\n\n\n# 为什么不使用redux？\n\n在hook出现以前，react主要负责视图层的渲染，并不负责组件数据状态管理，所以才有了第三方redux模块，专门来负责react的数据管理。\n\n但是自从有了hook后，使用react hook 进行函数组件开发，实现数据状态管理变得切实可行。只要根据实际项目需求，使用usecontext以及下一章节要学习的usereducer，一定程度上是可以满足常见需求的。\n\n毕竟使用redux会增大项目复杂度，此外还要花费学习redux成本。\n\n具体需求具体分析，不必过分追求redux。\n\n----------------------------------------\n\n至此，关于usecontext高级用法已经讲完，usecontext降低了组件之间数据传递的复杂性，让我们编写代码更加心情愉悦，而不用去关心层层嵌套问题。\n\n接下来学习第4个hook函数usereducer。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"08 useReducer基础用法",frontmatter:{title:"08 useReducer基础用法",date:"2023-09-07T17:36:58.000Z",permalink:"/pages/ab6774/"},regularPath:"/03.react/08.useReducer%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95.html",relativePath:"03.react/08.useReducer基础用法.md",key:"v-79108ef8",path:"/pages/ab6774/",headers:[{level:2,title:"useReducer概念解释",slug:"usereducer概念解释",normalizedTitle:"usereducer概念解释",charIndex:24},{level:2,title:"useReducer是来解决什么问题的？",slug:"usereducer是来解决什么问题的",normalizedTitle:"usereducer是来解决什么问题的？",charIndex:318},{level:2,title:"useReducer函数源码：",slug:"usereducer函数源码",normalizedTitle:"usereducer函数源码：",charIndex:530},{level:2,title:"useReducer基本用法",slug:"usereducer基本用法",normalizedTitle:"usereducer基本用法",charIndex:1038},{level:5,title:"代码形式：",slug:"代码形式",normalizedTitle:"代码形式：",charIndex:1452},{level:5,title:"拆解说明：",slug:"拆解说明",normalizedTitle:"拆解说明：",charIndex:2066},{level:4,title:"'reducer'补充说明",slug:"reducer-补充说明",normalizedTitle:"'reducer'补充说明",charIndex:2106},{level:4,title:"'xxx'补充说明",slug:"xxx-补充说明",normalizedTitle:"'xxx'补充说明",charIndex:2306},{level:4,title:"'dispatch'补充说明",slug:"dispatch-补充说明",normalizedTitle:"'dispatch'补充说明",charIndex:2405},{level:4,title:"'initialValue'补充说明",slug:"initialvalue-补充说明",normalizedTitle:"'initialvalue'补充说明",charIndex:2565},{level:2,title:"useReducer使用示例1：",slug:"usereducer使用示例1",normalizedTitle:"usereducer使用示例1：",charIndex:2755},{level:2,title:"useReducer使用示例2",slug:"usereducer使用示例2",normalizedTitle:"usereducer使用示例2",charIndex:4043}],headersStr:"useReducer概念解释 useReducer是来解决什么问题的？ useReducer函数源码： useReducer基本用法 代码形式： 拆解说明： 'reducer'补充说明 'xxx'补充说明 'dispatch'补充说明 'initialValue'补充说明 useReducer使用示例1： useReducer使用示例2",content:"# 08 useReducer基础用法\n\n\n# useReducer概念解释\n\n我们第四个要学习的Hook(钩子函数)是useReducer，他的作用是“勾住”某些自定义数据对应的dispatch所引发的数据更改事件。useReducer可以替代useState，实现更为复杂逻辑的数据修改。\n\n在React 16.8版本以前，通常需要使用第三方Redux来管理React的公共数据，但自从 React Hook 概念出现以后，可以使用 useContext + useReducer 轻松实现 Redux 相似功能。这一部分会在 “useReducer高级用法” 中做详细讲解。\n\n让我们回到useReducer基础学习中。\n\n\n# useReducer是来解决什么问题的？\n\n答：useReducer是useState的升级版(实际上应该是原始版)，可以实现复杂逻辑修改，而不是像useState那样只是直接赋值修改。\n\n补充说明：\n1、在React源码中，实际上useState就是由useReducer实现的，所以useReducer准确来说是useState的原始版。\n2、无论哪一个Hook函数，本质上都是通过事件驱动来实现视图层更新的。\n\n\n# useReducer函数源码：\n\n回到useReducer的学习中，首先看一下React源码中的ReactHooks.js。\n\n//备注：源码采用TypeScript编写，如果不懂TS代码，阅读起来稍显困难\nexport function useReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用Hook”，并不是“Hook源码分析”。之所以贴出源码只是想让你重点看一下useReducer函数的第3个参数。一般我们只传2个参数，如果有一天你看到有人为了某些不常用的目的传了3个参数，你应该理解，第3个参数其实只是第1和第2个参数的某种转化。事实上你可以完全忽略这个问题，每次值传2个参数即可。^_^\n\n\n# useReducer基本用法\n\nuseReducer(reducer,initialValue)函数通常传入2个参数，第1个参数为我们定义的一个“由dispatch引发的数据修改处理函数”，第2个参数为自定义数据的默认值，useReducer函数会返回自定义变量的引用和该自定义变量对应的“dispatch”。\n\n请注意，当你看到了dispatch，肯定想到了原生JS中的EventEmitter，事实上React Hook帮我们做了底层的事件驱动处理，我们拿到的dispatch以及“事件处理函数”reducer，都时被React Hook 封装过后的，并不是真正的抛出和事件处理函数。\n\n但是为了更容易让你理解，本文依然会在讲解useReducer时使用到“事件抛出、事件处理函数”等文字。\n\n如果你了解事件驱动，使用过EventEmitter，或者你使用过Redux，那么你会很容易理解useReducer的用法。\n\n# 代码形式：\n\nimport React, { useReducer } from 'react'; //引入useReducer\n\n//定义好“事件处理函数” reducer\nfunction reducer(state, action) {\n  switch (action) {\n    case 'xx':\n        return xxxx;\n    case 'xx':\n        return xxxx;\n    default:\n        return xxxx;\n  }\n}\n\nfunction Component(){\n  //声明一个变量xxx，以及对应修改xxx的dispatch\n  //将事件处理函数reducer和默认值initialValue作为参数传递给useReducer\n  const [xxx, dispatch] = useReducer(reducer, initialValue); \n\n  //若想获取xxx的值，直接使用xxx即可\n  \n  //若想修改xxx的值，通过dispatch来修改\n  dispatch('xx');\n}\n\n//请注意，上述代码中的action只是最基础的字符串形式，事实上action可以是多属性的object，这样可以自定义更多属性和更多参数值\n//例如 action 可以是 {type:'xx',param:xxx}\n\n\n# 拆解说明：\n\n1、具体讲解已在上面示例代码中做了多项注释，此处不再重复；\n\n# 'reducer'补充说明\n\n1、reducer英文单词本身意思是“减速器、还原剂”，但是本文中一直把reducer称呼为“事件处理函数”，但事实上reducer确实扮演一个事件处理函数。\n2、千万不要把useReducer中的reducer 和 原生JS中的Array.prototype.reduce()弄混淆，他们两个只是刚好都使用了这个reduce单词而已，两者本身没有任何内在关联。\n\n# 'xxx'补充说明\n\n假设我们定义的变量名为xxx，那么只能通过dispatch来修改xxx，不要尝试通过 xxx = newValue 这种形式直接修改变量的值，React 不允许这样做。\n\n# 'dispatch'补充说明\n\n再次强调，dispacth并不是真正的Event.dispatch，但是你完全可以把它当成Event.dispatch来理解，只不过useReducer中的dispacth(xxx)函数抛出内容不是event，而是一个包含修改信息的对象，该对象不仅可以是字符串，还可以是复杂对象。\n\n# 'initialValue'补充说明\n\ninitialValue是我们自定义变量的默认值，该值可以是简单类型(number、string)，也可以是复杂类型(object、array)。\n推荐建议：即使该值是简单类型，也建议单独定义出来而不是直接将值写在useReducer函数中，因为单独定义可以让我们更加清晰读懂数据结构，尤其是initialValue为复杂类型时。\n\n\n# useReducer使用示例1：\n\n举例：若某React组件内部有一个变量count，默认值为0，有3个button，点击之后分别可以修改count的值。3个按钮具体的功能为：第1个button点击之后count+1，第2个button点击之后count -1，第3个button点击之后 count x 2 (翻倍)。\n\n若使用useState来实现，那肯定没问题，每个button点击之后分别运算得到对应的新值，将该值直接通过setCount赋予给count。\n\n若使用useReducer来实现相同功能，代码示例如下：\n\nimport React, { useReducer } from 'react';\n\nfunction reducer(state,action){\n  switch(action){\n    case 'add':\n        return state + 1;\n    case 'sub':\n        return state - 1;\n    case 'mul':\n        return state * 2;\n    default:\n        console.log('what?');\n        return state;\n  }\n}\n\nfunction CountComponent() {\n  const [count, dispatch] = useReducer(reducer,0);\n\n  return <div>\n    {count}\n    <button onClick={() => {dispatch('add')}} >add</button>\n    <button onClick={() => {dispatch('sub')}} >sub</button>\n    <button onClick={() => {dispatch('mul')}} >mul</button>\n  </div>;\n}\n\nexport default CountComponent;\n\n\n代码分析：\n3个按钮点击之后，不再具体去直接修改count的值，而是采用 dispatche('xxx')的形式 “抛出修改count的事件”，事件处理函数reducer“捕获到修改count的事件后”，根据该事件携带的命令类型来进一步判断，并真正执行对count的修改。\n\n请注意上面这句话中加引号的语句，本文只是以事件驱动的语言来描述整个过程，目的希望你能更加容易理解。\n\n3个按钮只是负责通知reducer“我希望做什么事情”，具体怎么做完全由reducer来执行。这样实现了修改数据具体执行逻辑与按钮点击处理函数的抽离。\n\n如果不使用useReducer，而是使用之前学习过的useState，那么对count的每一种修改逻辑代码，都必须分散写在每个按钮的点击事件处理函数中。\n\n若只是修改count的功能，那么useReducer的优势还未全部体现出来，我们接着看另外一个示例。\n\n\n# useReducer使用示例2\n\n举例：在示例1中对count 执行的修改，数值变动都是固定的，即 +1、-1、x 2。假设我们希望按钮点击之后，能够自主控制增加多少、减多少、或乘以几，这个效果该怎么实现呢？\n\n很简单，我们将dispatch('xxx')中的xxx由字符串改为obj，obj可以携带更多属性作为参数传给reducer。 比如之前对 \"加\"的命令 dispatch('add')，修改为 dispatch({type:'add',param:2})。 reducer可以通过action.type来区分是哪种命令、通过action.param来获取对应的参数。\n\n为了简化代码，我们将在点击按钮后，随机产生一个数字，并将该数字作为 param 的值，传递给reducer。\n\n修改后的代码为：\n\nimport React, { useReducer } from 'react';\n\nfunction reducer(state,action){\n  //根据action.type来判断该执行哪种修改\n  switch(action.type){\n    case 'add':\n      //count 最终加多少，取决于 action.param 的值\n      return state + action.param;\n    case 'sub':\n      return state - action.param;\n    case 'mul':\n      return state * action.param;\n    default:\n      console.log('what?');\n      return state;\n  }\n}\n\nfunction getRandom(){\n  return Math.floor(Math.random()*10);\n}\n\nfunction CountComponent() {\n  const [count, dispatch] = useReducer(reducer,0);\n\n  return <div>\n    {count}\n    <button onClick={() => {dispatch({type:'add',param:getRandom()})}} >add</button>\n    <button onClick={() => {dispatch({type:'sub',param:getRandom()})}} >sub</button>\n    <button onClick={() => {dispatch({type:'mul',param:getRandom()})}} >mul</button>\n  </div>;\n}\n\nexport default CountComponent;\n\n\n同样的道理，我们可以把示例中的count由简单类型改为复杂类型，来储存更多的变量。 但是，建议不要把 useReducer 对应的变量设计的过于复杂。\n\n使用useReducer，可以让我们使用比较复杂的逻辑和参数对内部变量进行修改。\n\n不过你是否发现，示例1和示例2中所有的变量都是在同一个组件内定义和修改的，现实项目中肯定牵扯到不同模块组件之间共享并修改某个变量，那又该怎么办呢？\n在下一章节 useReducer高级用法 中，我们会详细讲述如何用 useReducer + useContext 来实现全局不同层级组件共享并修改某变量。\n\n----------------------------------------\n\n至此，关于useReducer基础用法已经讲完。",normalizedContent:"# 08 usereducer基础用法\n\n\n# usereducer概念解释\n\n我们第四个要学习的hook(钩子函数)是usereducer，他的作用是“勾住”某些自定义数据对应的dispatch所引发的数据更改事件。usereducer可以替代usestate，实现更为复杂逻辑的数据修改。\n\n在react 16.8版本以前，通常需要使用第三方redux来管理react的公共数据，但自从 react hook 概念出现以后，可以使用 usecontext + usereducer 轻松实现 redux 相似功能。这一部分会在 “usereducer高级用法” 中做详细讲解。\n\n让我们回到usereducer基础学习中。\n\n\n# usereducer是来解决什么问题的？\n\n答：usereducer是usestate的升级版(实际上应该是原始版)，可以实现复杂逻辑修改，而不是像usestate那样只是直接赋值修改。\n\n补充说明：\n1、在react源码中，实际上usestate就是由usereducer实现的，所以usereducer准确来说是usestate的原始版。\n2、无论哪一个hook函数，本质上都是通过事件驱动来实现视图层更新的。\n\n\n# usereducer函数源码：\n\n回到usereducer的学习中，首先看一下react源码中的reacthooks.js。\n\n//备注：源码采用typescript编写，如果不懂ts代码，阅读起来稍显困难\nexport function usereducer<s, i, a>(\n  reducer: (s, a) => s,\n  initialarg: i,\n  init?: i => s,\n): [s, dispatch<a>] {\n  const dispatcher = resolvedispatcher();\n  return dispatcher.usereducer(reducer, initialarg, init);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用hook”，并不是“hook源码分析”。之所以贴出源码只是想让你重点看一下usereducer函数的第3个参数。一般我们只传2个参数，如果有一天你看到有人为了某些不常用的目的传了3个参数，你应该理解，第3个参数其实只是第1和第2个参数的某种转化。事实上你可以完全忽略这个问题，每次值传2个参数即可。^_^\n\n\n# usereducer基本用法\n\nusereducer(reducer,initialvalue)函数通常传入2个参数，第1个参数为我们定义的一个“由dispatch引发的数据修改处理函数”，第2个参数为自定义数据的默认值，usereducer函数会返回自定义变量的引用和该自定义变量对应的“dispatch”。\n\n请注意，当你看到了dispatch，肯定想到了原生js中的eventemitter，事实上react hook帮我们做了底层的事件驱动处理，我们拿到的dispatch以及“事件处理函数”reducer，都时被react hook 封装过后的，并不是真正的抛出和事件处理函数。\n\n但是为了更容易让你理解，本文依然会在讲解usereducer时使用到“事件抛出、事件处理函数”等文字。\n\n如果你了解事件驱动，使用过eventemitter，或者你使用过redux，那么你会很容易理解usereducer的用法。\n\n# 代码形式：\n\nimport react, { usereducer } from 'react'; //引入usereducer\n\n//定义好“事件处理函数” reducer\nfunction reducer(state, action) {\n  switch (action) {\n    case 'xx':\n        return xxxx;\n    case 'xx':\n        return xxxx;\n    default:\n        return xxxx;\n  }\n}\n\nfunction component(){\n  //声明一个变量xxx，以及对应修改xxx的dispatch\n  //将事件处理函数reducer和默认值initialvalue作为参数传递给usereducer\n  const [xxx, dispatch] = usereducer(reducer, initialvalue); \n\n  //若想获取xxx的值，直接使用xxx即可\n  \n  //若想修改xxx的值，通过dispatch来修改\n  dispatch('xx');\n}\n\n//请注意，上述代码中的action只是最基础的字符串形式，事实上action可以是多属性的object，这样可以自定义更多属性和更多参数值\n//例如 action 可以是 {type:'xx',param:xxx}\n\n\n# 拆解说明：\n\n1、具体讲解已在上面示例代码中做了多项注释，此处不再重复；\n\n# 'reducer'补充说明\n\n1、reducer英文单词本身意思是“减速器、还原剂”，但是本文中一直把reducer称呼为“事件处理函数”，但事实上reducer确实扮演一个事件处理函数。\n2、千万不要把usereducer中的reducer 和 原生js中的array.prototype.reduce()弄混淆，他们两个只是刚好都使用了这个reduce单词而已，两者本身没有任何内在关联。\n\n# 'xxx'补充说明\n\n假设我们定义的变量名为xxx，那么只能通过dispatch来修改xxx，不要尝试通过 xxx = newvalue 这种形式直接修改变量的值，react 不允许这样做。\n\n# 'dispatch'补充说明\n\n再次强调，dispacth并不是真正的event.dispatch，但是你完全可以把它当成event.dispatch来理解，只不过usereducer中的dispacth(xxx)函数抛出内容不是event，而是一个包含修改信息的对象，该对象不仅可以是字符串，还可以是复杂对象。\n\n# 'initialvalue'补充说明\n\ninitialvalue是我们自定义变量的默认值，该值可以是简单类型(number、string)，也可以是复杂类型(object、array)。\n推荐建议：即使该值是简单类型，也建议单独定义出来而不是直接将值写在usereducer函数中，因为单独定义可以让我们更加清晰读懂数据结构，尤其是initialvalue为复杂类型时。\n\n\n# usereducer使用示例1：\n\n举例：若某react组件内部有一个变量count，默认值为0，有3个button，点击之后分别可以修改count的值。3个按钮具体的功能为：第1个button点击之后count+1，第2个button点击之后count -1，第3个button点击之后 count x 2 (翻倍)。\n\n若使用usestate来实现，那肯定没问题，每个button点击之后分别运算得到对应的新值，将该值直接通过setcount赋予给count。\n\n若使用usereducer来实现相同功能，代码示例如下：\n\nimport react, { usereducer } from 'react';\n\nfunction reducer(state,action){\n  switch(action){\n    case 'add':\n        return state + 1;\n    case 'sub':\n        return state - 1;\n    case 'mul':\n        return state * 2;\n    default:\n        console.log('what?');\n        return state;\n  }\n}\n\nfunction countcomponent() {\n  const [count, dispatch] = usereducer(reducer,0);\n\n  return <div>\n    {count}\n    <button onclick={() => {dispatch('add')}} >add</button>\n    <button onclick={() => {dispatch('sub')}} >sub</button>\n    <button onclick={() => {dispatch('mul')}} >mul</button>\n  </div>;\n}\n\nexport default countcomponent;\n\n\n代码分析：\n3个按钮点击之后，不再具体去直接修改count的值，而是采用 dispatche('xxx')的形式 “抛出修改count的事件”，事件处理函数reducer“捕获到修改count的事件后”，根据该事件携带的命令类型来进一步判断，并真正执行对count的修改。\n\n请注意上面这句话中加引号的语句，本文只是以事件驱动的语言来描述整个过程，目的希望你能更加容易理解。\n\n3个按钮只是负责通知reducer“我希望做什么事情”，具体怎么做完全由reducer来执行。这样实现了修改数据具体执行逻辑与按钮点击处理函数的抽离。\n\n如果不使用usereducer，而是使用之前学习过的usestate，那么对count的每一种修改逻辑代码，都必须分散写在每个按钮的点击事件处理函数中。\n\n若只是修改count的功能，那么usereducer的优势还未全部体现出来，我们接着看另外一个示例。\n\n\n# usereducer使用示例2\n\n举例：在示例1中对count 执行的修改，数值变动都是固定的，即 +1、-1、x 2。假设我们希望按钮点击之后，能够自主控制增加多少、减多少、或乘以几，这个效果该怎么实现呢？\n\n很简单，我们将dispatch('xxx')中的xxx由字符串改为obj，obj可以携带更多属性作为参数传给reducer。 比如之前对 \"加\"的命令 dispatch('add')，修改为 dispatch({type:'add',param:2})。 reducer可以通过action.type来区分是哪种命令、通过action.param来获取对应的参数。\n\n为了简化代码，我们将在点击按钮后，随机产生一个数字，并将该数字作为 param 的值，传递给reducer。\n\n修改后的代码为：\n\nimport react, { usereducer } from 'react';\n\nfunction reducer(state,action){\n  //根据action.type来判断该执行哪种修改\n  switch(action.type){\n    case 'add':\n      //count 最终加多少，取决于 action.param 的值\n      return state + action.param;\n    case 'sub':\n      return state - action.param;\n    case 'mul':\n      return state * action.param;\n    default:\n      console.log('what?');\n      return state;\n  }\n}\n\nfunction getrandom(){\n  return math.floor(math.random()*10);\n}\n\nfunction countcomponent() {\n  const [count, dispatch] = usereducer(reducer,0);\n\n  return <div>\n    {count}\n    <button onclick={() => {dispatch({type:'add',param:getrandom()})}} >add</button>\n    <button onclick={() => {dispatch({type:'sub',param:getrandom()})}} >sub</button>\n    <button onclick={() => {dispatch({type:'mul',param:getrandom()})}} >mul</button>\n  </div>;\n}\n\nexport default countcomponent;\n\n\n同样的道理，我们可以把示例中的count由简单类型改为复杂类型，来储存更多的变量。 但是，建议不要把 usereducer 对应的变量设计的过于复杂。\n\n使用usereducer，可以让我们使用比较复杂的逻辑和参数对内部变量进行修改。\n\n不过你是否发现，示例1和示例2中所有的变量都是在同一个组件内定义和修改的，现实项目中肯定牵扯到不同模块组件之间共享并修改某个变量，那又该怎么办呢？\n在下一章节 usereducer高级用法 中，我们会详细讲述如何用 usereducer + usecontext 来实现全局不同层级组件共享并修改某变量。\n\n----------------------------------------\n\n至此，关于usereducer基础用法已经讲完。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"09 useReducer高级用法",frontmatter:{title:"09 useReducer高级用法",date:"2023-09-07T17:37:05.000Z",permalink:"/pages/fd7fdb/"},regularPath:"/03.react/09.useReducer%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95.html",relativePath:"03.react/09.useReducer高级用法.md",key:"v-f8c0a0dc",path:"/pages/fd7fdb/",headers:[{level:2,title:"使用useReducer来管理复杂类型的数据",slug:"使用usereducer来管理复杂类型的数据",normalizedTitle:"使用usereducer来管理复杂类型的数据",charIndex:76},{level:2,title:"使用useContext和useReducer实现操作全局共享数据",slug:"使用usecontext和usereducer实现操作全局共享数据",normalizedTitle:"使用usecontext和usereducer实现操作全局共享数据",charIndex:1738},{level:4,title:"需求分析",slug:"需求分析",normalizedTitle:"需求分析",charIndex:1904},{level:4,title:"实现原理",slug:"实现原理",normalizedTitle:"实现原理",charIndex:1988},{level:4,title:"实现思路",slug:"实现思路",normalizedTitle:"实现思路",charIndex:2045},{level:4,title:"补充说明",slug:"补充说明",normalizedTitle:"补充说明",charIndex:2366},{level:4,title:"伪代码演示",slug:"伪代码演示",normalizedTitle:"伪代码演示",charIndex:2511},{level:2,title:"为什么不使用Redux？",slug:"为什么不使用redux",normalizedTitle:"为什么不使用redux？",charIndex:5121},{level:2,title:"忘掉 Redux，忘掉 useReducer+useContext，拥抱 Recoil 吧！",slug:"忘掉-redux-忘掉-usereducer-usecontext-拥抱-recoil-吧",normalizedTitle:"忘掉 redux，忘掉 usereducer+usecontext，拥抱 recoil 吧！",charIndex:5245},{level:2,title:"什么时候用useState？什么时候用useReducer？",slug:"什么时候用usestate-什么时候用usereducer",normalizedTitle:"什么时候用usestate？什么时候用usereducer？",charIndex:5462}],headersStr:"使用useReducer来管理复杂类型的数据 使用useContext和useReducer实现操作全局共享数据 需求分析 实现原理 实现思路 补充说明 伪代码演示 为什么不使用Redux？ 忘掉 Redux，忘掉 useReducer+useContext，拥抱 Recoil 吧！ 什么时候用useState？什么时候用useReducer？",content:"# 09 useReducer高级用法\n\n所谓高级用法，只不过是一些深层知识点和实用技巧，你甚至可以把本章当做对前面知识点的一个巩固和学习。\n\n\n\n# 使用useReducer来管理复杂类型的数据\n\n举例，若某组件内通过ajax请求数据，获取最新一条站内短信文字，需要组件显示整个ajax过程及结果：\n1、当ajax开始请求时，界面显示“loading...”；\n2、当ajax请求发生错误时，界面显示“wrong!”;\n3、当ajax请求成功获取数据时，界面显示获取到的数据内容；\n\n如果我们使用useState来实现上述功能，伪代码如下：\n\nfunction Component() {\n  const [loading,setLoading] = useState(true); //是否ajax请求中，默认为true\n  const [result,setResult] = useState(''); //请求数据内容，默认为''\n  const [error,setError] = useState(false); //请求是否发生错误，默认为false\n\n  {\n      //ajax请求成功\n      setLoading(false);\n      setResult('You have a good news!');//请注意，这是一行伪代码，只是为了演示，并不是真正ajax获取的结果\n      setError(false);\n\n      //ajax请求错误\n      setLoading(false);\n      setError(true);\n  }\n\n  return <div>\n    {loading ? 'loading...' : result}\n    {error ? 'wrong!' : null}\n  </div>\n}\n\n\n如果我们使用useReducer来实现，则可将上述3个变量都放在我们定义的变量state中，伪代码如下：\n\nconst initralData = {loading: true,result: '',error: false};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'succes':\n        return {loading:false,result:action.res,error:false}\n    case 'error':\n        return {loading:false,error:true}\n  }\n}\n\nfunction Component() {\n  const [state, dispatch] = useReducer(reducer, initralData);\n\n  {\n      //ajax请求成功\n      dispatch({type:'succes',res:'You have a good news!'});\n\n      //ajax请求错误\n      dispatch({type:'error'});\n  }\n\n  return <div>\n    {state.loading ? 'loading...' : state.result}\n    {state.error ? 'wrong!' : null}\n  </div>\n}\n\n\n你可能会有疑问？\n1、为什么看上去使用useReducer后代码变得更多？\n答：因为使用useReducer，我们将修改数据拆分为2个部分，即“抛出修改事件和事件修改处理函数”。虽然代码增多了，但是逻辑更加清晰。\n\n2、为什么不使用useState，同时把它对应的变量也做成一个obj，就像useReducer的initralData那种？\n答：单纯从1次ajax请求很难看出使用useState或useReducer的差异，但是试想一下多次且ajax返回值在结构类型上容易发生变更，那么使用useReducer这种更加利于代码阅读、功能扩展。\n\n\n\n# 使用useContext和useReducer实现操作全局共享数据\n\n试想一下，如果想实现以下组件需求：\n1、父组件中定义某变量xx；\n2、任何层级下的子组件都可以轻松获取变量xx、并且可以“修改”变量xx；\n\n注意这里的修改是加引号的，因为事实上你永远无法以直接赋值的方式进行修改，永远都需要调用父级组件提供的方法来修改。\n\n# 需求分析\n\n首先这个功能是类组件无法做到的，也是React 16.8版本以前根本不能实现的，今天，当你使用Hook可轻松实现类似 Redux 共享数据管理功能。\n\n# 实现原理\n\n用 useContext 实现“获取全局数据”\n用 useReducer 实现“修改全局数据”\n\n# 实现思路\n\n1、用React.createContext()定义一个全局数据对象；\n2、在父组件中用 useReducer 定义全局变量xx和负责抛出修改事件的dispatch；\n3、在父组件之外，定义负责具体修改全局变量的处理函数reducer，根据修改xx事件类型和参数，执行修改xx的值；\n4、在父组件中用 <XxxContext.Provider value={{xx,dispatch}}> 标签把 全局共享数据和负责抛出修改xx的dispatch 暴露给子组件；\n5、在子组件中用 useContext 获取全局变量；\n6、在子组件中用 xxContext.dispatch 去抛出修改xx的事件，携带修改事件类型和参数；\n\n# 补充说明\n\n上面一直提到了 “抛出事件” “事件处理函数” \"dispatch\" 都是字面上的，不是真正意义上的事件驱动。 这些都只是 React 暴露给我们的函数或形参。 真正的事件驱动是由 React Hook 底层为我们完成的。\n\n以上观点仅为个人理解，不能保证100%正确。\n\n# 伪代码演示\n\n假设React组件需求为：\n1、有全局数据变量count；\n2、不同层级的子组件均可获取并修改全局变量count；\n\n共享对象 代码如下：\n\nimport React from 'react';\nconst CountContext = React.createContext();\nexport default CountContext;\n\n\n父组件 代码如下：\n\n    import React, { useReducer } from 'react';\n    import CountContext from './CountContext';\n    import ComponentA from './ComponentA';\n    import ComponentB from './ComponentB';\n    import ComponentC from './ComponentC';\n    \n    const initialCount = 0; //定义count的默认值\n    \n    //修改count事件处理函数，根据修改参数进行处理\n    function reducer(state, action) {\n    //注意这里先判断事件类型，然后结合携带的参数param 来最终修改count\n    switch (action.type) {\n        case 'add':\n            return state + action.param;\n        case 'sub':\n            return state - action.param;\n        case 'mul':\n            return state * action.param;\n        case 'reset':\n            return initialCount;\n        default:\n            console.log('what?');\n            return state;\n    }\n    }\n    \n    function ParentComponent() {\n      //定义全局变量count，以及负责抛出修改事件的dispatch\n      const [count, dispatch] = useReducer(reducer, initialCount);\n    \n      //请注意：value={{count,dispatch} 是整个代码的核心，把将count、dispatch暴露给所有子组件\n      return <CountContext.Provider value={{count,dispatch}}>\n        <div>\n            ParentComponent - count={count}\n            <ComponentA />\n            <ComponentB />\n            <ComponentC />\n        </div>\n      </CountContext.Provider>\n    }\n    \n    export default ParentComponent;\n\n\n子组件A 代码如下：\n\nimport React,{ useState, useContext } from 'react';\nimport CountContext from './CountContext';\n\nfunction CopmpoentA() {\n  const [param,setParam] = useState(1);\n  //引入全局共享对象，获取全局变量count，以及修改count对应的dispatch\n  const countContext = useContext(CountContext);\n\n  const inputChangeHandler = (eve) => {\n    setParam(eve.target.value);\n  }\n\n  const doHandler = () => {\n    //若想修改全局count，先获取count对应的修改抛出事件对象dispatch，然后通过dispatch将修改内容抛出\n    //抛出的修改内容为：{type:'add',param:xxx}，即告诉count的修改事件处理函数，本次修改的类型为add，参数是param\n    //这里的add和param完全是根据自己实际需求自己定义的\n    countContext.dispatch({type:'add',param:Number(param)});\n  }\n\n  const resetHandler = () => {\n    countContext.dispatch({type:'reset'});\n  }\n\n  return <div>\n        ComponentA - count={countContext.count}\n        <input type='number' value={param} onChange={inputChangeHandler} />\n        <button onClick={doHandler}>add {param}</button>\n        <button onClick={resetHandler}>reset</button>\n    </div>\n}\n\nexport default CopmpoentA;\n\n\n总结：\n1、3个子组件他们主要区别是组件内 doHandler 函数，对count进行不同形式的修改；\n2、3个子组件分别可以实现对全局变量 count 的获取与修改；\n3、当任何一个子组件对count进行了修改，都会立即反映在其他子组件中，实现子组件之间的数据共享。\n\n至此，实现了比较简单的，类似 Redux 全局数据管理效果。\n\n\n\n# 为什么不使用Redux？\n\n这个问题以前提出过，现在可以明确回答：因为我自己使用 useReducer + useContext 自己可以轻松实现，干嘛还要用Redux。\n再见 Redux。\n\n\n\n> 以下内容更新于 2021.05.18\n\n\n# 忘掉 Redux，忘掉 useReducer+useContext，拥抱 Recoil 吧！\n\n强烈推荐使用 React 开发人员针对 Hooks 函数组件推出的新一代状态管理库：Recoil\n\nRecoil 官方网站：https://recoiljs.org/\n\n我写的 Recoil 教程：https://github.com/puxiao/recoil-tutorial\n\n> 以上内容更新于 2021.05.18\n\n\n\n\n# 什么时候用useState？什么时候用useReducer？\n\n本人的建议是：组件自己内部的简单逻辑变量用useState、多个组件之间共享的复杂逻辑变量用useReducer。\n\n----------------------------------------\n\n至此，关于useReducer高级用法已经讲完，useReducer可以让我们实现复杂逻辑的数据修改，结合useContext更能做到全局数据共享和修改。\n\n目前已经学习过的4个Hook函数useState、useEffect、useContext、useReducer，他们都是用来实现组件某些具体业务功能的，而接下来要学习的Hook函数则是用来提高组件整体性能的，例如第5个Hook函数useCallback和第6个Hook函数useMemo。",normalizedContent:"# 09 usereducer高级用法\n\n所谓高级用法，只不过是一些深层知识点和实用技巧，你甚至可以把本章当做对前面知识点的一个巩固和学习。\n\n\n\n# 使用usereducer来管理复杂类型的数据\n\n举例，若某组件内通过ajax请求数据，获取最新一条站内短信文字，需要组件显示整个ajax过程及结果：\n1、当ajax开始请求时，界面显示“loading...”；\n2、当ajax请求发生错误时，界面显示“wrong!”;\n3、当ajax请求成功获取数据时，界面显示获取到的数据内容；\n\n如果我们使用usestate来实现上述功能，伪代码如下：\n\nfunction component() {\n  const [loading,setloading] = usestate(true); //是否ajax请求中，默认为true\n  const [result,setresult] = usestate(''); //请求数据内容，默认为''\n  const [error,seterror] = usestate(false); //请求是否发生错误，默认为false\n\n  {\n      //ajax请求成功\n      setloading(false);\n      setresult('you have a good news!');//请注意，这是一行伪代码，只是为了演示，并不是真正ajax获取的结果\n      seterror(false);\n\n      //ajax请求错误\n      setloading(false);\n      seterror(true);\n  }\n\n  return <div>\n    {loading ? 'loading...' : result}\n    {error ? 'wrong!' : null}\n  </div>\n}\n\n\n如果我们使用usereducer来实现，则可将上述3个变量都放在我们定义的变量state中，伪代码如下：\n\nconst initraldata = {loading: true,result: '',error: false};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'succes':\n        return {loading:false,result:action.res,error:false}\n    case 'error':\n        return {loading:false,error:true}\n  }\n}\n\nfunction component() {\n  const [state, dispatch] = usereducer(reducer, initraldata);\n\n  {\n      //ajax请求成功\n      dispatch({type:'succes',res:'you have a good news!'});\n\n      //ajax请求错误\n      dispatch({type:'error'});\n  }\n\n  return <div>\n    {state.loading ? 'loading...' : state.result}\n    {state.error ? 'wrong!' : null}\n  </div>\n}\n\n\n你可能会有疑问？\n1、为什么看上去使用usereducer后代码变得更多？\n答：因为使用usereducer，我们将修改数据拆分为2个部分，即“抛出修改事件和事件修改处理函数”。虽然代码增多了，但是逻辑更加清晰。\n\n2、为什么不使用usestate，同时把它对应的变量也做成一个obj，就像usereducer的initraldata那种？\n答：单纯从1次ajax请求很难看出使用usestate或usereducer的差异，但是试想一下多次且ajax返回值在结构类型上容易发生变更，那么使用usereducer这种更加利于代码阅读、功能扩展。\n\n\n\n# 使用usecontext和usereducer实现操作全局共享数据\n\n试想一下，如果想实现以下组件需求：\n1、父组件中定义某变量xx；\n2、任何层级下的子组件都可以轻松获取变量xx、并且可以“修改”变量xx；\n\n注意这里的修改是加引号的，因为事实上你永远无法以直接赋值的方式进行修改，永远都需要调用父级组件提供的方法来修改。\n\n# 需求分析\n\n首先这个功能是类组件无法做到的，也是react 16.8版本以前根本不能实现的，今天，当你使用hook可轻松实现类似 redux 共享数据管理功能。\n\n# 实现原理\n\n用 usecontext 实现“获取全局数据”\n用 usereducer 实现“修改全局数据”\n\n# 实现思路\n\n1、用react.createcontext()定义一个全局数据对象；\n2、在父组件中用 usereducer 定义全局变量xx和负责抛出修改事件的dispatch；\n3、在父组件之外，定义负责具体修改全局变量的处理函数reducer，根据修改xx事件类型和参数，执行修改xx的值；\n4、在父组件中用 <xxxcontext.provider value={{xx,dispatch}}> 标签把 全局共享数据和负责抛出修改xx的dispatch 暴露给子组件；\n5、在子组件中用 usecontext 获取全局变量；\n6、在子组件中用 xxcontext.dispatch 去抛出修改xx的事件，携带修改事件类型和参数；\n\n# 补充说明\n\n上面一直提到了 “抛出事件” “事件处理函数” \"dispatch\" 都是字面上的，不是真正意义上的事件驱动。 这些都只是 react 暴露给我们的函数或形参。 真正的事件驱动是由 react hook 底层为我们完成的。\n\n以上观点仅为个人理解，不能保证100%正确。\n\n# 伪代码演示\n\n假设react组件需求为：\n1、有全局数据变量count；\n2、不同层级的子组件均可获取并修改全局变量count；\n\n共享对象 代码如下：\n\nimport react from 'react';\nconst countcontext = react.createcontext();\nexport default countcontext;\n\n\n父组件 代码如下：\n\n    import react, { usereducer } from 'react';\n    import countcontext from './countcontext';\n    import componenta from './componenta';\n    import componentb from './componentb';\n    import componentc from './componentc';\n    \n    const initialcount = 0; //定义count的默认值\n    \n    //修改count事件处理函数，根据修改参数进行处理\n    function reducer(state, action) {\n    //注意这里先判断事件类型，然后结合携带的参数param 来最终修改count\n    switch (action.type) {\n        case 'add':\n            return state + action.param;\n        case 'sub':\n            return state - action.param;\n        case 'mul':\n            return state * action.param;\n        case 'reset':\n            return initialcount;\n        default:\n            console.log('what?');\n            return state;\n    }\n    }\n    \n    function parentcomponent() {\n      //定义全局变量count，以及负责抛出修改事件的dispatch\n      const [count, dispatch] = usereducer(reducer, initialcount);\n    \n      //请注意：value={{count,dispatch} 是整个代码的核心，把将count、dispatch暴露给所有子组件\n      return <countcontext.provider value={{count,dispatch}}>\n        <div>\n            parentcomponent - count={count}\n            <componenta />\n            <componentb />\n            <componentc />\n        </div>\n      </countcontext.provider>\n    }\n    \n    export default parentcomponent;\n\n\n子组件a 代码如下：\n\nimport react,{ usestate, usecontext } from 'react';\nimport countcontext from './countcontext';\n\nfunction copmpoenta() {\n  const [param,setparam] = usestate(1);\n  //引入全局共享对象，获取全局变量count，以及修改count对应的dispatch\n  const countcontext = usecontext(countcontext);\n\n  const inputchangehandler = (eve) => {\n    setparam(eve.target.value);\n  }\n\n  const dohandler = () => {\n    //若想修改全局count，先获取count对应的修改抛出事件对象dispatch，然后通过dispatch将修改内容抛出\n    //抛出的修改内容为：{type:'add',param:xxx}，即告诉count的修改事件处理函数，本次修改的类型为add，参数是param\n    //这里的add和param完全是根据自己实际需求自己定义的\n    countcontext.dispatch({type:'add',param:number(param)});\n  }\n\n  const resethandler = () => {\n    countcontext.dispatch({type:'reset'});\n  }\n\n  return <div>\n        componenta - count={countcontext.count}\n        <input type='number' value={param} onchange={inputchangehandler} />\n        <button onclick={dohandler}>add {param}</button>\n        <button onclick={resethandler}>reset</button>\n    </div>\n}\n\nexport default copmpoenta;\n\n\n总结：\n1、3个子组件他们主要区别是组件内 dohandler 函数，对count进行不同形式的修改；\n2、3个子组件分别可以实现对全局变量 count 的获取与修改；\n3、当任何一个子组件对count进行了修改，都会立即反映在其他子组件中，实现子组件之间的数据共享。\n\n至此，实现了比较简单的，类似 redux 全局数据管理效果。\n\n\n\n# 为什么不使用redux？\n\n这个问题以前提出过，现在可以明确回答：因为我自己使用 usereducer + usecontext 自己可以轻松实现，干嘛还要用redux。\n再见 redux。\n\n\n\n> 以下内容更新于 2021.05.18\n\n\n# 忘掉 redux，忘掉 usereducer+usecontext，拥抱 recoil 吧！\n\n强烈推荐使用 react 开发人员针对 hooks 函数组件推出的新一代状态管理库：recoil\n\nrecoil 官方网站：https://recoiljs.org/\n\n我写的 recoil 教程：https://github.com/puxiao/recoil-tutorial\n\n> 以上内容更新于 2021.05.18\n\n\n\n\n# 什么时候用usestate？什么时候用usereducer？\n\n本人的建议是：组件自己内部的简单逻辑变量用usestate、多个组件之间共享的复杂逻辑变量用usereducer。\n\n----------------------------------------\n\n至此，关于usereducer高级用法已经讲完，usereducer可以让我们实现复杂逻辑的数据修改，结合usecontext更能做到全局数据共享和修改。\n\n目前已经学习过的4个hook函数usestate、useeffect、usecontext、usereducer，他们都是用来实现组件某些具体业务功能的，而接下来要学习的hook函数则是用来提高组件整体性能的，例如第5个hook函数usecallback和第6个hook函数usememo。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"10 useCallback基础用法",frontmatter:{title:"10 useCallback基础用法",date:"2023-09-11T15:22:43.000Z",permalink:"/pages/9d19f1/"},regularPath:"/03.react/10.useCallback%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95.html",relativePath:"03.react/10.useCallback基础用法.md",key:"v-349dd31c",path:"/pages/9d19f1/",headers:[{level:2,title:"useCallback概念解释",slug:"usecallback概念解释",normalizedTitle:"usecallback概念解释",charIndex:25},{level:5,title:"react原型链？",slug:"react原型链",normalizedTitle:"react原型链？",charIndex:181},{level:5,title:"第1个知识点：React.memo() 的用法",slug:"第1个知识点-react-memo-的用法",normalizedTitle:"第1个知识点：react.memo() 的用法",charIndex:2421},{level:5,title:"第2个知识点：=== 等比运算",slug:"第2个知识点-等比运算",normalizedTitle:"第2个知识点：=== 等比运算",charIndex:3653},{level:2,title:"useCallback是来解决什么问题的？",slug:"usecallback是来解决什么问题的",normalizedTitle:"usecallback是来解决什么问题的？",charIndex:4359},{level:2,title:"useCallback函数源码：",slug:"usecallback函数源码",normalizedTitle:"usecallback函数源码：",charIndex:5591},{level:2,title:"useCallback基本用法",slug:"usecallback基本用法",normalizedTitle:"usecallback基本用法",charIndex:6276},{level:5,title:"代码形式：",slug:"代码形式",normalizedTitle:"代码形式：",charIndex:6791},{level:5,title:"拆解说明：",slug:"拆解说明",normalizedTitle:"拆解说明：",charIndex:7194},{level:4,title:"'age'补充说明",slug:"age-补充说明",normalizedTitle:"'age'补充说明",charIndex:7234},{level:4,title:"'clickHandler'补充说明",slug:"clickhandler-补充说明",normalizedTitle:"'clickhandler'补充说明",charIndex:7428},{level:4,title:"''补充说明",slug:"button-补充说明",normalizedTitle:"''补充说明",charIndex:null},{level:2,title:"useCallback使用示例：",slug:"usecallback使用示例",normalizedTitle:"usecallback使用示例：",charIndex:7688},{level:2,title:"思考题",slug:"思考题",normalizedTitle:"思考题",charIndex:9834}],headersStr:"useCallback概念解释 react原型链？ 第1个知识点：React.memo() 的用法 第2个知识点：=== 等比运算 useCallback是来解决什么问题的？ useCallback函数源码： useCallback基本用法 代码形式： 拆解说明： 'age'补充说明 'clickHandler'补充说明 ''补充说明 useCallback使用示例： 思考题",content:"# 10 useCallback基础用法\n\n\n# useCallback概念解释\n\n我们第五个要学习的Hook(钩子函数)是useCallback，他的作用是“勾住”组件属性中某些处理函数，创建这些函数对应在react原型链上的变量引用。useCallback第2个参数是处理函数中的依赖变量，只有当依赖变量发生改变时才会重新修改并创建新的一份处理函数。\n\n# react原型链？\n\n我对react原型链也不太懂，你可以简单得把 react原型链 理解成 “react定义的一块内存”。我们使用某些 hook 定义的“变量或函数”都存放在这块内存里。这块内存里保存的变量或函数，并不会因为组件重新渲染而消失。\n1、当我们需要使用时可以“对象的引用名”从该内存里获取，例如useContext\n2、当希望更改某些变量时，可以通过特定的函数来修改该内存中变量的值，例如useState中的setXxxx()\n3、当某些函数依赖变量发生改变时，react可以重新生成、并修改该内存中对应的函数，例如useReducer、useCallback\n\n> 此处更新与2020年10月13日\n> 今天学习了一下 JS 原型链：每一个对象或者说由 function 创建的对象，他们都有一个属性 __proto__，该属性值为创建该对象的构造函数的原型对象，又称 隐式原型，而这一层的隐式原型也有 __proto__ 属性，即 __proto__.__proto__ 属性值为 Object.prototype，还可以继续再往下深入 __proto__.__proto__.__proto__为了避免死循环，最终到此，即 Object.prototype.__proto__ 为 null。作为构造函数对象，有属性 prototype，属性值为该函数的显示原型对象。constructor 则表示原型对象的构造函数本身。\n> \n> const arr = [1, 2, 3]\n> console.log(arr.__proto__ === Array.prototype) // true\n> console.log(arr.__proto__.__proto__ === Object.prototype) // true\n> console.log(Object.prototype.__proto__ === null) // true\n> \n> function MyFun() { this.name = 'puxiao' }\n> const myFun = new MyFun()\n> console.log(myFun.__proto__ === MyFun.prototype) // true\n> console.log(MyFun.__proto__ === Function.prototype) // true\n> console.log(myFun.__proto__.__proto__ === Object.prototype) // true\n> console.log(myFun.__proto__.__proto__.__proto__) // null\n> console.log(Object.prototype.__proto__) // null\n\n> 要想更加容易理解上面代码，就需要明白，所谓 object 是指 { }，而 Object 其实是 JS 内置的对象函数。同理 所谓 array 是指 []，而 Array 其实是 JS 内置的 数组函数\n\n> 正是 JS 中 __prototype__(隐式原型) prototype(显式原型) constructor(原型对象所在的构造函数本身) 这 3个概念，最终组合成了 庞大的 JS 功能。我们平时定义的任何 类、对象、函数 都出在这种 链条 中，以及对 这个链条中某个环节属性功能的扩展，这种组织形式就叫 JS 原型链。\n\n> JS 原型还有一个原则就是可以无限得去扩展自身属性，当前级别的原型扩展属性之后，下层级别的对象自动就拥有该属性。\n> \n> 那么我们可以大概推理出来，React就是巧妙利用了这种 JS 原型链的原则，将底层模块需要用到的处理函数提升到更高(或者说更加原始)的级别中。这样即使底层中发生了变化，但是他依然拥有高层中定义好的函数引用。\n\n请重点留意“修改”这个词，因为“修改”牵扯到react最为隐秘却极其重要的一层概念。\n“修改”有3种情况：\n1、用完全不一样的新值去替换之前的旧值 ——> 这会触发react重新渲染 ——> 例如{age:34}去替换{age:18}\n2、用和旧值看似一模一样的新值去替换之前的旧值 ——> 这依然会触发react重新渲染，因为react底层对新旧值做对比时使用的是 Object.is判断，字面上看似一模一样没有用，react依然会认为这是2个对象，依然会触发react重新渲染 ——> 例如{age:18}去替换{age:18}\n3、用旧值的引用去替换旧值 ——> 这次就不会触发重新渲染 ——> 例如let obj={age:18}; let obj2=obj，用obj2去替换obj\n\n为了提高react性能，就需要用旧值的引用去替换旧值，从而阻止本次无谓的渲染。\n\n问题的关键就在于“如何获取旧值的引用”？\n答：对于函数来说可以使用useCallback。\n\n在本章或以后的章节中，我依然会使用 react原型链 这个词，你都按照我刚才说的“react定义的一块内存”概念去理解就好了。\n\n懵圈了没？我已经尽量总结得让你容易理解了，如果你似懂非懂没有关系，本文后面会通过示例代码会让你明白如何使用。\n\n让我们先忘掉useCallback，先来学习一下以下2个知识点。\n\n# 第1个知识点：React.memo() 的用法\n\n首先我们知道，默认情况下如果父组件重新渲染，那么该父组件下的所有子组件都会随着父级的重新渲染而重新渲染。\n1、无论子组件是类组件或是函数组件。\n2、无论子组件在本次渲染过程中，子组件是否有任何相关的数据变化。\n\n举例，假设某父组件中有3个子组件：子组件A、子组件B、子组件C。若因为子组件A发生了某些操作，引发父组件重新渲染，这时即使子组件B和子组件C没有任何需要更改的地方，但是默认他们两个也会重新被渲染一次。\n\n为了减少这个不必要的重新渲染，如果是类组件，可以在组件shouldComponentUpdate(准备要开始更新前)生命周期函数中，通过比较props和state中前后两次的值，如果完全相等则跳过本次渲染，改为直接使用上一次渲染结果，以此提高性能提升。\n\n伪代码如下：\n\nshouldComponentUpdate(nextProps,nextStates){\n  //判断xxx值是否相同，如果相同则不进行重新渲染\n  return (nextProps.xxx !== this.props.xxx); //注意是 !== 而不是 !=\n}\n\n\n为了简化我们这一步操作，可以将类组件由默认继承自React.Component改为React.PureComponent。React.PureComponent默认会帮我们完成上面的浅层对比，以跳过本次重新渲染。\n\n请注意：React.PureComponent会对props上所有可枚举属性做一遍浅层对比。而不像 shouldComponentUpdate中可以有针对性的只对某属性做对比。\n\n上面讲的都是类组件，与之对应的是React.memo()，这个是针对函数组件的，作用和React.PureComponent完全相同。\n\nReact.memo()的使用方法很简单，就是把要导出的函数组件包裹在React.memo中即可。\n\n伪代码如下：\n\nimport React from 'react'\nfunction Xxxx() {\n  return <div>xx</div>;\n}\nexport default React.memo(Xxxx); //使用React.memo包裹住要导出的函数组件\n\n\n请记住以下2点：\n1、React.memo()只会帮我们做浅层对比，例如props.name='puxiao'或props.list=[1,2,3]，如果是props中包含复杂的数据结构，例如props.obj.list=[{age:34}]，那么有可能达不到你的预期，因为不会做到深层次对比。\n2、使用React.memo仅仅是让该函数组件具备了可以跳过本次渲染的基础，若组件在使用的时候属性值中有某些处理函数，那么还需要配合useCallback才可以做到跳过本次重新渲染。\n\n呵，话题又回到useCallback上面了。\n\n# 第2个知识点：=== 等比运算\n\n在原生JS中，你认为\n1、{}==={} 为true还是false？\n2、{a:2}==={a:2} 为true还是false？\n\n这是一道很简单却很容易迷惑人的题目，若你对原生JS中 === 等比运算不够深入了解，你很容易会认为结果是true。\n\n如果你轻松回答出来：以上均为false，那么恭喜你是个明白人。\n如果你疑惑了一下或者你的答案是true，那么你可以自己去JS里测试一下看结果是什么。\n\n答案是2者均是false。\n\n以{}==={}为例，虽然从字面上 === 左右两侧完全相同的，但是实际上在JS中 左右两侧分别为独立的{}对象，各自占有各自的内存空间，因此他们对比的结果是false。\n\n相反，看下面的代码：\n\nlet obj = {};\nlet obj2 = obj;\nobj2.name='react';\nconsole.log(obj===obj2); //true\n\n\n上面输出结果为true，为何obj===obj2为true？ 因为 obj和obj2都是对同一个对象的引用，所以对比结果为true，因为他们最终指向同一个对象。\n\n还记得本文开头对于useCallback概念解释中的那段文字吗？useCallback的作用是“勾住”组件属性中某些处理函数，创建这些函数对应在react原型链上的变量引用。\n\n呵，话题又回到useCallback上面了。\n\n划重点：记住“useCallback”和“原型链上处理函数的引用”这两个关键词，基本上你就对useCallback的原理理解一大半了。\n\n让我们回到useCallback基础学习中。\n\n\n# useCallback是来解决什么问题的？\n\n答：useCallback是通过获取函数在react原型链上的引用，当即将重新渲染时，用旧值的引用去替换旧值，配合React.memo，达到“阻止组件不必要的重新渲染”。\n\n详细解释：\nuseCallback可以将组件的某些处理函数挂载到react底层原型链上，并返回该处理函数的引用，当组件每次即将要重新渲染时，确保props中该处理函数为同一函数(因为是同一对象引用，所以===运算结果一定为true)，跳过本次无意义的重新渲染，达到提高组件性能的目的。当然前提是该组件在导出时使用了React.memo()。\n\n补充说明：\n假设某组件使用到了myfun这个处理函数，回忆一下前面提到的JS中===运算规则，考虑一下。\n\n默认不使用useCallback，其实组件执行了以下伪代码：\n\nlet obj = {}; //上一次渲染时创建的props\nobj.myfun={xxx}; //props中的myfun属性值，实为独立创建的{xxx}\n\nlet obj2 = {}; //本次渲染时创建的props\nobj2.myfun={xxx}; //props中的myfun属性值，实为独立创建的{xxx}\n\nif(obj.myfun === obj2.myfun){\n  //跳过本次重新渲染，改为使用上一次渲染结果即可\n}\n\n\n由于obj.myfun 和 obj2.myfun 为分别独立创建的函数{xxx}，所以对比结果为false，也就意味着无法跳过本次重新渲染，尽管函数{xxx}字面相同。\n\n相反，如果使用useCallback，其实组件执行了以下伪代码：\n\nlet myfun = {xxx}; //独立定义处理函数myfun\n\nlet obj = {}; //上一次渲染时创建的props\nobj.myfun = myfun; //props中的myfun属性值，实为myfun的引用\n\nlet obj2 = {}; //本次渲染时创建的props\nobj2.myfun = myfun; //props中的myfun属性值，实为myfun的引用\n\nif(obj.myfun === obj2.myfun){\n  //跳过本次重新渲染，改为使用上一次渲染结果即可\n}\n\n\n此时 obj.myfun 和 obj2.myfun 均为myfun的引用，因此该对比结果为true，也就意味着可以顺利跳过本次渲染，达到提高组件性能的目的。\n\n以上是代码仅仅是为了示意默认子组件为什么会被迫重新渲染，以及useCallback作用机理。\n\n只有理解了这个机理，才会明白何时使用useCallback。 切记不要滥用useCallback。\n\n多说一句：你是否觉得React Hook 很绕？ 对，这就是Hook学习起来难度大的一些原因，但当你充分理解React的编程哲学思想后，用起来会如鱼得水。加油！\n\n\n# useCallback函数源码：\n\n回到useCallback的学习中，首先看一下React源码中的ReactHooks.js。\n\n    //备注：源码采用TypeScript编写，如果不懂TS代码，阅读起来稍显困难\n    export function useCallback<T>(\n      callback: T,\n      deps: Array<mixed> | void | null,\n    ): T {\n      const dispatcher = resolveDispatcher();\n      return dispatcher.useCallback(callback, deps);\n    }\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用Hook”，并不是“Hook源码分析”。^_^\n不过请注意第2个参数，deps为该函数依赖的数据变量，值为Array<mixed> 或 void 或 null。 意味着如果该函数没有依赖的情况下，可以传入空数组[]或void或null。个人建议是传入空数组。\n\n补充一点TypeScript知识(因为我最近刚学了TypeScript)：\n像 <T>(callback:T):T 这种类型定义称为“泛型”，里面 T 的含义为“一模一样的同类型”。\n举例：\n1、若T为function，即参数callback类型为function，那么函数返回值也为function。\n2、若T为object，即参数callback类型为object，那么函数返回值也为object。\n\n\n# useCallback基本用法\n\nuseCallback(callback,deps)函数通常传入2个参数，第1个参数为我们定义的一个“处理函数”，通常为一个箭头函数。第2个参数为该处理函数中存在的依赖变量，请注意凡是处理函数中有的数据变量都需要放入deps中。如果处理函数没有任何依赖变量，可以传入一个空数组[]。\n\n特别强调一下：useCallback中的第2个依赖变量数组和useEffect中第2个依赖变量数组，作用完全不相同。\nuseEffect中第2个依赖变量数组是真正起作用的，是具有关键性质的。而useCallback中第2个依赖变量数组目前作用来说仅仅是起到一个辅助作用。\n\n仅仅是辅助？辅助什么了？甚至你还可能会有一个疑问，既然处理函数中所有的依赖变量都需要做为第2个参数的内容，为啥React不智能一些，让我们不传第2个参数，省略掉这一步？\n\n在React官方文档中，针对第2个参数有以下这段话：\n\n> 注意：依赖项数组不会作为参数传给回调函数。虽然从概念上来说它表现为：所有回调函数中引用的值都应该出现在依赖项数组中。未来编译器会更加智能，届时自动创建数组将成为可能。\n\n自己体会吧，你品，你细品。\n\n# 代码形式：\n\nimport Button from './button'; //引入我们自定义的一个组件<Button>\n\n//组件内部声明一个age变量\nconst [age,setAge] = useState(34);\n\n//通过useCallback，将鼠标点击处理函数保存到React底层原型链中，并获取该函数的引用，将引用赋值给clickHandler\nconst clickHandler = useCallback(() => {\n    setAge(age+1);\n  },[age]);\n//由于该处理函数中使用到了age这个变量，因此useCallback的第2个参数中，需要将age添加进去\n\n//使用该处理函数，实为使用该处理函数的在React底层原型链上的引用\nreturn <Button clickHandler={clickHandler}></Button>\n\n\n# 拆解说明：\n\n1、具体讲解已在上面示例代码中做了多项注释，此处不再重复；\n\n# 'age'补充说明\n\n1、上述代码示例中，age为该组件通过useState创建的内部变量，事实上也可以是父组件通过属性传值的props.xx中的变量。\n2、只要依赖变量不发生变化，那么重新渲染时就可以一直使用之前创建的那个函数，达到阻止本次渲染，提升性能的目的。但是如果依赖变量发生变化，那么下次重新渲染时根据变量重新创建一份处理函数并替换React底层原型链上原有的处理函数。\n\n# 'clickHandler'补充说明\n\n再次强调，clickHandler实际上是真正的处理函数在React底层原型链上的引用。\n\n# '<Button>'补充说明\n\n<Button\\>为我们自定义的一个组件，在上述代码中相当于“子组件”。\n\n上面的示例伪代码仅仅是为了演示useCallback的使用方法，实际组件运用中，如果父组件中只有1个子组件，那其实完全没有必要使用useCallback。只有父组件同时有多个子组件时，才有必要去做性能优化，防止某一个子组件引发的重新渲染也导致其他子组件跟着重新渲染。\n\n\n# useCallback使用示例：\n\n若我们有一个自定组件<Button>，代码如下：\n\nimport React from 'react'\nfunction Button({label,clickHandler}) {\n    //为了方便我们查看该子组件是否被重新渲染，这里增加一行console.log代码\n    console.log(`rendering ... ${label}`);\n    return <button onClick={clickHandler}>{label}</button>;\n}\nexport default React.memo(Button); //使用React.memo()包裹住要导出的组件\n\n\n现在，我们要实现一个组件，功能如下：\n1、组件内部有2个变量age，salary\n2、有2个自定义组件Button，点击之后分别可以修改age，salary值\n\n若我们不使用useCallback，代码示例如下：\n\nimport React,{useState,useCallback,useEffect} from 'react';\nimport Button from './button';\n\nfunction Mybutton() {\n  const [age,setAge] = useState(34);\n  const [salary,setSalary] = useState(7000);\n\n  useEffect(() => {\n    document.title = `Hooks - ${Math.floor(Math.random()*100)}`;\n  });\n\n  const clickHandler01 = () => {\n    setAge(age+1);\n  };\n\n  const clickHandler02 = () => {\n    setSalary(salary+1);\n  };\n\n  return (\n    <div>\n        {age} - {salary}\n        <Button label='Bt01' clickHandler={clickHandler01}></Button>\n        <Button label='Bt02' clickHandler={clickHandler02}></Button>\n    </div>\n  )\n}\n\n\n实际运行中你会发现，无论点击哪个按钮，都会收到：\nrendering ... Bt01\nrendering ... Bt02\n\n你只是点击操作了其中一个按钮，另外一个按钮也要跟着重新渲染一次，试想一下如果该组件中有100个子组件都要跟着重新渲染，那真的是性能浪费。\n\n我们再看一下如果使用useCallback，代码示例如下：\n\nimport React,{useState,useCallback,useEffect} from 'react';\nimport Button from './button';\n\nfunction Mybutton() {\n  const [age,setAge] = useState(34);\n  const [salary,setSalary] = useState(7000);\n\n  useEffect(() => {\n    document.title = `Hooks - ${Math.floor(Math.random()*100)}`;\n  });\n\n  //使用useCallback()包裹住原来的处理函数\n  const clickHandler01 = useCallback(() => {\n    setAge(age+1);\n  },[age]);\n\n  //使用useCallback()包裹住原来的处理函数\n  const clickHandler02 = useCallback(() => {\n    setSalary(salary+1);\n  },[salary]);\n\n  return (\n    <div>\n        {age} - {salary}\n        <Button label='Bt01' clickHandler={clickHandler01}></Button>\n        <Button label='Bt02' clickHandler={clickHandler02}></Button>\n    </div>\n  )\n}\n\n\n修改后的代码，实际运行就会发现，当点击某个按钮时，仅仅是当前按钮重新做了一次渲染，另外一个按钮则没有重新渲染，而是直接使用上一次渲染结果。\n\n使用useCallback减少子组件没有必要的渲染目的达成。\n\nuseCallback用法很简单，就是包裹住原本的处理函数。关键点在于你要理解useCallback背后的机理，才能知道在什么情况下可以使用useCallback。否则很容易滥用 useCallback，反而造成性能的浪费。\n\n\n# 思考题\n\n假设上面示例代码中，做以下修改：每个按钮上新增一个属性：random={Math.floor(Math.random()*100)}\n\n<Button label='Bt01' clickHandler={clickHandler01}></Button>\n<Button label='Bt02' clickHandler={clickHandler02}></Button>\n修改为\n<Button label='Bt01' clickHandler={clickHandler01} random={Math.floor(Math.random()*100)}></Button>\n<Button label='Bt02' clickHandler={clickHandler02} random={Math.floor(Math.random()*100)}></Button>\n\n\n那么请问，此时我们针对性能优化而使用的useCallback还有意义吗？\n\n答：没有任何意义，虽然我们使用useCallback保证了每次clickHandler是相同的，可是 random 的值每次却是随机不一样的，尽管子组件<Button>并没有使用到 random 这个值，但是它的加入造成了 props 每次都不一样(其实是 props.random 不一样)，结果就是子组件每一次都会被重新渲染。所以此时useCallback已经失去了存在的意义。\n\n----------------------------------------\n\n至此，关于useCallback基础用法已经讲完，没有高级用法，直接进入下一个Hook。",normalizedContent:"# 10 usecallback基础用法\n\n\n# usecallback概念解释\n\n我们第五个要学习的hook(钩子函数)是usecallback，他的作用是“勾住”组件属性中某些处理函数，创建这些函数对应在react原型链上的变量引用。usecallback第2个参数是处理函数中的依赖变量，只有当依赖变量发生改变时才会重新修改并创建新的一份处理函数。\n\n# react原型链？\n\n我对react原型链也不太懂，你可以简单得把 react原型链 理解成 “react定义的一块内存”。我们使用某些 hook 定义的“变量或函数”都存放在这块内存里。这块内存里保存的变量或函数，并不会因为组件重新渲染而消失。\n1、当我们需要使用时可以“对象的引用名”从该内存里获取，例如usecontext\n2、当希望更改某些变量时，可以通过特定的函数来修改该内存中变量的值，例如usestate中的setxxxx()\n3、当某些函数依赖变量发生改变时，react可以重新生成、并修改该内存中对应的函数，例如usereducer、usecallback\n\n> 此处更新与2020年10月13日\n> 今天学习了一下 js 原型链：每一个对象或者说由 function 创建的对象，他们都有一个属性 __proto__，该属性值为创建该对象的构造函数的原型对象，又称 隐式原型，而这一层的隐式原型也有 __proto__ 属性，即 __proto__.__proto__ 属性值为 object.prototype，还可以继续再往下深入 __proto__.__proto__.__proto__为了避免死循环，最终到此，即 object.prototype.__proto__ 为 null。作为构造函数对象，有属性 prototype，属性值为该函数的显示原型对象。constructor 则表示原型对象的构造函数本身。\n> \n> const arr = [1, 2, 3]\n> console.log(arr.__proto__ === array.prototype) // true\n> console.log(arr.__proto__.__proto__ === object.prototype) // true\n> console.log(object.prototype.__proto__ === null) // true\n> \n> function myfun() { this.name = 'puxiao' }\n> const myfun = new myfun()\n> console.log(myfun.__proto__ === myfun.prototype) // true\n> console.log(myfun.__proto__ === function.prototype) // true\n> console.log(myfun.__proto__.__proto__ === object.prototype) // true\n> console.log(myfun.__proto__.__proto__.__proto__) // null\n> console.log(object.prototype.__proto__) // null\n\n> 要想更加容易理解上面代码，就需要明白，所谓 object 是指 { }，而 object 其实是 js 内置的对象函数。同理 所谓 array 是指 []，而 array 其实是 js 内置的 数组函数\n\n> 正是 js 中 __prototype__(隐式原型) prototype(显式原型) constructor(原型对象所在的构造函数本身) 这 3个概念，最终组合成了 庞大的 js 功能。我们平时定义的任何 类、对象、函数 都出在这种 链条 中，以及对 这个链条中某个环节属性功能的扩展，这种组织形式就叫 js 原型链。\n\n> js 原型还有一个原则就是可以无限得去扩展自身属性，当前级别的原型扩展属性之后，下层级别的对象自动就拥有该属性。\n> \n> 那么我们可以大概推理出来，react就是巧妙利用了这种 js 原型链的原则，将底层模块需要用到的处理函数提升到更高(或者说更加原始)的级别中。这样即使底层中发生了变化，但是他依然拥有高层中定义好的函数引用。\n\n请重点留意“修改”这个词，因为“修改”牵扯到react最为隐秘却极其重要的一层概念。\n“修改”有3种情况：\n1、用完全不一样的新值去替换之前的旧值 ——> 这会触发react重新渲染 ——> 例如{age:34}去替换{age:18}\n2、用和旧值看似一模一样的新值去替换之前的旧值 ——> 这依然会触发react重新渲染，因为react底层对新旧值做对比时使用的是 object.is判断，字面上看似一模一样没有用，react依然会认为这是2个对象，依然会触发react重新渲染 ——> 例如{age:18}去替换{age:18}\n3、用旧值的引用去替换旧值 ——> 这次就不会触发重新渲染 ——> 例如let obj={age:18}; let obj2=obj，用obj2去替换obj\n\n为了提高react性能，就需要用旧值的引用去替换旧值，从而阻止本次无谓的渲染。\n\n问题的关键就在于“如何获取旧值的引用”？\n答：对于函数来说可以使用usecallback。\n\n在本章或以后的章节中，我依然会使用 react原型链 这个词，你都按照我刚才说的“react定义的一块内存”概念去理解就好了。\n\n懵圈了没？我已经尽量总结得让你容易理解了，如果你似懂非懂没有关系，本文后面会通过示例代码会让你明白如何使用。\n\n让我们先忘掉usecallback，先来学习一下以下2个知识点。\n\n# 第1个知识点：react.memo() 的用法\n\n首先我们知道，默认情况下如果父组件重新渲染，那么该父组件下的所有子组件都会随着父级的重新渲染而重新渲染。\n1、无论子组件是类组件或是函数组件。\n2、无论子组件在本次渲染过程中，子组件是否有任何相关的数据变化。\n\n举例，假设某父组件中有3个子组件：子组件a、子组件b、子组件c。若因为子组件a发生了某些操作，引发父组件重新渲染，这时即使子组件b和子组件c没有任何需要更改的地方，但是默认他们两个也会重新被渲染一次。\n\n为了减少这个不必要的重新渲染，如果是类组件，可以在组件shouldcomponentupdate(准备要开始更新前)生命周期函数中，通过比较props和state中前后两次的值，如果完全相等则跳过本次渲染，改为直接使用上一次渲染结果，以此提高性能提升。\n\n伪代码如下：\n\nshouldcomponentupdate(nextprops,nextstates){\n  //判断xxx值是否相同，如果相同则不进行重新渲染\n  return (nextprops.xxx !== this.props.xxx); //注意是 !== 而不是 !=\n}\n\n\n为了简化我们这一步操作，可以将类组件由默认继承自react.component改为react.purecomponent。react.purecomponent默认会帮我们完成上面的浅层对比，以跳过本次重新渲染。\n\n请注意：react.purecomponent会对props上所有可枚举属性做一遍浅层对比。而不像 shouldcomponentupdate中可以有针对性的只对某属性做对比。\n\n上面讲的都是类组件，与之对应的是react.memo()，这个是针对函数组件的，作用和react.purecomponent完全相同。\n\nreact.memo()的使用方法很简单，就是把要导出的函数组件包裹在react.memo中即可。\n\n伪代码如下：\n\nimport react from 'react'\nfunction xxxx() {\n  return <div>xx</div>;\n}\nexport default react.memo(xxxx); //使用react.memo包裹住要导出的函数组件\n\n\n请记住以下2点：\n1、react.memo()只会帮我们做浅层对比，例如props.name='puxiao'或props.list=[1,2,3]，如果是props中包含复杂的数据结构，例如props.obj.list=[{age:34}]，那么有可能达不到你的预期，因为不会做到深层次对比。\n2、使用react.memo仅仅是让该函数组件具备了可以跳过本次渲染的基础，若组件在使用的时候属性值中有某些处理函数，那么还需要配合usecallback才可以做到跳过本次重新渲染。\n\n呵，话题又回到usecallback上面了。\n\n# 第2个知识点：=== 等比运算\n\n在原生js中，你认为\n1、{}==={} 为true还是false？\n2、{a:2}==={a:2} 为true还是false？\n\n这是一道很简单却很容易迷惑人的题目，若你对原生js中 === 等比运算不够深入了解，你很容易会认为结果是true。\n\n如果你轻松回答出来：以上均为false，那么恭喜你是个明白人。\n如果你疑惑了一下或者你的答案是true，那么你可以自己去js里测试一下看结果是什么。\n\n答案是2者均是false。\n\n以{}==={}为例，虽然从字面上 === 左右两侧完全相同的，但是实际上在js中 左右两侧分别为独立的{}对象，各自占有各自的内存空间，因此他们对比的结果是false。\n\n相反，看下面的代码：\n\nlet obj = {};\nlet obj2 = obj;\nobj2.name='react';\nconsole.log(obj===obj2); //true\n\n\n上面输出结果为true，为何obj===obj2为true？ 因为 obj和obj2都是对同一个对象的引用，所以对比结果为true，因为他们最终指向同一个对象。\n\n还记得本文开头对于usecallback概念解释中的那段文字吗？usecallback的作用是“勾住”组件属性中某些处理函数，创建这些函数对应在react原型链上的变量引用。\n\n呵，话题又回到usecallback上面了。\n\n划重点：记住“usecallback”和“原型链上处理函数的引用”这两个关键词，基本上你就对usecallback的原理理解一大半了。\n\n让我们回到usecallback基础学习中。\n\n\n# usecallback是来解决什么问题的？\n\n答：usecallback是通过获取函数在react原型链上的引用，当即将重新渲染时，用旧值的引用去替换旧值，配合react.memo，达到“阻止组件不必要的重新渲染”。\n\n详细解释：\nusecallback可以将组件的某些处理函数挂载到react底层原型链上，并返回该处理函数的引用，当组件每次即将要重新渲染时，确保props中该处理函数为同一函数(因为是同一对象引用，所以===运算结果一定为true)，跳过本次无意义的重新渲染，达到提高组件性能的目的。当然前提是该组件在导出时使用了react.memo()。\n\n补充说明：\n假设某组件使用到了myfun这个处理函数，回忆一下前面提到的js中===运算规则，考虑一下。\n\n默认不使用usecallback，其实组件执行了以下伪代码：\n\nlet obj = {}; //上一次渲染时创建的props\nobj.myfun={xxx}; //props中的myfun属性值，实为独立创建的{xxx}\n\nlet obj2 = {}; //本次渲染时创建的props\nobj2.myfun={xxx}; //props中的myfun属性值，实为独立创建的{xxx}\n\nif(obj.myfun === obj2.myfun){\n  //跳过本次重新渲染，改为使用上一次渲染结果即可\n}\n\n\n由于obj.myfun 和 obj2.myfun 为分别独立创建的函数{xxx}，所以对比结果为false，也就意味着无法跳过本次重新渲染，尽管函数{xxx}字面相同。\n\n相反，如果使用usecallback，其实组件执行了以下伪代码：\n\nlet myfun = {xxx}; //独立定义处理函数myfun\n\nlet obj = {}; //上一次渲染时创建的props\nobj.myfun = myfun; //props中的myfun属性值，实为myfun的引用\n\nlet obj2 = {}; //本次渲染时创建的props\nobj2.myfun = myfun; //props中的myfun属性值，实为myfun的引用\n\nif(obj.myfun === obj2.myfun){\n  //跳过本次重新渲染，改为使用上一次渲染结果即可\n}\n\n\n此时 obj.myfun 和 obj2.myfun 均为myfun的引用，因此该对比结果为true，也就意味着可以顺利跳过本次渲染，达到提高组件性能的目的。\n\n以上是代码仅仅是为了示意默认子组件为什么会被迫重新渲染，以及usecallback作用机理。\n\n只有理解了这个机理，才会明白何时使用usecallback。 切记不要滥用usecallback。\n\n多说一句：你是否觉得react hook 很绕？ 对，这就是hook学习起来难度大的一些原因，但当你充分理解react的编程哲学思想后，用起来会如鱼得水。加油！\n\n\n# usecallback函数源码：\n\n回到usecallback的学习中，首先看一下react源码中的reacthooks.js。\n\n    //备注：源码采用typescript编写，如果不懂ts代码，阅读起来稍显困难\n    export function usecallback<t>(\n      callback: t,\n      deps: array<mixed> | void | null,\n    ): t {\n      const dispatcher = resolvedispatcher();\n      return dispatcher.usecallback(callback, deps);\n    }\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用hook”，并不是“hook源码分析”。^_^\n不过请注意第2个参数，deps为该函数依赖的数据变量，值为array<mixed> 或 void 或 null。 意味着如果该函数没有依赖的情况下，可以传入空数组[]或void或null。个人建议是传入空数组。\n\n补充一点typescript知识(因为我最近刚学了typescript)：\n像 <t>(callback:t):t 这种类型定义称为“泛型”，里面 t 的含义为“一模一样的同类型”。\n举例：\n1、若t为function，即参数callback类型为function，那么函数返回值也为function。\n2、若t为object，即参数callback类型为object，那么函数返回值也为object。\n\n\n# usecallback基本用法\n\nusecallback(callback,deps)函数通常传入2个参数，第1个参数为我们定义的一个“处理函数”，通常为一个箭头函数。第2个参数为该处理函数中存在的依赖变量，请注意凡是处理函数中有的数据变量都需要放入deps中。如果处理函数没有任何依赖变量，可以传入一个空数组[]。\n\n特别强调一下：usecallback中的第2个依赖变量数组和useeffect中第2个依赖变量数组，作用完全不相同。\nuseeffect中第2个依赖变量数组是真正起作用的，是具有关键性质的。而usecallback中第2个依赖变量数组目前作用来说仅仅是起到一个辅助作用。\n\n仅仅是辅助？辅助什么了？甚至你还可能会有一个疑问，既然处理函数中所有的依赖变量都需要做为第2个参数的内容，为啥react不智能一些，让我们不传第2个参数，省略掉这一步？\n\n在react官方文档中，针对第2个参数有以下这段话：\n\n> 注意：依赖项数组不会作为参数传给回调函数。虽然从概念上来说它表现为：所有回调函数中引用的值都应该出现在依赖项数组中。未来编译器会更加智能，届时自动创建数组将成为可能。\n\n自己体会吧，你品，你细品。\n\n# 代码形式：\n\nimport button from './button'; //引入我们自定义的一个组件<button>\n\n//组件内部声明一个age变量\nconst [age,setage] = usestate(34);\n\n//通过usecallback，将鼠标点击处理函数保存到react底层原型链中，并获取该函数的引用，将引用赋值给clickhandler\nconst clickhandler = usecallback(() => {\n    setage(age+1);\n  },[age]);\n//由于该处理函数中使用到了age这个变量，因此usecallback的第2个参数中，需要将age添加进去\n\n//使用该处理函数，实为使用该处理函数的在react底层原型链上的引用\nreturn <button clickhandler={clickhandler}></button>\n\n\n# 拆解说明：\n\n1、具体讲解已在上面示例代码中做了多项注释，此处不再重复；\n\n# 'age'补充说明\n\n1、上述代码示例中，age为该组件通过usestate创建的内部变量，事实上也可以是父组件通过属性传值的props.xx中的变量。\n2、只要依赖变量不发生变化，那么重新渲染时就可以一直使用之前创建的那个函数，达到阻止本次渲染，提升性能的目的。但是如果依赖变量发生变化，那么下次重新渲染时根据变量重新创建一份处理函数并替换react底层原型链上原有的处理函数。\n\n# 'clickhandler'补充说明\n\n再次强调，clickhandler实际上是真正的处理函数在react底层原型链上的引用。\n\n# '<button>'补充说明\n\n<button\\>为我们自定义的一个组件，在上述代码中相当于“子组件”。\n\n上面的示例伪代码仅仅是为了演示usecallback的使用方法，实际组件运用中，如果父组件中只有1个子组件，那其实完全没有必要使用usecallback。只有父组件同时有多个子组件时，才有必要去做性能优化，防止某一个子组件引发的重新渲染也导致其他子组件跟着重新渲染。\n\n\n# usecallback使用示例：\n\n若我们有一个自定组件<button>，代码如下：\n\nimport react from 'react'\nfunction button({label,clickhandler}) {\n    //为了方便我们查看该子组件是否被重新渲染，这里增加一行console.log代码\n    console.log(`rendering ... ${label}`);\n    return <button onclick={clickhandler}>{label}</button>;\n}\nexport default react.memo(button); //使用react.memo()包裹住要导出的组件\n\n\n现在，我们要实现一个组件，功能如下：\n1、组件内部有2个变量age，salary\n2、有2个自定义组件button，点击之后分别可以修改age，salary值\n\n若我们不使用usecallback，代码示例如下：\n\nimport react,{usestate,usecallback,useeffect} from 'react';\nimport button from './button';\n\nfunction mybutton() {\n  const [age,setage] = usestate(34);\n  const [salary,setsalary] = usestate(7000);\n\n  useeffect(() => {\n    document.title = `hooks - ${math.floor(math.random()*100)}`;\n  });\n\n  const clickhandler01 = () => {\n    setage(age+1);\n  };\n\n  const clickhandler02 = () => {\n    setsalary(salary+1);\n  };\n\n  return (\n    <div>\n        {age} - {salary}\n        <button label='bt01' clickhandler={clickhandler01}></button>\n        <button label='bt02' clickhandler={clickhandler02}></button>\n    </div>\n  )\n}\n\n\n实际运行中你会发现，无论点击哪个按钮，都会收到：\nrendering ... bt01\nrendering ... bt02\n\n你只是点击操作了其中一个按钮，另外一个按钮也要跟着重新渲染一次，试想一下如果该组件中有100个子组件都要跟着重新渲染，那真的是性能浪费。\n\n我们再看一下如果使用usecallback，代码示例如下：\n\nimport react,{usestate,usecallback,useeffect} from 'react';\nimport button from './button';\n\nfunction mybutton() {\n  const [age,setage] = usestate(34);\n  const [salary,setsalary] = usestate(7000);\n\n  useeffect(() => {\n    document.title = `hooks - ${math.floor(math.random()*100)}`;\n  });\n\n  //使用usecallback()包裹住原来的处理函数\n  const clickhandler01 = usecallback(() => {\n    setage(age+1);\n  },[age]);\n\n  //使用usecallback()包裹住原来的处理函数\n  const clickhandler02 = usecallback(() => {\n    setsalary(salary+1);\n  },[salary]);\n\n  return (\n    <div>\n        {age} - {salary}\n        <button label='bt01' clickhandler={clickhandler01}></button>\n        <button label='bt02' clickhandler={clickhandler02}></button>\n    </div>\n  )\n}\n\n\n修改后的代码，实际运行就会发现，当点击某个按钮时，仅仅是当前按钮重新做了一次渲染，另外一个按钮则没有重新渲染，而是直接使用上一次渲染结果。\n\n使用usecallback减少子组件没有必要的渲染目的达成。\n\nusecallback用法很简单，就是包裹住原本的处理函数。关键点在于你要理解usecallback背后的机理，才能知道在什么情况下可以使用usecallback。否则很容易滥用 usecallback，反而造成性能的浪费。\n\n\n# 思考题\n\n假设上面示例代码中，做以下修改：每个按钮上新增一个属性：random={math.floor(math.random()*100)}\n\n<button label='bt01' clickhandler={clickhandler01}></button>\n<button label='bt02' clickhandler={clickhandler02}></button>\n修改为\n<button label='bt01' clickhandler={clickhandler01} random={math.floor(math.random()*100)}></button>\n<button label='bt02' clickhandler={clickhandler02} random={math.floor(math.random()*100)}></button>\n\n\n那么请问，此时我们针对性能优化而使用的usecallback还有意义吗？\n\n答：没有任何意义，虽然我们使用usecallback保证了每次clickhandler是相同的，可是 random 的值每次却是随机不一样的，尽管子组件<button>并没有使用到 random 这个值，但是它的加入造成了 props 每次都不一样(其实是 props.random 不一样)，结果就是子组件每一次都会被重新渲染。所以此时usecallback已经失去了存在的意义。\n\n----------------------------------------\n\n至此，关于usecallback基础用法已经讲完，没有高级用法，直接进入下一个hook。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"11 useMemo基础用法",frontmatter:{title:"11 useMemo基础用法",date:"2023-09-12T09:41:43.000Z",permalink:"/pages/8b008f/"},regularPath:"/03.react/11.useMemo%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95.html",relativePath:"03.react/11.useMemo基础用法.md",key:"v-748e7cb2",path:"/pages/8b008f/",headers:[{level:2,title:"useMemo概念解释",slug:"usememo概念解释",normalizedTitle:"usememo概念解释",charIndex:21},{level:2,title:"useMemo是来解决什么问题的？",slug:"usememo是来解决什么问题的",normalizedTitle:"usememo是来解决什么问题的？",charIndex:811},{level:2,title:"useMemo函数源码：",slug:"usememo函数源码",normalizedTitle:"usememo函数源码：",charIndex:1141},{level:2,title:"useMemo基本用法",slug:"usememo基本用法",normalizedTitle:"usememo基本用法",charIndex:1471},{level:5,title:"代码形式：",slug:"代码形式",normalizedTitle:"代码形式：",charIndex:1825},{level:5,title:"拆解说明：",slug:"拆解说明",normalizedTitle:"拆解说明：",charIndex:1937},{level:2,title:"useMemo使用示例：",slug:"usememo使用示例",normalizedTitle:"usememo使用示例：",charIndex:2059}],headersStr:"useMemo概念解释 useMemo是来解决什么问题的？ useMemo函数源码： useMemo基本用法 代码形式： 拆解说明： useMemo使用示例：",content:"# 11 useMemo基础用法\n\n\n# useMemo概念解释\n\n我们第六个要学习的Hook(钩子函数)是useMemo，他的作用是“勾住”组件中某些处理函数的返回值，创建这些返回值对应在react原型链上的索引。当组件重新渲染时，需要再次用到这些函数返回值，此时不再重新执行一遍运算，而是直接使用之前运算过的返回值。useMemo第2个参数是处理函数的变量依赖，只有当处理函数依赖的变量发生改变时才会重新计算并保存一次函数返回结果。\n\n假设你已经对React.memo，useCallback的运行机制充分了解，那么对你而言useMemo的用法非常好理解。\n\nuseCallback是将某个函数“放入到react底层原型链上，并返回该函数的索引”，而useMemo是将某个函数返回值“放入到react底层原型链上，并返回该返回值的索引”。一个是针对函数，一个是针对函数返回值。\n\n网上有些人的文章里，会提到：useCallback(fn, deps) 相当于 useMemo(() => fn, deps)。\n\n这句话似乎是没有问题，但是他隐藏或者说忽略了几个重要关键点：\n1、不是所有fn(函数)都适用的，必须是该函数有返回值，即函数有 return xx 才可以。\n2、虽然都是fn，但是函数体内代码内容却相差很大，useCallback中的fn主要用来处理各种操作事务的代码，例如修改某变量值或加载数据等。而useMemo中的fn主要用来处理各种计算事务的代码。\n3、useCallback和useMemo都是为了提升组件性能，但是他们两个的适用场景却不相同，不是谁是谁的替代品或谁是谁的简化版。\n\n再次强调一遍，useCallback中的函数是侧重“操作事务”，useMemo中的函数是侧重“计算结果”，永远不要在useMemo的函数中添加修改数据之类的代码。\n\n让我们回到useMemo基础学习中。\n\n\n# useMemo是来解决什么问题的？\n\n答：useMemo的目的是“减少组件重新渲染时不必要的函数计算”。\nuseMemo可以将某些函数的计算结果(返回值)挂载到react底层原型链上，并返回该函数返回值的索引。当组件重新渲染时，如果useMemo依赖的数据变量未发生变化，那么直接使用原型链上保存的该函数计算结果，跳过本次无意义的重新计算，达到提高组件性能的目的。\n\n补充说明：\n1、useMemo并不需要子组件必须使用React.memo。\n2、“不必要的函数计算”中的函数计算必须是有一定复杂度的，例如需要1000个for循环才能计算出的某个值。如果计算量本身很简单，例如1+2，那完全没有必要使用useMemo，就直接每次重新计算一遍也无所谓。\n\n\n# useMemo函数源码：\n\n回到useMemo的学习中，首先看一下React源码中的ReactHooks.js。\n\n//备注：源码采用TypeScript编写，如果不懂TS代码，阅读起来稍显困难\nexport function useMemo<T>(\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用Hook”，并不是“Hook源码分析”。^_^\n\n\n# useMemo基本用法\n\nuseMemo(create,deps)函数通常传入2个参数，第1个参数为我们定义的一个“包含复杂计算且有返回值的函数”，第2个参数为该处理函数中存在的依赖变量，请注意凡是处理函数中有的数据变量都需要放入deps中。如果处理函数没有任何依赖变量，可以传入一个空数组[]。\n\n请注意：\n1、useMemo只是理论上帮你进行组件计算性能优化，但是react并不能保证100%都是按照你的预期来执行的。比如说当你的网页处于离屏(休眠、挂起)等状态时，react底层原型链也许就会释放(删除)之前保存的函数返回值。等到下次网页重新被唤醒时，重新计算一次。\n2、关于useMemo第2个参数，和useCallback一样，也许在未来版本中react会智能识别，不需要要我们再手工传入。\n\n# 代码形式：\n\nconst xxxValue = useMemo(() => {\n    let result = xxxxx;\n    //经过复杂的计算后\n    return result;\n}, [xx]);\n\n\n# 拆解说明：\n\n1、使用useMemo()将计算函数包裹住，将计算函数中使用到的数据变量作为作为第2个参数。\n2、计算函数体内，把计算结果以 return 形式返回出去。\n3、xxxValue 为该函数返回值在react原型链上的引用。\n\n\n# useMemo使用示例：\n\n举例：若某React组件内部有2个number类型的变量num，random，有2个button，点击之后分别可以修改num，random的值。 与此同时，该组件中还要求显示出num范围内的所有质数个数总和。\n\n补充说明：加入random纯粹是为了引发组件重新渲染，方便我们查看到useMemo是否启了作用。\n\n需求分析：\n1、显示出num范围内的所有质数个数总和，这个就是本组件中的“复杂的计算”。\n2、只要num的值未发生变化，质数总数是固定的，那么我们应该避免每次重新渲染时都需要计算一遍。\n3、useMemo函数，就是帮我们解决这个问题。\n\n使用useMemo，代码示例如下：\n\nimport React,{useState,useMemo} from 'react'\n\nfunction UseMemo() {\n  const [num,setNum] = useState(2020);\n  const [random,setRandom] = useState(0);\n\n  //通过useMemo将函数内的计算结果(返回值)保存到react底层原型链上\n  //totalPrimes为react底层原型链上该函数计算结果的引用\n  const totalPrimes = useMemo(() => {\n    console.log('begin....'); //这里添加一个console.log，方便验证在重新渲染时是否重新执行了一遍计算\n\n    let total = 0; //声明质数总和对应的变量\n\n    //以下为计算num范围内所有质数个数总和的计算代码，不需要认真阅读，只需要知道这是一段“比较复杂的计算代码”即可\n    for(let i = 1; i<=num; i++){\n        let boo = true;\n        for(let j = 2; j<i; j++){\n            if(i % j === 0){\n                boo = false;\n                break;\n            }\n        }\n        if(boo && i!==1){\n            total ++;\n        }\n    }\n    //复杂的计算代码到此结束\n\n    return total;//将质数总和作为返回值return出去\n  }, [num]);\n\n  const clickHandler01 = () => {\n    setNum(num+1);\n  }\n\n  const clickHandler02 = () => {\n    setRandom(Math.floor(Math.random()*100)); //修改random的值导致整个组件重新渲染\n  }\n\n  return (\n    <div>\n        {num} - {totalPrimes} - {random}\n        <button onClick={clickHandler01}>num + 1</button>\n        <button onClick={clickHandler02}>random</button>\n    </div>\n  )\n}\n\nexport default UseMemo;\n\n\n实际运行就会发现：\n1、点击修改random的值会引发组件重新渲染，但是{totalPrimes}对应的计算函数却不需要重新计算一遍。\n2、点击修改num的值，{totalPrimes}对应的计算函数肯定会重新执行一遍，因为num是该计算函数的依赖。\n\n通过这个案例，相信你对useMemo的机制和用法一定有所掌握。\n\n----------------------------------------\n\n至此，关于useMemo基础用法已经讲完，没有高级用法，直接进入下一个Hook。",normalizedContent:"# 11 usememo基础用法\n\n\n# usememo概念解释\n\n我们第六个要学习的hook(钩子函数)是usememo，他的作用是“勾住”组件中某些处理函数的返回值，创建这些返回值对应在react原型链上的索引。当组件重新渲染时，需要再次用到这些函数返回值，此时不再重新执行一遍运算，而是直接使用之前运算过的返回值。usememo第2个参数是处理函数的变量依赖，只有当处理函数依赖的变量发生改变时才会重新计算并保存一次函数返回结果。\n\n假设你已经对react.memo，usecallback的运行机制充分了解，那么对你而言usememo的用法非常好理解。\n\nusecallback是将某个函数“放入到react底层原型链上，并返回该函数的索引”，而usememo是将某个函数返回值“放入到react底层原型链上，并返回该返回值的索引”。一个是针对函数，一个是针对函数返回值。\n\n网上有些人的文章里，会提到：usecallback(fn, deps) 相当于 usememo(() => fn, deps)。\n\n这句话似乎是没有问题，但是他隐藏或者说忽略了几个重要关键点：\n1、不是所有fn(函数)都适用的，必须是该函数有返回值，即函数有 return xx 才可以。\n2、虽然都是fn，但是函数体内代码内容却相差很大，usecallback中的fn主要用来处理各种操作事务的代码，例如修改某变量值或加载数据等。而usememo中的fn主要用来处理各种计算事务的代码。\n3、usecallback和usememo都是为了提升组件性能，但是他们两个的适用场景却不相同，不是谁是谁的替代品或谁是谁的简化版。\n\n再次强调一遍，usecallback中的函数是侧重“操作事务”，usememo中的函数是侧重“计算结果”，永远不要在usememo的函数中添加修改数据之类的代码。\n\n让我们回到usememo基础学习中。\n\n\n# usememo是来解决什么问题的？\n\n答：usememo的目的是“减少组件重新渲染时不必要的函数计算”。\nusememo可以将某些函数的计算结果(返回值)挂载到react底层原型链上，并返回该函数返回值的索引。当组件重新渲染时，如果usememo依赖的数据变量未发生变化，那么直接使用原型链上保存的该函数计算结果，跳过本次无意义的重新计算，达到提高组件性能的目的。\n\n补充说明：\n1、usememo并不需要子组件必须使用react.memo。\n2、“不必要的函数计算”中的函数计算必须是有一定复杂度的，例如需要1000个for循环才能计算出的某个值。如果计算量本身很简单，例如1+2，那完全没有必要使用usememo，就直接每次重新计算一遍也无所谓。\n\n\n# usememo函数源码：\n\n回到usememo的学习中，首先看一下react源码中的reacthooks.js。\n\n//备注：源码采用typescript编写，如果不懂ts代码，阅读起来稍显困难\nexport function usememo<t>(\n  create: () => t,\n  deps: array<mixed> | void | null,\n): t {\n  const dispatcher = resolvedispatcher();\n  return dispatcher.usememo(create, deps);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用hook”，并不是“hook源码分析”。^_^\n\n\n# usememo基本用法\n\nusememo(create,deps)函数通常传入2个参数，第1个参数为我们定义的一个“包含复杂计算且有返回值的函数”，第2个参数为该处理函数中存在的依赖变量，请注意凡是处理函数中有的数据变量都需要放入deps中。如果处理函数没有任何依赖变量，可以传入一个空数组[]。\n\n请注意：\n1、usememo只是理论上帮你进行组件计算性能优化，但是react并不能保证100%都是按照你的预期来执行的。比如说当你的网页处于离屏(休眠、挂起)等状态时，react底层原型链也许就会释放(删除)之前保存的函数返回值。等到下次网页重新被唤醒时，重新计算一次。\n2、关于usememo第2个参数，和usecallback一样，也许在未来版本中react会智能识别，不需要要我们再手工传入。\n\n# 代码形式：\n\nconst xxxvalue = usememo(() => {\n    let result = xxxxx;\n    //经过复杂的计算后\n    return result;\n}, [xx]);\n\n\n# 拆解说明：\n\n1、使用usememo()将计算函数包裹住，将计算函数中使用到的数据变量作为作为第2个参数。\n2、计算函数体内，把计算结果以 return 形式返回出去。\n3、xxxvalue 为该函数返回值在react原型链上的引用。\n\n\n# usememo使用示例：\n\n举例：若某react组件内部有2个number类型的变量num，random，有2个button，点击之后分别可以修改num，random的值。 与此同时，该组件中还要求显示出num范围内的所有质数个数总和。\n\n补充说明：加入random纯粹是为了引发组件重新渲染，方便我们查看到usememo是否启了作用。\n\n需求分析：\n1、显示出num范围内的所有质数个数总和，这个就是本组件中的“复杂的计算”。\n2、只要num的值未发生变化，质数总数是固定的，那么我们应该避免每次重新渲染时都需要计算一遍。\n3、usememo函数，就是帮我们解决这个问题。\n\n使用usememo，代码示例如下：\n\nimport react,{usestate,usememo} from 'react'\n\nfunction usememo() {\n  const [num,setnum] = usestate(2020);\n  const [random,setrandom] = usestate(0);\n\n  //通过usememo将函数内的计算结果(返回值)保存到react底层原型链上\n  //totalprimes为react底层原型链上该函数计算结果的引用\n  const totalprimes = usememo(() => {\n    console.log('begin....'); //这里添加一个console.log，方便验证在重新渲染时是否重新执行了一遍计算\n\n    let total = 0; //声明质数总和对应的变量\n\n    //以下为计算num范围内所有质数个数总和的计算代码，不需要认真阅读，只需要知道这是一段“比较复杂的计算代码”即可\n    for(let i = 1; i<=num; i++){\n        let boo = true;\n        for(let j = 2; j<i; j++){\n            if(i % j === 0){\n                boo = false;\n                break;\n            }\n        }\n        if(boo && i!==1){\n            total ++;\n        }\n    }\n    //复杂的计算代码到此结束\n\n    return total;//将质数总和作为返回值return出去\n  }, [num]);\n\n  const clickhandler01 = () => {\n    setnum(num+1);\n  }\n\n  const clickhandler02 = () => {\n    setrandom(math.floor(math.random()*100)); //修改random的值导致整个组件重新渲染\n  }\n\n  return (\n    <div>\n        {num} - {totalprimes} - {random}\n        <button onclick={clickhandler01}>num + 1</button>\n        <button onclick={clickhandler02}>random</button>\n    </div>\n  )\n}\n\nexport default usememo;\n\n\n实际运行就会发现：\n1、点击修改random的值会引发组件重新渲染，但是{totalprimes}对应的计算函数却不需要重新计算一遍。\n2、点击修改num的值，{totalprimes}对应的计算函数肯定会重新执行一遍，因为num是该计算函数的依赖。\n\n通过这个案例，相信你对usememo的机制和用法一定有所掌握。\n\n----------------------------------------\n\n至此，关于usememo基础用法已经讲完，没有高级用法，直接进入下一个hook。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"12 useRef基础用法",frontmatter:{title:"12 useRef基础用法",date:"2023-09-12T14:48:15.000Z",permalink:"/pages/4c9695/"},regularPath:"/03.react/12.useRef%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95.html",relativePath:"03.react/12.useRef基础用法.md",key:"v-0e390e5c",path:"/pages/4c9695/",headers:[{level:2,title:"useRef概念解释",slug:"useref概念解释",normalizedTitle:"useref概念解释",charIndex:20},{level:5,title:"“某些组件挂载完成或重新渲染完成后才拥有的某些对象”：",slug:"某些组件挂载完成或重新渲染完成后才拥有的某些对象",normalizedTitle:"“某些组件挂载完成或重新渲染完成后才拥有的某些对象”：",charIndex:234},{level:5,title:"“并返回该对象的引用”：",slug:"并返回该对象的引用",normalizedTitle:"“并返回该对象的引用”：",charIndex:1160},{level:5,title:"“该引用在组件整个生命周期中都固定不变”：",slug:"该引用在组件整个生命周期中都固定不变",normalizedTitle:"“该引用在组件整个生命周期中都固定不变”：",charIndex:1230},{level:2,title:"useRef是来解决什么问题的？",slug:"useref是来解决什么问题的",normalizedTitle:"useref是来解决什么问题的？",charIndex:1439},{level:2,title:"注意注意",slug:"注意注意",normalizedTitle:"注意注意",charIndex:1799},{level:2,title:"特别注意：修改 .current 的值并不会触发组件重新渲染",slug:"特别注意-修改-current-的值并不会触发组件重新渲染",normalizedTitle:"特别注意：修改 .current 的值并不会触发组件重新渲染",charIndex:1896},{level:2,title:"useRef函数源码：",slug:"useref函数源码",normalizedTitle:"useref函数源码：",charIndex:2558},{level:2,title:"useRef基本用法",slug:"useref基本用法",normalizedTitle:"useref基本用法",charIndex:2856},{level:5,title:"代码形式：",slug:"代码形式",normalizedTitle:"代码形式：",charIndex:3688},{level:5,title:"拆解说明：",slug:"拆解说明",normalizedTitle:"拆解说明：",charIndex:3925},{level:4,title:"'ref'补充说明",slug:"ref-补充说明",normalizedTitle:"'ref'补充说明",charIndex:3965},{level:4,title:"''补充说明",slug:"xxx-补充说明",normalizedTitle:"''补充说明",charIndex:null},{level:4,title:"'xxxRef.current'补充说明",slug:"xxxref-current-补充说明",normalizedTitle:"'xxxref.current'补充说明",charIndex:4162},{level:2,title:"useRef使用示例1：",slug:"useref使用示例1",normalizedTitle:"useref使用示例1：",charIndex:4230},{level:2,title:"useRef使用示例2：",slug:"useref使用示例2",normalizedTitle:"useref使用示例2：",charIndex:4913},{level:2,title:"useRef使用示例3：父组件调用子组件中的函数",slug:"useref使用示例3-父组件调用子组件中的函数",normalizedTitle:"useref使用示例3：父组件调用子组件中的函数",charIndex:7133},{level:4,title:"在 TypeScript 中使用 useRef 创建计时器注意事项：",slug:"在-typescript-中使用-useref-创建计时器注意事项",normalizedTitle:"在 typescript 中使用 useref 创建计时器注意事项：",charIndex:8754},{level:4,title:"在 TypeScript 中给 useRef.current 赋值的注意事项",slug:"在-typescript-中给-useref-current-赋值的注意事项",normalizedTitle:"在 typescript 中给 useref.current 赋值的注意事项",charIndex:9859},{level:2,title:"那如何“勾住”自定义组件中的“小写开头的类似原生标签的组件”？",slug:"那如何-勾住-自定义组件中的-小写开头的类似原生标签的组件",normalizedTitle:"那如何“勾住”自定义组件中的“小写开头的类似原生标签的组件”？",charIndex:10933},{level:5,title:"你是否思考过这个问题：自定义组件到底是什么？",slug:"你是否思考过这个问题-自定义组件到底是什么",normalizedTitle:"你是否思考过这个问题：自定义组件到底是什么？",charIndex:10993},{level:5,title:"React.forwardRef() 的具体用法",slug:"react-forwardref-的具体用法",normalizedTitle:"react.forwardref() 的具体用法",charIndex:12085}],headersStr:"useRef概念解释 “某些组件挂载完成或重新渲染完成后才拥有的某些对象”： “并返回该对象的引用”： “该引用在组件整个生命周期中都固定不变”： useRef是来解决什么问题的？ 注意注意 特别注意：修改 .current 的值并不会触发组件重新渲染 useRef函数源码： useRef基本用法 代码形式： 拆解说明： 'ref'补充说明 ''补充说明 'xxxRef.current'补充说明 useRef使用示例1： useRef使用示例2： useRef使用示例3：父组件调用子组件中的函数 在 TypeScript 中使用 useRef 创建计时器注意事项： 在 TypeScript 中给 useRef.current 赋值的注意事项 那如何“勾住”自定义组件中的“小写开头的类似原生标签的组件”？ 你是否思考过这个问题：自定义组件到底是什么？ React.forwardRef() 的具体用法",content:"# 12 useRef基础用法\n\n\n# useRef概念解释\n\n我们第七个要学习的Hook(钩子函数)是useRef，他的作用是“勾住”某些组件挂载完成或重新渲染完成后才拥有的某些对象，并返回该对象的引用。该引用在组件整个生命周期中都固定不变，该引用并不会随着组件重新渲染而失效。\n\n上面这段话，就算你认真读几遍，估计也是一头雾水，到底说的是啥？\n我也实在想不出其他更加通俗的语言来描述useRef，不过经过下面的详细分解描述，相信能帮到你来理解useRef。\n\n# “某些组件挂载完成或重新渲染完成后才拥有的某些对象”：\n\n这句话中的“某些对象”主要分为3种：JSX组件转换后对应的真实DOM对象、在useEffect中创建的变量、子组件内自定义的函数(方法)。\n\n第1：JSX组件转换后对应的真实DOM对象：\n举例：假设在JSX中，有一个输入框<input type='text' />，这个标签最终将编译转换成真正的html标签中的<input type='text'/>。\n你应该知道以下几点：\n1、JSX中小写开头的组件看似和原生html标签相似，但是并不是真的原生标签，依然是react内置组件。\n2、什么时候转换？ 虚拟DOM转化为真实DOM\n3、什么时候可访问？组件挂载完成或重新渲染完成后\n\n对于上面举例中的那个转换后的<input/> 真实DOM，只有组件挂载完成或重新渲染完成后才可以访问，它就就属于“某些组件挂载完成或重新渲染完成后才拥有的某些对象”。\n\n特别强调：useRef只适合“勾住”小写开头的类似原生标签的组件。如果是自定义的react组件(自定义的组件必须大写字母开头)，那么是无法使用useRef的。\n\n思考：如何获取这个 <input/> 真实DOM呢？\n答：用useRef。\n\n第2：在useEffect中创建的变量：\n举例，请看以下代码：\n\nuseEffect(() => {\n    let timer = setInterval(() => {\n        setCount(prevData => prevData +1);\n    }, 1000);\n    return () => {\n        clearInterval(timer);\n    }\n},[]);\n\n\n上述代码中，请注意这个timer是在useEffect中才定义的。\n\n思考：useEffect 以外的地方，该如何获取这个 timer 的引用？\n答：用useRef\n\n第3：子组件内自定义的函数(方法)\n由于需要结合useImperativeHandle才可以实现，而useImperativeHandle目前还未学习，所以本章中不讨论这个怎么实现。\n本章只讲前2中应用场景。\n\n# “并返回该对象的引用”：\n\n上面的前2种情况，都提到用useRef来获取对象的引用。具体如何获取，稍后在useRef用法中会有演示。\n\n# “该引用在组件整个生命周期中都固定不变”：\n\n假设通过useRef获得了该对象的引用，那么当react组件重新渲染后，如何保证该引用不丢失？\n答：react在底层帮我们做了这个工作，我们只需要相信之前的引用可以继续找到目标对象即可。\n\n请注意：React.createRef()也有useRef相似效果，但是React.createRef无法全部适用上面提到的3种情况。\n\n让我们回到useRef基础学习中。\n\n\n# useRef是来解决什么问题的？\n\n答：useRef可以“获取某些组件挂载完成或重新渲染完成后才拥有的某些对象”的引用，且保证该引用在组件整个生命周期内固定不变，都能准确找到我们要找的对象。\n具体已经在useRef中做了详细阐述，这里不再重复。\n\n补充说明：\n1、useRef是针对函数组件的，如果是类组件则使用React.createRef()。\n2、React.createRef()也可以在函数组件中使用。\n只不过React.createRef创建的引用不能保证每次重新渲染后引用固定不变。如果你只是使用React.createRef“勾住”JSX组件转换后对应的真实DOM对象是没问题的，但是如果想“勾住”在useEffect中创建的变量，那是做不到的。\n\n2者都想可以“勾住”，只能使用useRef。\n\n\n# 注意注意\n\n在后面useImperativeHandle的学习中，你会知道useRef还可以 “勾住并调用” 子组件内定义的函数(方法)。\n\n\n> 以下内容更新于 2022.04.06\n\n\n# 特别注意：修改 .current 的值并不会触发组件重新渲染\n\n在本文开头介绍 useRef 时用了这句话 “useRef 是“勾住”某些组件挂载完成或重新渲染完成后才拥有的某些对象，并返回该对象的引用。”\n\n也就是说 先有了 组件渲染，之后才更新了 useRef 中 .current 的值。\n\n> 也就是说 useRef 变量的 current 的值实际上是 组件渲染 后的一个副产品。\n\n这句话暗含了另外一层含义：主动更新 useRef 变量的 .current 的值并不会触发组件重新渲染。\n\n例如下面这个示例：\n\nimport { useRef } from \"react\";\n\nexport default function MyButton() {\n  const countRef = useRef(0)\n\n  const handleClick = () => {\n    countRef.current = countRef.current + 1\n  };\n\n  return <button onClick={handleClick}>Click me {countRef.current}</button>;\n}\n\n\n实际运行就会发现，在点击事件中我们修改了 countRef.current 的值，尽管该值确实发生了变化，可是并不会触发组件的重新渲染。\n\n> 使用 useState() 产生的变量值发生变化后，是会触发组件重新渲染的。\n\n\n> 以上内容更新于 2022.04.06\n\n\n\n# useRef函数源码：\n\n回到useRef的学习中，首先看一下React源码中的ReactHooks.js。\n\n//备注：源码采用TypeScript编写，如果不懂TS代码，阅读起来稍显困难\nexport function useRef<T>(initialValue: T): {|current: T|} {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用Hook”，并不是“Hook源码分析”。^_^\n\n\n# useRef基本用法\n\nuseRef(initialValue)函数只有1个可选参数，该参数为默认“勾住”的对象。绝大多数实际的情况是，默认“勾住”的对象在JSX未编译前(组件挂载或重新渲染后)根本不存在，所以更多时候都会传一个 null 作为默认值。如果不传任何参数，那么react默认将参数设置为undefined。\n\n就目前本人所理解的，日常使用过程中useRef(null)和useRef() 实际上是没有什么区别的。\n\n----------------------------------------\n\n以下更新于 2020.12.10\n\n补充一下 React + TypeScript 知识点：\n\nuseRef(null) 和 useRef() 在 React + TypeScript 项目中还是有差别的。\n\n假设我们要勾住一个 <canvas /> DOM元素，那么：\n\nconst canvasRef1 = useRef<HTMLCanvasElement>(null)\nconst canvasRef2 = useRef<HTMLCanvasElement>()\n\n\n上面代码中：\n\n 1. canvasRef1.current 的类型为：HTMLCanvasElement | null\n 2. canvasRef2.current 的类型为：HTMLCanvasElement | null | undefined\n\n以上更新于 2020.12.10\n\n----------------------------------------\n\n第2遍强调：本文提到的组件，默认都是指小写开头的类似原生标签的组件，不可以是自定义组件。\n\n接下来具体说说useRef关联对象的2种用法：\n1、针对 JSX组件，通过属性 ref={xxxRef} 进行关联。\n2、针对 useEffect中的变量，通过 xxxRef.current 进行关联。\n\n# 代码形式：\n\n//先定义一个xxRef引用变量，用于“勾住”某些组件挂载完成或重新渲染完成后才拥有的某些对象\nconst xxRef = useRef(null);\n\n//针对 JSX组件，通过属性 ref={xxxRef} 进行关联\n<xxx ref={xxRef} />\n\n//针对 useEffect中的变量，通过 xxxRef.current 进行关联\nuseEffect(() => {\n   xxRef.current = xxxxxx;\n},[]);\n\n\n# 拆解说明：\n\n1、具体讲解已在上面示例代码中做了多项注释，此处不再重复；\n\n# 'ref'补充说明\n\n1、组件的 ref 为特殊属性名，他并不存在组件属性传值的 props 中。\n2、如果给一个组件设定了 ref 属性名，但是对应的值却不是由 useRef 创建的，那么实际运行中会收到react的报错，无法正常渲染。\n\n# '<xxx>'补充说明\n\n1、useRef只能针对react中小写开头的类似原生标签的组件，所以这里用的是 <xxx> 而不是 <Xxx>。\n\n# 'xxxRef.current'补充说明\n\n1、当需要使用“勾住”的对象时，也是通过xxRef.current来获取该对象的。\n\n\n# useRef使用示例1：\n\n若我们有一个组件，该组件只有一个输入框，我们希望当该组件挂载到网页后，自动获得输入焦点。\n\n需求分析：\n1、我们可以很轻松使用<input >创建出这个输入框。\n2、需要使用useRef “勾住”这个输入框，当它被挂载到网页后，通过操作原生html的方法，将焦点赋予该输入框上。\n\n完整代码如下：\n\nimport React,{useEffect,useRef} from 'react'\n\nfunction Component() {\n  //先定义一个inputRef引用变量，用于“勾住”挂载网页后的输入框\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    //inputRef.current就是挂载到网页后的那个输入框，一个真实DOM，因此可以调用html中的方法focus()\n    inputRef.current.focus();\n  },[]);\n\n  return <div>\n      {/* 通过 ref 属性将 inputRef与该输入框进行“挂钩” */}\n      <input type='text' ref={inputRef} />\n    </div>\n}\nexport default Component\n\n\n注意：\n1、在给组件设置 ref 属性时，只需传入 inputRef，千万不要传入 inputRef.current。\n2、在“勾住”渲染后的真实DOM输入框后，能且只能调用原生html中该标签拥有的方法。\n\n\n# useRef使用示例2：\n\n若我们有一个组件，该组件的功能需求如下：\n1、组件中有一个变量count，当该组件挂载到网页后，count每秒自动 +1。\n2、组件中有一个按钮，点击按钮可以停止count自动+1。\n\n需求分析：\n1、声明内部变量count用 useState\n2、可以在useEffect 通过setInterval创建一个计时器timer，实现count每秒自动 +1\n3、当组件卸载前，需要通过 clearInterval 将timer清除\n4、按钮点击处理函数中，也要通过 clearInterval 将timer清除\n\n假设我们不使用useRef，那该如何实现？\n\n为了确保timer可以被useEffect以外地方也能访问，我们通常做法是将timer声明提升到useEffect以外。\n代码如下：\n\nimport React,{useState,useEffect} from 'react'\n\nfunction Component() {\n  const [count,setCount] = useState(0);\n  const [timer,setTimer] = useState(null); //单独声明定义timer，目的是为了让组件内所有地方都可以访问到timer\n\n  useEffect(() => {\n    //需要用setTimer()包裹住 setInterval()\n    setTimer(setInterval(() => {\n        setCount((prevData) => {return prevData +1});\n    }, 1000));\n    return () => {\n      //清除掉timer\n      clearInterval(timer);\n    }\n  },[]);\n\n  const clickHandler = () => {\n    //清除掉timer\n    clearInterval(timer);\n  };\n\n  return (\n    <div>\n        {count}\n        <button onClick={clickHandler} >stop</button>\n    </div>\n  )\n}\n\nexport default Component\n\n\n如果使用useRef，该如何实现？ 代码如下：\n\nimport React,{useState,useEffect,useRef} from 'react'\n\nfunction Component() {\n  const [count,setCount] =  useState(0);\n  const timerRef = useRef(null);//先定义一个timerRef引用变量，用于“勾住”useEffect中通过setIntervale创建的计时器\n\n  useEffect(() => {\n    //将timerRef.current与setIntervale创建的计时器进行“挂钩”\n    timerRef.current = setInterval(() => {\n        setCount((prevData) => { return prevData +1});\n    }, 1000);\n    return () => {\n        //通过timerRef.current，清除掉计时器\n        clearInterval(timerRef.current);\n    }\n  },[]);\n\n  const clickHandler = () => {\n    //通过timerRef.current，清除掉计时器\n    clearInterval(timerRef.current);\n  };\n\n  return (\n    <div>\n        {count}\n        <button onClick={clickHandler} >stop</button>\n    </div>\n  )\n}\n\nexport default Component\n\n\n两种实现方式对比：\n\n1、两种实现方式最主要的差异地方在于 如何创建组件内对计时器的引用。\n2、两种创建引用的方式，分别是：用useState创建的timer、用useRef创建的timerRef\n3、在使用setInterval时，相对来说timerRef.current更加好用简单，结构清晰，不需要像 setTimer那样需要再多1层包裹。\n4、timer更像是一种react对计时器的映射，而timerRef直接就是真实DOM中计时器的引用，timerRef能够调用更多的原生html中的JS方法和属性。\n\n结论：\n1、如果需要对渲染后的DOM节点进行操作，必须使用useRef。\n2、如果需要对渲染后才会存在的变量对象进行某些操作，建议使用useRef。\n\n第3遍强调：useRef只适合“勾住”小写开头的类似原生标签的组件。如果是自定义的react组件(自定义的组件必须大写字母开头)，那么是无法使用useRef的。\n\n\n> 以下内容更新于 2022.05.20\n\n\n# useRef使用示例3：父组件调用子组件中的函数\n\n首先特别强调：除非情况非常特殊，否则一般情况下都不要采用 父组件调用子组件的函数 这种策略。\n\n\n使用 useRef 实现父组件调用子组件中的函数 实现思路：\n\n 1. 父组件中通过 useRef 定义一个钩子变量，例如 childFunRef\n\n 2. 父组件通过参数配置，将 childFunRef 传递给子组件\n\n 3. 子组件在自己的 useEffect() 中定义一个函数，例如 doSomting()\n    \n    > 划重点：一定要在 useEffect() 中定义 doSomting()，不能直接在子组件内部定义。\n    > \n    > 因为如果 doSomting() 定义在子组件内部，那么就会造成每一次组件刷新都会重新生成一份 doSomthing()\n\n 4. 然后将 doSomting() 赋值到 childFunRef.current 中\n\n 5. 这样，当父组件想调用子组件中的 doSomting() 时，可执行 childFunRef.current.doSomting()\n\n\n具体示例代码：\n\nParentComponent\n\nimport { useRef } from \"react\";\nimport ChildComponent from \"./child\";\n\nconst ParentComponent = () => {\n  const childFunRef = useRef();\n  const handleOnClick = () => {\n    if (childFunRef.current) {\n      childFunRef.current.doSomething();\n    }\n  };\n  return (\n    <div>\n      <ChildComponent funRef={childFunRef} />\n      <button onClick={handleOnClick}>执行子项的doSomething()</button>\n    </div>\n  );\n};\n\nexport default ParentComponent;\n\n\n\nChildComponent\n\nimport { useEffect, useState } from \"react\";\n\nconst ChildComponent = ({ funRef }) => {\n  const [num, setNum] = useState(0);\n  useEffect(() => {\n    const doSomething = () => {\n      setNum(Math.floor(Math.random() * 100));\n    };\n    funRef.current = { doSomething }; //在子组件中修改父组件中定义的childFunRef的值\n  }, [funRef]);\n  return <div>{num}</div>;\n};\n\nexport default ChildComponent;\n\n\n\n特别说明：\n\n 1. 下一章要讲解的 useImperativeHandle 也是用来实现 父组件调用子组件内定义的函数的。\n\n 2. 再次强调，如非必要，真的不要使用 父组件调用子组件内函数 这种策略。\n    \n    > 最近我遇到了一个需求，子组件是一个第三方写好的轮播图，父组件需要调用这个轮播图的 next() 的函数来切换下一张，所以才使用了这种策略。\n\n> 以上内容更新于 2022.05.20\n\n\n----------------------------------------\n\n> 以下内容更新于2020.11.18\n\n# 在 TypeScript 中使用 useRef 创建计时器注意事项：\n\n在上面代码示例中，请注意这一行代码：\n\ntimerRef.current = setInterval(() => {\n        setCount((prevData) => { return prevData +1});\n    }, 1000);\n\n\n如果是在 TS 语法下，上面的代码会报错误：\n\n不能将类型“Timeout”分配给类型“number”。\n\n\nTimeout ???\n\n造成这个错误提示的原因是：\n\n 1. TypeScript 是运行在 Nodejs 环境下的，TS 编译之后的代码是运行在浏览器环境下的。\n 2. Nodejs 和浏览器中的 window 他们各自实现了一套自己的 setInterval\n 3. 原来代码 timerRef.current = setInterval( ... ) 中 setInterval 会被 TS 认为是 Nodejs 定义的 setInterval，而 Nodejs 中 setInterval 返回的类型就是 NodeJS.Timeout。\n 4. 所以，我们需要将上述代码修改为：timerRef.current = window.setInterval( ... )，明确我们调用的是 window.setInterval，而不是 Nodejs 的 setInterval。\n\n附一个 TS 代码示例：\n\nimport React, { useRef, useEffect } from 'react'\n\nconst MyTemp = () => {\n    const timer = useRef<number | undefined>()\n\n    useEffect(() => {\n        timer.current = window.setInterval(() => {\n            console.log(0)\n        }, 1000)\n\n        return () => {\n            clearInterval(timer.current)\n        }\n    }, [])\n    return (\n        <div></div>\n    )\n}\n\nexport default MyTemp\n\n\n> 以上内容更新于2020.11.18\n\n----------------------------------------\n\n> 以下内容更新于2020.12.03\n\n# 在 TypeScript 中给 useRef.current 赋值的注意事项\n\n在 jsx 文件中，以下代码是不会有问题的。\n\nconst myRef = useRef(null)\n...\nmyRef.current = xxxx\n\n\n但是，在我们使用 TypeScript 之后，按照习惯改成以下代码：\n\nconst myRef = useRef<Xxx>(null)\n...\nmyRef.current = xxx\n\n\n此时，会收到 TypeScript 的报错：无法分配到 \"current\" ，因为 myRef.current 是只读属性。\n\n报错原因：\n\nReact 的作者并没有规定使用 useRef(null) 之后 myRef.current 就不可以再修改了。\n\n但是 TypeScript 的作者认为，若使用 useRef(null) 之后，myRef 就应该交由 React 来托管，外界不应该有权利去修改 myRef.current，因此此时会把 myRef.current 当做只读属性。\n\n解决方式：\n\n解决方式1：不给 useRef 设置 null 这个默认值\n\nconst myRef = useRef<Xxx>()\n\n\n解决方式2：就是将原本的类型定义，修改成以下：\n\nconst myRef = useRef<Xxx | null>(null)\n\n//或者是\n\nconst myRef = useRef<Xxx | undefined>()\n\n\nmyRef.current 的数据类型，除了 Xxx 之外，再加上 null 或 undefined ，这样 TypeScript 就认为 myRef.current 可能中途会发生修改，因此不会再将其设置为只读属性，此时再去执行 myRef.current = xxx 不再会报错。\n\n验证一下：\n\n我们再去看看上面 2020.11.18 更新的 TypeScript 代码示例中：\n\n由于将来需要执行 timer.current = window.setInterval ( ... )，也就是说需要给 timer.current 赋值。\n\n所以在定义时就使用以下方式，以确保 timer.current 不会被 TS 认为是只读属性：\n\nconst timer = useRef<number | undefined>()\n\n\n> 以上内容更新于2020.12.03\n\n----------------------------------------\n\n\n# 那如何“勾住”自定义组件中的“小写开头的类似原生标签的组件”？\n\n答：使用React.forwardRef()。\n\n# 你是否思考过这个问题：自定义组件到底是什么？\n\n首先看一下“小写开头的类似原生标签的组件”，例如<button>、<input >，我们很容易理解他是react内置的类似原生DOM的组件，最终都将直接转换成对应的真实DOM。\n\n那自定义组件又该如何理解，如何定义呢？\n\n假设我们有一个自定义组件<MyComponent>，那么有以下几点是可以肯定的：\n1、<MyComponent>内部return出去的，可以是小写开头的类似原生标签的组件，也可以是其他自定义组件。\n2、无论嵌套多少次，最底层组件return出去的，一定是小写开头的类似原生标签的组件。\n3、<MyComponent>内部一定创建了变量、处理函数等等。\n4、挂载或渲染后的实际网页中，并不会存在<MyComponent>这个标签，存在的依然是各种原生html标签。\n\n为了简化更加容易理解，暂时姑且先把“小写开头的类似原生标签的组件”直接当做“原生html标签”。\n那么“自定义组件”和“原生html标签”究竟区别在哪里呢？\n\n先不回答这个问题，再说另外一个问题：交互式html页面都有哪些构成？\n答：有各种html标签 + JS对象(JS中定义的变量和函数)\n\n那我们使用react开发页面，“原生html标签”有了，那还缺什么？ 当然是 JS对象(JS中定义的变量和函数)。\n\n再回顾一下问题：“自定义组件”和“原生html标签”究竟区别在哪里呢？\n答：“自定义组件”除了拥有“原生html标签”，还拥有JS对象(JS中定义的变量和函数)。\n\n再回顾一下开始的疑问：自定义组件到底是什么？\n答：其实根本不存在自定义组件，所谓自定义组件，只不过是react给我们的各种语法糖，react并没有创造另外一门语言，react整体就是原生JS的语法糖。\n\nJSX语法 + Hook 组合起来，形成一个强大的语法糖，让你编写html标签和JS更加简便而已。 语法糖的对象就是：原生html标签 + JS对象(JS中定义的变量和函数)。\n\n这就解释了为啥自定义组件 return 出去的内容，最外层必须有一个原生html标签。 说白了，无论你怎么定义，折腾这个自定义组件，本质上都要保证这个自定义组件最终都能转换成一段原生html代码。\n\n上面这一大段话都是“简单到不能再简单的道理”，但是你只有理解透这一层，理解自定义组件、理解react究竟是什么之后，你会对于学习React各种API和Hook才会更加容易理解和接受。\n\n让我们回到 那如何“勾住”自定义组件中的“小写开头的类似原生标签的组件”？ 这个问题上来。\n\n# React.forwardRef() 的具体用法\n\nReact.forwardRef()包裹住要输出的组件，且将第2个参数设置为 ref 即可，示例代码：\n\nimport React from 'react'\n\nconst ChildComponent = React.forwardRef((props,ref) => {\n  //子组件通过将第2个参数ref 添加到内部真正的“小写开头的类似原生标签的组件”中 \n  return <button ref={ref}>{props.label}</button>\n});\n\n/* 上面的子组件直接在父组件内定义了，如果子组件是单独的.js文件，则可以通过\n   export default React.forwardRef(ChildComponent) 这种形式  */\n\nfunction Forward() {\n  const ref = React.useRef();//父组件定义一个ref\n  const clickHandle = () =>{\n    console.log(ref.current);//父组件获得渲染后子组件中对应的DOM节点引用\n  }\n  return (\n    <div>\n        {/* 父组件通过给子组件添加属性 ref={ref} 将ref作为参数传递给子组件 */}\n        <ChildComponent label='child bt' ref={ref} />\n        <button onClick={clickHandle} >get child bt ref</button>\n    </div>\n  )\n}\nexport default Forward;\n\n\n----------------------------------------\n\n至此，关于useRef()基础用法、React.forwardRef()已经讲完。 这2个函数的掌握，会对下一个要讲的Hook：useImperativeHandle 非常有用。",normalizedContent:"# 12 useref基础用法\n\n\n# useref概念解释\n\n我们第七个要学习的hook(钩子函数)是useref，他的作用是“勾住”某些组件挂载完成或重新渲染完成后才拥有的某些对象，并返回该对象的引用。该引用在组件整个生命周期中都固定不变，该引用并不会随着组件重新渲染而失效。\n\n上面这段话，就算你认真读几遍，估计也是一头雾水，到底说的是啥？\n我也实在想不出其他更加通俗的语言来描述useref，不过经过下面的详细分解描述，相信能帮到你来理解useref。\n\n# “某些组件挂载完成或重新渲染完成后才拥有的某些对象”：\n\n这句话中的“某些对象”主要分为3种：jsx组件转换后对应的真实dom对象、在useeffect中创建的变量、子组件内自定义的函数(方法)。\n\n第1：jsx组件转换后对应的真实dom对象：\n举例：假设在jsx中，有一个输入框<input type='text' />，这个标签最终将编译转换成真正的html标签中的<input type='text'/>。\n你应该知道以下几点：\n1、jsx中小写开头的组件看似和原生html标签相似，但是并不是真的原生标签，依然是react内置组件。\n2、什么时候转换？ 虚拟dom转化为真实dom\n3、什么时候可访问？组件挂载完成或重新渲染完成后\n\n对于上面举例中的那个转换后的<input/> 真实dom，只有组件挂载完成或重新渲染完成后才可以访问，它就就属于“某些组件挂载完成或重新渲染完成后才拥有的某些对象”。\n\n特别强调：useref只适合“勾住”小写开头的类似原生标签的组件。如果是自定义的react组件(自定义的组件必须大写字母开头)，那么是无法使用useref的。\n\n思考：如何获取这个 <input/> 真实dom呢？\n答：用useref。\n\n第2：在useeffect中创建的变量：\n举例，请看以下代码：\n\nuseeffect(() => {\n    let timer = setinterval(() => {\n        setcount(prevdata => prevdata +1);\n    }, 1000);\n    return () => {\n        clearinterval(timer);\n    }\n},[]);\n\n\n上述代码中，请注意这个timer是在useeffect中才定义的。\n\n思考：useeffect 以外的地方，该如何获取这个 timer 的引用？\n答：用useref\n\n第3：子组件内自定义的函数(方法)\n由于需要结合useimperativehandle才可以实现，而useimperativehandle目前还未学习，所以本章中不讨论这个怎么实现。\n本章只讲前2中应用场景。\n\n# “并返回该对象的引用”：\n\n上面的前2种情况，都提到用useref来获取对象的引用。具体如何获取，稍后在useref用法中会有演示。\n\n# “该引用在组件整个生命周期中都固定不变”：\n\n假设通过useref获得了该对象的引用，那么当react组件重新渲染后，如何保证该引用不丢失？\n答：react在底层帮我们做了这个工作，我们只需要相信之前的引用可以继续找到目标对象即可。\n\n请注意：react.createref()也有useref相似效果，但是react.createref无法全部适用上面提到的3种情况。\n\n让我们回到useref基础学习中。\n\n\n# useref是来解决什么问题的？\n\n答：useref可以“获取某些组件挂载完成或重新渲染完成后才拥有的某些对象”的引用，且保证该引用在组件整个生命周期内固定不变，都能准确找到我们要找的对象。\n具体已经在useref中做了详细阐述，这里不再重复。\n\n补充说明：\n1、useref是针对函数组件的，如果是类组件则使用react.createref()。\n2、react.createref()也可以在函数组件中使用。\n只不过react.createref创建的引用不能保证每次重新渲染后引用固定不变。如果你只是使用react.createref“勾住”jsx组件转换后对应的真实dom对象是没问题的，但是如果想“勾住”在useeffect中创建的变量，那是做不到的。\n\n2者都想可以“勾住”，只能使用useref。\n\n\n# 注意注意\n\n在后面useimperativehandle的学习中，你会知道useref还可以 “勾住并调用” 子组件内定义的函数(方法)。\n\n\n> 以下内容更新于 2022.04.06\n\n\n# 特别注意：修改 .current 的值并不会触发组件重新渲染\n\n在本文开头介绍 useref 时用了这句话 “useref 是“勾住”某些组件挂载完成或重新渲染完成后才拥有的某些对象，并返回该对象的引用。”\n\n也就是说 先有了 组件渲染，之后才更新了 useref 中 .current 的值。\n\n> 也就是说 useref 变量的 current 的值实际上是 组件渲染 后的一个副产品。\n\n这句话暗含了另外一层含义：主动更新 useref 变量的 .current 的值并不会触发组件重新渲染。\n\n例如下面这个示例：\n\nimport { useref } from \"react\";\n\nexport default function mybutton() {\n  const countref = useref(0)\n\n  const handleclick = () => {\n    countref.current = countref.current + 1\n  };\n\n  return <button onclick={handleclick}>click me {countref.current}</button>;\n}\n\n\n实际运行就会发现，在点击事件中我们修改了 countref.current 的值，尽管该值确实发生了变化，可是并不会触发组件的重新渲染。\n\n> 使用 usestate() 产生的变量值发生变化后，是会触发组件重新渲染的。\n\n\n> 以上内容更新于 2022.04.06\n\n\n\n# useref函数源码：\n\n回到useref的学习中，首先看一下react源码中的reacthooks.js。\n\n//备注：源码采用typescript编写，如果不懂ts代码，阅读起来稍显困难\nexport function useref<t>(initialvalue: t): {|current: t|} {\n  const dispatcher = resolvedispatcher();\n  return dispatcher.useref(initialvalue);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用hook”，并不是“hook源码分析”。^_^\n\n\n# useref基本用法\n\nuseref(initialvalue)函数只有1个可选参数，该参数为默认“勾住”的对象。绝大多数实际的情况是，默认“勾住”的对象在jsx未编译前(组件挂载或重新渲染后)根本不存在，所以更多时候都会传一个 null 作为默认值。如果不传任何参数，那么react默认将参数设置为undefined。\n\n就目前本人所理解的，日常使用过程中useref(null)和useref() 实际上是没有什么区别的。\n\n----------------------------------------\n\n以下更新于 2020.12.10\n\n补充一下 react + typescript 知识点：\n\nuseref(null) 和 useref() 在 react + typescript 项目中还是有差别的。\n\n假设我们要勾住一个 <canvas /> dom元素，那么：\n\nconst canvasref1 = useref<htmlcanvaselement>(null)\nconst canvasref2 = useref<htmlcanvaselement>()\n\n\n上面代码中：\n\n 1. canvasref1.current 的类型为：htmlcanvaselement | null\n 2. canvasref2.current 的类型为：htmlcanvaselement | null | undefined\n\n以上更新于 2020.12.10\n\n----------------------------------------\n\n第2遍强调：本文提到的组件，默认都是指小写开头的类似原生标签的组件，不可以是自定义组件。\n\n接下来具体说说useref关联对象的2种用法：\n1、针对 jsx组件，通过属性 ref={xxxref} 进行关联。\n2、针对 useeffect中的变量，通过 xxxref.current 进行关联。\n\n# 代码形式：\n\n//先定义一个xxref引用变量，用于“勾住”某些组件挂载完成或重新渲染完成后才拥有的某些对象\nconst xxref = useref(null);\n\n//针对 jsx组件，通过属性 ref={xxxref} 进行关联\n<xxx ref={xxref} />\n\n//针对 useeffect中的变量，通过 xxxref.current 进行关联\nuseeffect(() => {\n   xxref.current = xxxxxx;\n},[]);\n\n\n# 拆解说明：\n\n1、具体讲解已在上面示例代码中做了多项注释，此处不再重复；\n\n# 'ref'补充说明\n\n1、组件的 ref 为特殊属性名，他并不存在组件属性传值的 props 中。\n2、如果给一个组件设定了 ref 属性名，但是对应的值却不是由 useref 创建的，那么实际运行中会收到react的报错，无法正常渲染。\n\n# '<xxx>'补充说明\n\n1、useref只能针对react中小写开头的类似原生标签的组件，所以这里用的是 <xxx> 而不是 <xxx>。\n\n# 'xxxref.current'补充说明\n\n1、当需要使用“勾住”的对象时，也是通过xxref.current来获取该对象的。\n\n\n# useref使用示例1：\n\n若我们有一个组件，该组件只有一个输入框，我们希望当该组件挂载到网页后，自动获得输入焦点。\n\n需求分析：\n1、我们可以很轻松使用<input >创建出这个输入框。\n2、需要使用useref “勾住”这个输入框，当它被挂载到网页后，通过操作原生html的方法，将焦点赋予该输入框上。\n\n完整代码如下：\n\nimport react,{useeffect,useref} from 'react'\n\nfunction component() {\n  //先定义一个inputref引用变量，用于“勾住”挂载网页后的输入框\n  const inputref = useref(null);\n\n  useeffect(() => {\n    //inputref.current就是挂载到网页后的那个输入框，一个真实dom，因此可以调用html中的方法focus()\n    inputref.current.focus();\n  },[]);\n\n  return <div>\n      {/* 通过 ref 属性将 inputref与该输入框进行“挂钩” */}\n      <input type='text' ref={inputref} />\n    </div>\n}\nexport default component\n\n\n注意：\n1、在给组件设置 ref 属性时，只需传入 inputref，千万不要传入 inputref.current。\n2、在“勾住”渲染后的真实dom输入框后，能且只能调用原生html中该标签拥有的方法。\n\n\n# useref使用示例2：\n\n若我们有一个组件，该组件的功能需求如下：\n1、组件中有一个变量count，当该组件挂载到网页后，count每秒自动 +1。\n2、组件中有一个按钮，点击按钮可以停止count自动+1。\n\n需求分析：\n1、声明内部变量count用 usestate\n2、可以在useeffect 通过setinterval创建一个计时器timer，实现count每秒自动 +1\n3、当组件卸载前，需要通过 clearinterval 将timer清除\n4、按钮点击处理函数中，也要通过 clearinterval 将timer清除\n\n假设我们不使用useref，那该如何实现？\n\n为了确保timer可以被useeffect以外地方也能访问，我们通常做法是将timer声明提升到useeffect以外。\n代码如下：\n\nimport react,{usestate,useeffect} from 'react'\n\nfunction component() {\n  const [count,setcount] = usestate(0);\n  const [timer,settimer] = usestate(null); //单独声明定义timer，目的是为了让组件内所有地方都可以访问到timer\n\n  useeffect(() => {\n    //需要用settimer()包裹住 setinterval()\n    settimer(setinterval(() => {\n        setcount((prevdata) => {return prevdata +1});\n    }, 1000));\n    return () => {\n      //清除掉timer\n      clearinterval(timer);\n    }\n  },[]);\n\n  const clickhandler = () => {\n    //清除掉timer\n    clearinterval(timer);\n  };\n\n  return (\n    <div>\n        {count}\n        <button onclick={clickhandler} >stop</button>\n    </div>\n  )\n}\n\nexport default component\n\n\n如果使用useref，该如何实现？ 代码如下：\n\nimport react,{usestate,useeffect,useref} from 'react'\n\nfunction component() {\n  const [count,setcount] =  usestate(0);\n  const timerref = useref(null);//先定义一个timerref引用变量，用于“勾住”useeffect中通过setintervale创建的计时器\n\n  useeffect(() => {\n    //将timerref.current与setintervale创建的计时器进行“挂钩”\n    timerref.current = setinterval(() => {\n        setcount((prevdata) => { return prevdata +1});\n    }, 1000);\n    return () => {\n        //通过timerref.current，清除掉计时器\n        clearinterval(timerref.current);\n    }\n  },[]);\n\n  const clickhandler = () => {\n    //通过timerref.current，清除掉计时器\n    clearinterval(timerref.current);\n  };\n\n  return (\n    <div>\n        {count}\n        <button onclick={clickhandler} >stop</button>\n    </div>\n  )\n}\n\nexport default component\n\n\n两种实现方式对比：\n\n1、两种实现方式最主要的差异地方在于 如何创建组件内对计时器的引用。\n2、两种创建引用的方式，分别是：用usestate创建的timer、用useref创建的timerref\n3、在使用setinterval时，相对来说timerref.current更加好用简单，结构清晰，不需要像 settimer那样需要再多1层包裹。\n4、timer更像是一种react对计时器的映射，而timerref直接就是真实dom中计时器的引用，timerref能够调用更多的原生html中的js方法和属性。\n\n结论：\n1、如果需要对渲染后的dom节点进行操作，必须使用useref。\n2、如果需要对渲染后才会存在的变量对象进行某些操作，建议使用useref。\n\n第3遍强调：useref只适合“勾住”小写开头的类似原生标签的组件。如果是自定义的react组件(自定义的组件必须大写字母开头)，那么是无法使用useref的。\n\n\n> 以下内容更新于 2022.05.20\n\n\n# useref使用示例3：父组件调用子组件中的函数\n\n首先特别强调：除非情况非常特殊，否则一般情况下都不要采用 父组件调用子组件的函数 这种策略。\n\n\n使用 useref 实现父组件调用子组件中的函数 实现思路：\n\n 1. 父组件中通过 useref 定义一个钩子变量，例如 childfunref\n\n 2. 父组件通过参数配置，将 childfunref 传递给子组件\n\n 3. 子组件在自己的 useeffect() 中定义一个函数，例如 dosomting()\n    \n    > 划重点：一定要在 useeffect() 中定义 dosomting()，不能直接在子组件内部定义。\n    > \n    > 因为如果 dosomting() 定义在子组件内部，那么就会造成每一次组件刷新都会重新生成一份 dosomthing()\n\n 4. 然后将 dosomting() 赋值到 childfunref.current 中\n\n 5. 这样，当父组件想调用子组件中的 dosomting() 时，可执行 childfunref.current.dosomting()\n\n\n具体示例代码：\n\nparentcomponent\n\nimport { useref } from \"react\";\nimport childcomponent from \"./child\";\n\nconst parentcomponent = () => {\n  const childfunref = useref();\n  const handleonclick = () => {\n    if (childfunref.current) {\n      childfunref.current.dosomething();\n    }\n  };\n  return (\n    <div>\n      <childcomponent funref={childfunref} />\n      <button onclick={handleonclick}>执行子项的dosomething()</button>\n    </div>\n  );\n};\n\nexport default parentcomponent;\n\n\n\nchildcomponent\n\nimport { useeffect, usestate } from \"react\";\n\nconst childcomponent = ({ funref }) => {\n  const [num, setnum] = usestate(0);\n  useeffect(() => {\n    const dosomething = () => {\n      setnum(math.floor(math.random() * 100));\n    };\n    funref.current = { dosomething }; //在子组件中修改父组件中定义的childfunref的值\n  }, [funref]);\n  return <div>{num}</div>;\n};\n\nexport default childcomponent;\n\n\n\n特别说明：\n\n 1. 下一章要讲解的 useimperativehandle 也是用来实现 父组件调用子组件内定义的函数的。\n\n 2. 再次强调，如非必要，真的不要使用 父组件调用子组件内函数 这种策略。\n    \n    > 最近我遇到了一个需求，子组件是一个第三方写好的轮播图，父组件需要调用这个轮播图的 next() 的函数来切换下一张，所以才使用了这种策略。\n\n> 以上内容更新于 2022.05.20\n\n\n----------------------------------------\n\n> 以下内容更新于2020.11.18\n\n# 在 typescript 中使用 useref 创建计时器注意事项：\n\n在上面代码示例中，请注意这一行代码：\n\ntimerref.current = setinterval(() => {\n        setcount((prevdata) => { return prevdata +1});\n    }, 1000);\n\n\n如果是在 ts 语法下，上面的代码会报错误：\n\n不能将类型“timeout”分配给类型“number”。\n\n\ntimeout ???\n\n造成这个错误提示的原因是：\n\n 1. typescript 是运行在 nodejs 环境下的，ts 编译之后的代码是运行在浏览器环境下的。\n 2. nodejs 和浏览器中的 window 他们各自实现了一套自己的 setinterval\n 3. 原来代码 timerref.current = setinterval( ... ) 中 setinterval 会被 ts 认为是 nodejs 定义的 setinterval，而 nodejs 中 setinterval 返回的类型就是 nodejs.timeout。\n 4. 所以，我们需要将上述代码修改为：timerref.current = window.setinterval( ... )，明确我们调用的是 window.setinterval，而不是 nodejs 的 setinterval。\n\n附一个 ts 代码示例：\n\nimport react, { useref, useeffect } from 'react'\n\nconst mytemp = () => {\n    const timer = useref<number | undefined>()\n\n    useeffect(() => {\n        timer.current = window.setinterval(() => {\n            console.log(0)\n        }, 1000)\n\n        return () => {\n            clearinterval(timer.current)\n        }\n    }, [])\n    return (\n        <div></div>\n    )\n}\n\nexport default mytemp\n\n\n> 以上内容更新于2020.11.18\n\n----------------------------------------\n\n> 以下内容更新于2020.12.03\n\n# 在 typescript 中给 useref.current 赋值的注意事项\n\n在 jsx 文件中，以下代码是不会有问题的。\n\nconst myref = useref(null)\n...\nmyref.current = xxxx\n\n\n但是，在我们使用 typescript 之后，按照习惯改成以下代码：\n\nconst myref = useref<xxx>(null)\n...\nmyref.current = xxx\n\n\n此时，会收到 typescript 的报错：无法分配到 \"current\" ，因为 myref.current 是只读属性。\n\n报错原因：\n\nreact 的作者并没有规定使用 useref(null) 之后 myref.current 就不可以再修改了。\n\n但是 typescript 的作者认为，若使用 useref(null) 之后，myref 就应该交由 react 来托管，外界不应该有权利去修改 myref.current，因此此时会把 myref.current 当做只读属性。\n\n解决方式：\n\n解决方式1：不给 useref 设置 null 这个默认值\n\nconst myref = useref<xxx>()\n\n\n解决方式2：就是将原本的类型定义，修改成以下：\n\nconst myref = useref<xxx | null>(null)\n\n//或者是\n\nconst myref = useref<xxx | undefined>()\n\n\nmyref.current 的数据类型，除了 xxx 之外，再加上 null 或 undefined ，这样 typescript 就认为 myref.current 可能中途会发生修改，因此不会再将其设置为只读属性，此时再去执行 myref.current = xxx 不再会报错。\n\n验证一下：\n\n我们再去看看上面 2020.11.18 更新的 typescript 代码示例中：\n\n由于将来需要执行 timer.current = window.setinterval ( ... )，也就是说需要给 timer.current 赋值。\n\n所以在定义时就使用以下方式，以确保 timer.current 不会被 ts 认为是只读属性：\n\nconst timer = useref<number | undefined>()\n\n\n> 以上内容更新于2020.12.03\n\n----------------------------------------\n\n\n# 那如何“勾住”自定义组件中的“小写开头的类似原生标签的组件”？\n\n答：使用react.forwardref()。\n\n# 你是否思考过这个问题：自定义组件到底是什么？\n\n首先看一下“小写开头的类似原生标签的组件”，例如<button>、<input >，我们很容易理解他是react内置的类似原生dom的组件，最终都将直接转换成对应的真实dom。\n\n那自定义组件又该如何理解，如何定义呢？\n\n假设我们有一个自定义组件<mycomponent>，那么有以下几点是可以肯定的：\n1、<mycomponent>内部return出去的，可以是小写开头的类似原生标签的组件，也可以是其他自定义组件。\n2、无论嵌套多少次，最底层组件return出去的，一定是小写开头的类似原生标签的组件。\n3、<mycomponent>内部一定创建了变量、处理函数等等。\n4、挂载或渲染后的实际网页中，并不会存在<mycomponent>这个标签，存在的依然是各种原生html标签。\n\n为了简化更加容易理解，暂时姑且先把“小写开头的类似原生标签的组件”直接当做“原生html标签”。\n那么“自定义组件”和“原生html标签”究竟区别在哪里呢？\n\n先不回答这个问题，再说另外一个问题：交互式html页面都有哪些构成？\n答：有各种html标签 + js对象(js中定义的变量和函数)\n\n那我们使用react开发页面，“原生html标签”有了，那还缺什么？ 当然是 js对象(js中定义的变量和函数)。\n\n再回顾一下问题：“自定义组件”和“原生html标签”究竟区别在哪里呢？\n答：“自定义组件”除了拥有“原生html标签”，还拥有js对象(js中定义的变量和函数)。\n\n再回顾一下开始的疑问：自定义组件到底是什么？\n答：其实根本不存在自定义组件，所谓自定义组件，只不过是react给我们的各种语法糖，react并没有创造另外一门语言，react整体就是原生js的语法糖。\n\njsx语法 + hook 组合起来，形成一个强大的语法糖，让你编写html标签和js更加简便而已。 语法糖的对象就是：原生html标签 + js对象(js中定义的变量和函数)。\n\n这就解释了为啥自定义组件 return 出去的内容，最外层必须有一个原生html标签。 说白了，无论你怎么定义，折腾这个自定义组件，本质上都要保证这个自定义组件最终都能转换成一段原生html代码。\n\n上面这一大段话都是“简单到不能再简单的道理”，但是你只有理解透这一层，理解自定义组件、理解react究竟是什么之后，你会对于学习react各种api和hook才会更加容易理解和接受。\n\n让我们回到 那如何“勾住”自定义组件中的“小写开头的类似原生标签的组件”？ 这个问题上来。\n\n# react.forwardref() 的具体用法\n\nreact.forwardref()包裹住要输出的组件，且将第2个参数设置为 ref 即可，示例代码：\n\nimport react from 'react'\n\nconst childcomponent = react.forwardref((props,ref) => {\n  //子组件通过将第2个参数ref 添加到内部真正的“小写开头的类似原生标签的组件”中 \n  return <button ref={ref}>{props.label}</button>\n});\n\n/* 上面的子组件直接在父组件内定义了，如果子组件是单独的.js文件，则可以通过\n   export default react.forwardref(childcomponent) 这种形式  */\n\nfunction forward() {\n  const ref = react.useref();//父组件定义一个ref\n  const clickhandle = () =>{\n    console.log(ref.current);//父组件获得渲染后子组件中对应的dom节点引用\n  }\n  return (\n    <div>\n        {/* 父组件通过给子组件添加属性 ref={ref} 将ref作为参数传递给子组件 */}\n        <childcomponent label='child bt' ref={ref} />\n        <button onclick={clickhandle} >get child bt ref</button>\n    </div>\n  )\n}\nexport default forward;\n\n\n----------------------------------------\n\n至此，关于useref()基础用法、react.forwardref()已经讲完。 这2个函数的掌握，会对下一个要讲的hook：useimperativehandle 非常有用。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"13 useImperativeHandle基础用法",frontmatter:{title:"13 useImperativeHandle基础用法",date:"2023-09-13T14:48:20.000Z",permalink:"/pages/ede426/"},regularPath:"/03.react/13.useImperativeHandle%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95.html",relativePath:"03.react/13.useImperativeHandle基础用法.md",key:"v-866ffc9c",path:"/pages/ede426/",headers:[{level:2,title:"useImperativeHandle概念解释",slug:"useimperativehandle概念解释",normalizedTitle:"useimperativehandle概念解释",charIndex:33},{level:2,title:"useImperativeHandle是来解决什么问题的？",slug:"useimperativehandle是来解决什么问题的",normalizedTitle:"useimperativehandle是来解决什么问题的？",charIndex:463},{level:2,title:"useImperativeHandle函数源码：",slug:"useimperativehandle函数源码",normalizedTitle:"useimperativehandle函数源码：",charIndex:777},{level:2,title:"useImperativeHandle基本用法",slug:"useimperativehandle基本用法",normalizedTitle:"useimperativehandle基本用法",charIndex:1237},{level:5,title:"代码形式：",slug:"代码形式",normalizedTitle:"代码形式：",charIndex:1584},{level:5,title:"拆解说明：",slug:"拆解说明",normalizedTitle:"拆解说明：",charIndex:1925},{level:2,title:"useImperativeHandle使用示例：",slug:"useimperativehandle使用示例",normalizedTitle:"useimperativehandle使用示例：",charIndex:2195},{level:4,title:"思考一下真的有必要使用useImperativeHandle吗？",slug:"思考一下真的有必要使用useimperativehandle吗",normalizedTitle:"思考一下真的有必要使用useimperativehandle吗？",charIndex:3465},{level:4,title:"说一个有点绕的情况",slug:"说一个有点绕的情况",normalizedTitle:"说一个有点绕的情况",charIndex:3783}],headersStr:"useImperativeHandle概念解释 useImperativeHandle是来解决什么问题的？ useImperativeHandle函数源码： useImperativeHandle基本用法 代码形式： 拆解说明： useImperativeHandle使用示例： 思考一下真的有必要使用useImperativeHandle吗？ 说一个有点绕的情况",content:"# 13 useImperativeHandle基础用法\n\n\n# useImperativeHandle概念解释\n\n我们第八个要学习的Hook(钩子函数)是useImperativeHandle，他的作用是“勾住”子组件中某些函数(方法)供父组件调用。\n\n先回顾一下之前学到的。\n第1个知识点：\nreact属于单向数据流，父组件可以通过属性传值，将父组件内的函数(方法)传递给子组件，实现子组件调用父组件内函数的目的。\n\n第2个知识点：\n1、useRef 可以“勾住”某些本组件挂载完成或重新渲染完成后才拥有的某些对象。\n2、React.forwardRef 可以“勾住”某些子组件挂载完成或重新渲染完成后才拥有的某些对象。\n上面无论哪种情况，由于勾住的对象都是渲染后的原生html对象，父组件只能通过ref调用该原生html对象的函数(方法)。\n\n如果父组件想调用子组件中自定义的方法，该怎么办？\n答：使用useImperativeHandle()。\n\n让我们回到useImperativeHandle基础学习中。\n\n\n# useImperativeHandle是来解决什么问题的？\n\n答：useImperativeHandle可以让父组件获取并执行子组件内某些自定义函数(方法)。本质上其实是子组件将自己内部的函数(方法)通过useImperativeHandle添加到父组件中useRef定义的对象中。\n\n补充说明：\n1、useRef创建引用变量\n2、React.forwardRef将引用变量传递给子组件\n3、useImperativeHandle将子组件内定义的函数作为属性，添加到父组件中的ref对象上。\n\n因此，如果想使用useImperativeHandle，那么还要结合useRef、React.forwardRef一起使用。\n\n\n# useImperativeHandle函数源码：\n\n回到useImperativeHandle的学习中，首先看一下React源码中的ReactHooks.js。\n\n//备注：源码采用TypeScript编写，如果不懂TS代码，阅读起来稍显困难\nexport function useImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用Hook”，并不是“Hook源码分析”。^_^\n\n\n# useImperativeHandle基本用法\n\nuseImperativeHandle(ref,create,[deps])函数前2个参数为必填项，第3个参数为可选项。\n第1个参数为父组件通过useRef定义的引用变量；\n第2个参数为子组件要附加给ref的对象，该对象中的属性即子组件想要暴露给父组件的函数(方法)；\n第3个参数为可选参数，为函数的依赖变量。凡是函数中使用到的数据变量都需要放入deps中，如果处理函数没有任何依赖变量，可以忽略第3个参数。\n\n请注意：\n1、这里面说的“勾住子组件内自定义函数”本质上是子组件将内部自定义的函数添加到父组件的ref.current上面。\n2、父组件若想调用子组件暴露给自己的函数，可以通过 res.current.xxx 来访问或执行。\n\n# 代码形式：\n\nconst xxx = () => {\n    //do smoting...\n}\nuseImperativeHandle(ref,() => ({xxx}));\n\n\n上述代码中，useImperativeHandle(ref,() => ({xxx})) 其实是 useImperativeHandle(ref,() => {return {xxx:xxx}})的简写。\n\n特别注意：() => ({xxx}) 不可以再简写成 () => {xxx}，如果这样写会直接react报错。\n因为这两种写法意思完全不一样：\n1、() => ({xxx}) 表示 返回一个object对象，该对象为{xxx}\n2、() => {xxx} 表示 执行 xxx 语句代码\n\n# 拆解说明：\n\n1、子组件内部先定义一个 xxx 函数\n2、通过useImperativeHandle函数，将 xxx函数包装成一个对象，并将该对象添加到父组件内部定义的ref中。\n3、若 xxx 函数中使用到了子组件内部定义的变量，则还需要将该变量作为 依赖变量 成为useImperativeHandle第3个参数，上面示例中则选择忽略了第3个参数。\n4、若父组件需要调用子组件内的 xxx函数，则通过：res.current.xxx()。\n5、请注意，该子组件在导出时必须被 React.forwardRef()包裹住才可以。\n\n\n# useImperativeHandle使用示例：\n\n举例，若某子组件的需求为：\n1、有变量count，默认值为0\n2、有一个函数 addCount，该函数体内部执行 count+1\n3、有一个按钮，点击按钮执行 addCount 函数\n\n父组件的需求为：\n1、父组件内使用上述子组件\n2、父组件内有一个按钮，点击执行上述子组件内定义的函数 addCount\n\n子组件的代码为：\n\nimport React,{useState,useImperativeHandle} from 'react'\n\nfunction ChildComponent(props,ref) {\n  const [count,setCount] =  useState(0); //子组件定义内部变量count\n  //子组件定义内部函数 addCount\n  const addCount = () => {\n    setCount(count + 1);\n  }\n  //子组件通过useImperativeHandle函数，将addCount函数添加到父组件中的ref.current中\n  useImperativeHandle(ref,() => ({addCount}));\n  return (\n    <div>\n        {count}\n        <button onClick={addCount}>child</button>\n    </div>\n  )\n}\n\n//子组件导出时需要被React.forwardRef包裹，否则无法接收 ref这个参数\nexport default React.forwardRef(ChildComponent);\n\n\n父组件的代码为：\n\nimport React,{useRef} from 'react'\nimport ChildComponent from './childComponent'\n\nfunction Imperative() {\n  const childRef = useRef(null); //父组件定义一个对子组件的引用\n\n  const clickHandle = () => {\n    childRef.current.addCount(); //父组件调用子组件内部 addCount函数\n  }\n\n  return (\n    <div>\n        {/* 父组件通过给子组件添加 ref 属性，将childRef传递给子组件，\n            子组件获得该引用即可将内部函数添加到childRef中 */}\n        <ChildComponent ref={childRef} />\n        <button onClick={clickHandle}>child component do somting</button>\n    </div>\n  )\n}\n\nexport default Imperative;\n\n\n# 思考一下真的有必要使用useImperativeHandle吗？\n\n从实际运行的结果，无论点击子组件还是父组件内的按钮，都将执行 addCount函数，使 count+1。\n\nreact为单向数据流，如果为了实现这个效果，我们完全可以把需求转化成另外一种说法，即：\n1、父组件内定义一个变量count 和 addCount函数\n2、父组件把 count 和 addCount 通过属性传值 传递给子组件\n3、点击子组件内按钮时调用父组件内定义的 addCount函数，使 count +1。\n\n你会发现即使把需求中的 父与子组件 描述对调一下，“最终实际效果”是一样的。\n\n所以，到底使用哪种形式，需要根据组件实际需求来做定夺。\n\n# 说一个有点绕的情况\n\n子组件导出时：\n1、假设某个子组件为了提高性能，导出时需要用React.memo包裹。\n2、可是他也需要暴露自己内部函数给父组件，导出时也需要用React.forwardRef包裹。\n\n子组件内部函数：\n1、假设该组件内部函数为了性能，需要用到 useCallback包裹该函数。\n2、同时为了让将该函数暴露给父级，也需要用 useImperativeHandle包裹。\n\n呵，该怎么办，层层包裹吗？ 虽然性能提升了，可是那样的代码可读性还有多少，怎么办？\n答：不知道，反正本系列文章只是单独来讲解某个hook怎么使用，这种复杂包裹的情况，你自己看着办吧。\n\n事实上这种情况出现的几率非常小，当我们开发react组件时，不应该为了使用某hook而使用。还是应该是依据单向数据流的原则来做设计方案。\n就好像本章中示例代码，其实完全可以不用useImperativeHandle，而是继续使用最常见的父组件属性传值给子组件的方式。\n\n----------------------------------------\n\n至此，关于useImperativeHandle基础用法已经讲完，没有高级用法，直接进入下一个Hook。",normalizedContent:"# 13 useimperativehandle基础用法\n\n\n# useimperativehandle概念解释\n\n我们第八个要学习的hook(钩子函数)是useimperativehandle，他的作用是“勾住”子组件中某些函数(方法)供父组件调用。\n\n先回顾一下之前学到的。\n第1个知识点：\nreact属于单向数据流，父组件可以通过属性传值，将父组件内的函数(方法)传递给子组件，实现子组件调用父组件内函数的目的。\n\n第2个知识点：\n1、useref 可以“勾住”某些本组件挂载完成或重新渲染完成后才拥有的某些对象。\n2、react.forwardref 可以“勾住”某些子组件挂载完成或重新渲染完成后才拥有的某些对象。\n上面无论哪种情况，由于勾住的对象都是渲染后的原生html对象，父组件只能通过ref调用该原生html对象的函数(方法)。\n\n如果父组件想调用子组件中自定义的方法，该怎么办？\n答：使用useimperativehandle()。\n\n让我们回到useimperativehandle基础学习中。\n\n\n# useimperativehandle是来解决什么问题的？\n\n答：useimperativehandle可以让父组件获取并执行子组件内某些自定义函数(方法)。本质上其实是子组件将自己内部的函数(方法)通过useimperativehandle添加到父组件中useref定义的对象中。\n\n补充说明：\n1、useref创建引用变量\n2、react.forwardref将引用变量传递给子组件\n3、useimperativehandle将子组件内定义的函数作为属性，添加到父组件中的ref对象上。\n\n因此，如果想使用useimperativehandle，那么还要结合useref、react.forwardref一起使用。\n\n\n# useimperativehandle函数源码：\n\n回到useimperativehandle的学习中，首先看一下react源码中的reacthooks.js。\n\n//备注：源码采用typescript编写，如果不懂ts代码，阅读起来稍显困难\nexport function useimperativehandle<t>(\n  ref: {|current: t | null|} | ((inst: t | null) => mixed) | null | void,\n  create: () => t,\n  deps: array<mixed> | void | null,\n): void {\n  const dispatcher = resolvedispatcher();\n  return dispatcher.useimperativehandle(ref, create, deps);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用hook”，并不是“hook源码分析”。^_^\n\n\n# useimperativehandle基本用法\n\nuseimperativehandle(ref,create,[deps])函数前2个参数为必填项，第3个参数为可选项。\n第1个参数为父组件通过useref定义的引用变量；\n第2个参数为子组件要附加给ref的对象，该对象中的属性即子组件想要暴露给父组件的函数(方法)；\n第3个参数为可选参数，为函数的依赖变量。凡是函数中使用到的数据变量都需要放入deps中，如果处理函数没有任何依赖变量，可以忽略第3个参数。\n\n请注意：\n1、这里面说的“勾住子组件内自定义函数”本质上是子组件将内部自定义的函数添加到父组件的ref.current上面。\n2、父组件若想调用子组件暴露给自己的函数，可以通过 res.current.xxx 来访问或执行。\n\n# 代码形式：\n\nconst xxx = () => {\n    //do smoting...\n}\nuseimperativehandle(ref,() => ({xxx}));\n\n\n上述代码中，useimperativehandle(ref,() => ({xxx})) 其实是 useimperativehandle(ref,() => {return {xxx:xxx}})的简写。\n\n特别注意：() => ({xxx}) 不可以再简写成 () => {xxx}，如果这样写会直接react报错。\n因为这两种写法意思完全不一样：\n1、() => ({xxx}) 表示 返回一个object对象，该对象为{xxx}\n2、() => {xxx} 表示 执行 xxx 语句代码\n\n# 拆解说明：\n\n1、子组件内部先定义一个 xxx 函数\n2、通过useimperativehandle函数，将 xxx函数包装成一个对象，并将该对象添加到父组件内部定义的ref中。\n3、若 xxx 函数中使用到了子组件内部定义的变量，则还需要将该变量作为 依赖变量 成为useimperativehandle第3个参数，上面示例中则选择忽略了第3个参数。\n4、若父组件需要调用子组件内的 xxx函数，则通过：res.current.xxx()。\n5、请注意，该子组件在导出时必须被 react.forwardref()包裹住才可以。\n\n\n# useimperativehandle使用示例：\n\n举例，若某子组件的需求为：\n1、有变量count，默认值为0\n2、有一个函数 addcount，该函数体内部执行 count+1\n3、有一个按钮，点击按钮执行 addcount 函数\n\n父组件的需求为：\n1、父组件内使用上述子组件\n2、父组件内有一个按钮，点击执行上述子组件内定义的函数 addcount\n\n子组件的代码为：\n\nimport react,{usestate,useimperativehandle} from 'react'\n\nfunction childcomponent(props,ref) {\n  const [count,setcount] =  usestate(0); //子组件定义内部变量count\n  //子组件定义内部函数 addcount\n  const addcount = () => {\n    setcount(count + 1);\n  }\n  //子组件通过useimperativehandle函数，将addcount函数添加到父组件中的ref.current中\n  useimperativehandle(ref,() => ({addcount}));\n  return (\n    <div>\n        {count}\n        <button onclick={addcount}>child</button>\n    </div>\n  )\n}\n\n//子组件导出时需要被react.forwardref包裹，否则无法接收 ref这个参数\nexport default react.forwardref(childcomponent);\n\n\n父组件的代码为：\n\nimport react,{useref} from 'react'\nimport childcomponent from './childcomponent'\n\nfunction imperative() {\n  const childref = useref(null); //父组件定义一个对子组件的引用\n\n  const clickhandle = () => {\n    childref.current.addcount(); //父组件调用子组件内部 addcount函数\n  }\n\n  return (\n    <div>\n        {/* 父组件通过给子组件添加 ref 属性，将childref传递给子组件，\n            子组件获得该引用即可将内部函数添加到childref中 */}\n        <childcomponent ref={childref} />\n        <button onclick={clickhandle}>child component do somting</button>\n    </div>\n  )\n}\n\nexport default imperative;\n\n\n# 思考一下真的有必要使用useimperativehandle吗？\n\n从实际运行的结果，无论点击子组件还是父组件内的按钮，都将执行 addcount函数，使 count+1。\n\nreact为单向数据流，如果为了实现这个效果，我们完全可以把需求转化成另外一种说法，即：\n1、父组件内定义一个变量count 和 addcount函数\n2、父组件把 count 和 addcount 通过属性传值 传递给子组件\n3、点击子组件内按钮时调用父组件内定义的 addcount函数，使 count +1。\n\n你会发现即使把需求中的 父与子组件 描述对调一下，“最终实际效果”是一样的。\n\n所以，到底使用哪种形式，需要根据组件实际需求来做定夺。\n\n# 说一个有点绕的情况\n\n子组件导出时：\n1、假设某个子组件为了提高性能，导出时需要用react.memo包裹。\n2、可是他也需要暴露自己内部函数给父组件，导出时也需要用react.forwardref包裹。\n\n子组件内部函数：\n1、假设该组件内部函数为了性能，需要用到 usecallback包裹该函数。\n2、同时为了让将该函数暴露给父级，也需要用 useimperativehandle包裹。\n\n呵，该怎么办，层层包裹吗？ 虽然性能提升了，可是那样的代码可读性还有多少，怎么办？\n答：不知道，反正本系列文章只是单独来讲解某个hook怎么使用，这种复杂包裹的情况，你自己看着办吧。\n\n事实上这种情况出现的几率非常小，当我们开发react组件时，不应该为了使用某hook而使用。还是应该是依据单向数据流的原则来做设计方案。\n就好像本章中示例代码，其实完全可以不用useimperativehandle，而是继续使用最常见的父组件属性传值给子组件的方式。\n\n----------------------------------------\n\n至此，关于useimperativehandle基础用法已经讲完，没有高级用法，直接进入下一个hook。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"14 useLayoutEffect基础用法",frontmatter:{title:"14 useLayoutEffect基础用法",date:"2023-09-18T15:57:04.000Z",permalink:"/pages/1b392f/"},regularPath:"/03.react/14.useLayoutEffect%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95.html",relativePath:"03.react/14.useLayoutEffect基础用法.md",key:"v-3b9dbf9c",path:"/pages/1b392f/",headers:[{level:2,title:"useLayoutEffect概念解释",slug:"uselayouteffect概念解释",normalizedTitle:"uselayouteffect概念解释",charIndex:29},{level:2,title:"useLayoutEffect是来解决什么问题的？",slug:"uselayouteffect是来解决什么问题的",normalizedTitle:"uselayouteffect是来解决什么问题的？",charIndex:809},{level:2,title:"useLayoutEffect函数源码：",slug:"uselayouteffect函数源码",normalizedTitle:"uselayouteffect函数源码：",charIndex:1143},{level:2,title:"useLayoutEffect基本用法",slug:"uselayouteffect基本用法",normalizedTitle:"uselayouteffect基本用法",charIndex:1564},{level:2,title:"useLayoutEffect使用示例：",slug:"uselayouteffect使用示例",normalizedTitle:"uselayouteffect使用示例：",charIndex:1631}],headersStr:"useLayoutEffect概念解释 useLayoutEffect是来解决什么问题的？ useLayoutEffect函数源码： useLayoutEffect基本用法 useLayoutEffect使用示例：",content:"# 14 useLayoutEffect基础用法\n\n\n# useLayoutEffect概念解释\n\n我们第九个要学习的Hook(钩子函数)是useLayoutEffect，他的作用是“勾住”挂载或重新渲染完成这2个组件生命周期函数。useLayoutEffect使用方法、所传参数和useEffect完全相同。\n\n他们的不同点在于，你可以把useLayoutEffect等同于componentDidMount、componentDidUpdate，因为他们调用阶段是相同的。而useEffect是在componentDidMount、componentDidUpdate调用之后才会触发的。\n\n也就是说，当组件所有DOM都渲染完成后，同步调用useLayoutEffect，然后再调用useEffect。\n\nuseLayoutEffect永远要比useEffect先触发完成。\n\n那通常在useLayoutEffect阶段我们可以做什么呢？\n答：在触发useLayoutEffect阶段时，页面全部DOM已经渲染完成，此时可以获取当前页面所有信息，包括页面显示布局等，你可以根据需求修改调整页面。\n\n请注意，useLayoutEffect对页面的某些修改调整可能会触发组件重新渲染。如果是对DOM进行一些样式调整是不会触发重新渲染的，这点和useEffect是相同的。\n\n在react官方文档中，明确表示只有在useEffect不能满足你组件需求的情况下，才应该考虑使用useLayoutEffect。 官方推荐优先使用useEffect。\n\n请注意：如果是服务器渲染，无论useEffect还是useLayoutEffect 都无法在JS代码加载完成之前执行，因此都会收到错误警告。 服务器渲染时若想使用useEffect，解决方案不在本章中讨论。\n\n让我们回到useLayoutEffect基础学习中。\n\n\n# useLayoutEffect是来解决什么问题的？\n\n答：useLayoutEffect的作用是“当页面挂载或渲染完成时，再给你一次机会对页面进行修改”。\n\n如果你选择使用useLayoutEffect，对页面进行了修改，更改样式不会引发重新渲染，但是修改变量则会触发再次渲染。\n如果你不使用useLayoutEffect，那么之后就应该调用useEffect。\n\n补充说明：\n1、优先使用useEffect，useEffect无法满足需求时再考虑使用useLayoutEffect。\n2、useLayoutEffect先触发，useEffect后触发。\n3、useEffect和useLayoutEffect在服务器端渲染时，都不行，需要寻求别的解决方案。\n\n\n# useLayoutEffect函数源码：\n\n回到useLayoutEffect的学习中，首先看一下React源码中的ReactHooks.js。\n\n//备注：源码采用TypeScript编写，如果不懂TS代码，阅读起来稍显困难\nexport function useLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用Hook”，并不是“Hook源码分析”。^_^ 你只需知道useLayoutEffect的用法和useEffect一模一样即可。\n\n\n# useLayoutEffect基本用法\n\nuseLayoutEffect的用法和useEffect的用法相同，所以不再阐述。\n\n\n# useLayoutEffect使用示例：\n\n请原谅，目前竟然找不到一个useLayoutEffect合适的例子，因为能够想到的应用场景其实都可以用useEffect来代替。\n\n那只能贴出一段简单的代码，让你看确认一下，useLayoutEffect先于useEffect触发调用。\n\n代码示例如下：\n\nimport React,{useState,useEffect,useLayoutEffect} from 'react'\n\nfunction LayoutEffect() {\n  const [count,setCount] = useState(0);\n\n  useEffect(() => {\n    console.log('useEffect...');\n  },[count]);\n\n  useLayoutEffect(() => {\n    console.log('useLayoutEffect...');\n  },[count]);\n\n  return (\n    <div>\n        {count}\n        <button onClick={() => {setCount(count+1)}}>Click</button>\n    </div>\n  )\n}\nexport default LayoutEffect\n\n\n实际运行就会发现：\n无论是首次挂载，还是重新渲染，console面板中，输出顺序都是\nuseLayoutEffect...\nuseEffect...\n\n也就确认，先执行useLayoutEffect，后执行useEffect。\n\n----------------------------------------\n\n至此，关于useLayoutEffect基础用法已经讲完，没有高级用法，直接进入下一个Hook。",normalizedContent:"# 14 uselayouteffect基础用法\n\n\n# uselayouteffect概念解释\n\n我们第九个要学习的hook(钩子函数)是uselayouteffect，他的作用是“勾住”挂载或重新渲染完成这2个组件生命周期函数。uselayouteffect使用方法、所传参数和useeffect完全相同。\n\n他们的不同点在于，你可以把uselayouteffect等同于componentdidmount、componentdidupdate，因为他们调用阶段是相同的。而useeffect是在componentdidmount、componentdidupdate调用之后才会触发的。\n\n也就是说，当组件所有dom都渲染完成后，同步调用uselayouteffect，然后再调用useeffect。\n\nuselayouteffect永远要比useeffect先触发完成。\n\n那通常在uselayouteffect阶段我们可以做什么呢？\n答：在触发uselayouteffect阶段时，页面全部dom已经渲染完成，此时可以获取当前页面所有信息，包括页面显示布局等，你可以根据需求修改调整页面。\n\n请注意，uselayouteffect对页面的某些修改调整可能会触发组件重新渲染。如果是对dom进行一些样式调整是不会触发重新渲染的，这点和useeffect是相同的。\n\n在react官方文档中，明确表示只有在useeffect不能满足你组件需求的情况下，才应该考虑使用uselayouteffect。 官方推荐优先使用useeffect。\n\n请注意：如果是服务器渲染，无论useeffect还是uselayouteffect 都无法在js代码加载完成之前执行，因此都会收到错误警告。 服务器渲染时若想使用useeffect，解决方案不在本章中讨论。\n\n让我们回到uselayouteffect基础学习中。\n\n\n# uselayouteffect是来解决什么问题的？\n\n答：uselayouteffect的作用是“当页面挂载或渲染完成时，再给你一次机会对页面进行修改”。\n\n如果你选择使用uselayouteffect，对页面进行了修改，更改样式不会引发重新渲染，但是修改变量则会触发再次渲染。\n如果你不使用uselayouteffect，那么之后就应该调用useeffect。\n\n补充说明：\n1、优先使用useeffect，useeffect无法满足需求时再考虑使用uselayouteffect。\n2、uselayouteffect先触发，useeffect后触发。\n3、useeffect和uselayouteffect在服务器端渲染时，都不行，需要寻求别的解决方案。\n\n\n# uselayouteffect函数源码：\n\n回到uselayouteffect的学习中，首先看一下react源码中的reacthooks.js。\n\n//备注：源码采用typescript编写，如果不懂ts代码，阅读起来稍显困难\nexport function uselayouteffect(\n  create: () => (() => void) | void,\n  deps: array<mixed> | void | null,\n): void {\n  const dispatcher = resolvedispatcher();\n  return dispatcher.uselayouteffect(create, deps);\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用hook”，并不是“hook源码分析”。^_^ 你只需知道uselayouteffect的用法和useeffect一模一样即可。\n\n\n# uselayouteffect基本用法\n\nuselayouteffect的用法和useeffect的用法相同，所以不再阐述。\n\n\n# uselayouteffect使用示例：\n\n请原谅，目前竟然找不到一个uselayouteffect合适的例子，因为能够想到的应用场景其实都可以用useeffect来代替。\n\n那只能贴出一段简单的代码，让你看确认一下，uselayouteffect先于useeffect触发调用。\n\n代码示例如下：\n\nimport react,{usestate,useeffect,uselayouteffect} from 'react'\n\nfunction layouteffect() {\n  const [count,setcount] = usestate(0);\n\n  useeffect(() => {\n    console.log('useeffect...');\n  },[count]);\n\n  uselayouteffect(() => {\n    console.log('uselayouteffect...');\n  },[count]);\n\n  return (\n    <div>\n        {count}\n        <button onclick={() => {setcount(count+1)}}>click</button>\n    </div>\n  )\n}\nexport default layouteffect\n\n\n实际运行就会发现：\n无论是首次挂载，还是重新渲染，console面板中，输出顺序都是\nuselayouteffect...\nuseeffect...\n\n也就确认，先执行uselayouteffect，后执行useeffect。\n\n----------------------------------------\n\n至此，关于uselayouteffect基础用法已经讲完，没有高级用法，直接进入下一个hook。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"15 useDebugValue基础用法",frontmatter:{title:"15 useDebugValue基础用法",date:"2023-09-18T16:01:07.000Z",permalink:"/pages/e1ebef/"},regularPath:"/03.react/15.useDebugValue%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95.html",relativePath:"03.react/15.useDebugValue基础用法.md",key:"v-1afb1872",path:"/pages/e1ebef/",headers:[{level:2,title:"useDebugValue概念解释",slug:"usedebugvalue概念解释",normalizedTitle:"usedebugvalue概念解释",charIndex:27},{level:5,title:"“React开发调试工具”是什么？",slug:"react开发调试工具-是什么",normalizedTitle:"“react开发调试工具”是什么？",charIndex:150},{level:2,title:"useDebugValue是来解决什么问题的？",slug:"usedebugvalue是来解决什么问题的",normalizedTitle:"usedebugvalue是来解决什么问题的？",charIndex:702},{level:5,title:"自定义hook？",slug:"自定义hook",normalizedTitle:"自定义hook？",charIndex:928},{level:2,title:"useDebugValue函数源码：",slug:"usedebugvalue函数源码",normalizedTitle:"usedebugvalue函数源码：",charIndex:1141},{level:2,title:"useDebugValue基本用法",slug:"usedebugvalue基本用法",normalizedTitle:"usedebugvalue基本用法",charIndex:1525},{level:5,title:"代码形式：",slug:"代码形式",normalizedTitle:"代码形式：",charIndex:1819},{level:5,title:"拆解说明：",slug:"拆解说明",normalizedTitle:"拆解说明：",charIndex:1863},{level:2,title:"如何在react调试工具中查看useDebugValue表现形式",slug:"如何在react调试工具中查看usedebugvalue表现形式",normalizedTitle:"如何在react调试工具中查看usedebugvalue表现形式",charIndex:1952},{level:2,title:"useDebugValue使用示例：",slug:"usedebugvalue使用示例",normalizedTitle:"usedebugvalue使用示例：",charIndex:2244},{level:5,title:"具体表现",slug:"具体表现",normalizedTitle:"具体表现",charIndex:2834},{level:5,title:"再次强调，对于一般性的项目开发，是不需要使用useDebugValue来额外标记某些变量的，默认的调试输出足够我们使用了。",slug:"再次强调-对于一般性的项目开发-是不需要使用usedebugvalue来额外标记某些变量的-默认的调试输出足够我们使用了。",normalizedTitle:"再次强调，对于一般性的项目开发，是不需要使用usedebugvalue来额外标记某些变量的，默认的调试输出足够我们使用了。",charIndex:3326}],headersStr:"useDebugValue概念解释 “React开发调试工具”是什么？ useDebugValue是来解决什么问题的？ 自定义hook？ useDebugValue函数源码： useDebugValue基本用法 代码形式： 拆解说明： 如何在react调试工具中查看useDebugValue表现形式 useDebugValue使用示例： 具体表现 再次强调，对于一般性的项目开发，是不需要使用useDebugValue来额外标记某些变量的，默认的调试输出足够我们使用了。",content:"# 15 useDebugValue基础用法\n\n\n# useDebugValue概念解释\n\n我们第十个要学习的Hook(钩子函数)是useDebugValue，他的作用是“勾住”React开发调试工具中的自定义hook标签，让useDebugValue勾住的自定义hook可以显示额外的信息。\n\n# “React开发调试工具”是什么？\n\n答：谷歌浏览器中的一个扩展插件，名字叫“React Developer Tools”，方便我们在谷歌浏览器上进行react项目调试。\n\n如何安装？\n答：可在Chrome扩展程序商店搜索并安装。由于国内网络原因，如果你不会科学上网，那么可以通过国内的一些Chrome扩展程序商店网站，下载“React Developer Tools”离线的crx安装文件进行安装。具体办法可以自己百度。\n\n“React开发调试工具”的使用简单说明：\n如果该扩展程序安装成功，那么会有以下几种情况：\n1、对于本机开发调试的项目网页，该插件图标会变成橘黄色，且图标中间有一个小虫子，表示可以进行react源码式的调试，当代码出现错误时会精准定位出错的代码位置。\n\n2、对于别人开发的项目网页，该插件图标会变成蓝色，表示该网页由react开发，当代码出现错误时不能精准定位出错的代码位置。\n例如阿里云后台、腾讯云后台、百度翻译这些网页都是用react开发，访问这些网页你就会看到 调试工具图光标为蓝色。 这些大厂都用react，所以虽然学习过程中很痛苦，但是是值得的。\n\n3、对于没有使用react的网页，该插件图标会变成灰色。\n\n让我们回到useDebugValue基础学习中。\n\n\n# useDebugValue是来解决什么问题的？\n\n答：useDebugValue的目的是“在react开发者工具自定义hook标签中显示额外信息”，方便我们“一眼就能找到”对应的自定义hook。\n\n补充说明：\n1、react官网文档中明确表示，在普通项目开发中不推荐使用useDebugValue，默认的调试输出已经很清晰可用了。\n2、除非你的自定义 hook 是作为共享库中的一部分才有价值。这样其他人更容易注意到你自定义的hook状态变化。\n\n# 自定义hook？\n\n你可能注意到本章中提到了“自定义hook”，没错。像之前学习的useState、useContext等等都是react自带的hook，这些默认的hook是我们项目开发所需要用到的各种钩子函数。\n\n但是实际开发中，我们需要借助这些基础的、默认的、自带的hook函数，通过组合以及添加业务逻辑代码，形成自己的hook函数。\n\n具体如何自定义hook，稍后会单独有一章如何“自定义hook”中详细讲述。\n\n\n# useDebugValue函数源码：\n\n回到useDebugValue的学习中，首先看一下React源码中的ReactHooks.js。\n\n//备注：源码采用TypeScript编写，如果不懂TS代码，阅读起来稍显困难\nexport function useDebugValue<T>(\n  value: T,\n  formatterFn: ?(value: T) => mixed,\n): void {\n    if (__DEV__) {\n    const dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用Hook”，并不是“Hook源码分析”。^_^\n\n\n# useDebugValue基本用法\n\nuseDebugValue(value,formatterFn)函数第1个参数为我们要额外显示的内容变量。第2个参数是可选的，是对第1个参数值的数据化格式函数。\n\n请注意：\n1、useDebugValue应该在自定义hook中使用，如果直接在组件内使用是无效的，不会报错也不会有任何额外信息展示。\n1、一般调试不需要使用useDebugValue，除非你编写的hook是公共库中的一部分，实在是想凸显额外信息，引起别人注意。\n2、如果使用useDebugValue，最好设置第2个参数，向react开发调试工具讲清楚如何格式化展示第1个参数。\n\n# 代码形式：\n\nuseDebugValue(xxx, xxx => xxxxx)\n\n\n# 拆解说明：\n\n1、xxx 为我们要重点关注的变量。\n2、xxx => xxxxx 是 (xxx) => {return xxxxx} 的简写。表明如何格式化变量xxx。\n\n\n# 如何在react调试工具中查看useDebugValue表现形式\n\n前提条件：\n1、在谷歌浏览器中成功安装了react开发调试工具\n2、react项目中使用了自定义hook，且hook中使用了useDebugValue\n\n那么你可以进行一下步骤：\n1、打开react调试网页，例如http://localhost:3000/\n2、打开谷歌浏览器调试面板(快捷键为F12)\n3、找到并点击“Components”一栏\n4、在右侧窗口中，找到“hooks”，在“hooks”下就能看到自定义hook中useDebugValue自定义显示的信息。\n\n具体还是以下面实际例子来说明。\n\n\n# useDebugValue使用示例：\n\n举例：useTime是我们自定义的一个hook函数，那么在这个自定义hook中，可以通过useDebugValue对变量time进行额外信息展示。\n\n代码示例如下：\n\n//自定义hook：useTime\nfunction useTime(date){\n  const [time,setTime] = useState(date);\n  useDebugValue(time,time => new Date(time));//请注意这一行代码\n  return [time,setTime];\n}\n\n//组件中使用useTime，伪代码片段\nconst [time,setTime] = useTime(Date.now());//请注意此处使用的是自定义hook：useTime\n\n\n代码分析：\n1、我们在自定义hook中，使用了useDebugValue\n2、useDebugValue第1个参数是time，向react开发调试工具表明要重点关注的变量是time。\n3、第2个参数是对time的一个格式化函数。由于time实际为一个时间戳数字，通过time => new Date(time)将时间戳转化成具体的可读时间字符串，例如此时此刻：Mon May 11 2020 14:27:39 GMT+0800 (中国标准时间)\n\n# 具体表现\n\n在谷歌浏览器调试面板的“Component”右侧，你会看到：\n\nhooks  \n  time:Mon May 11 2020 14:27:39 GMT+0800 (中国标准时间)  \n    State:1589178459090  \n\n\n假设不使用useDebuValue，默认看到的是：\n\nhooks  \n  time: \n    State:1589178459090  \n\n\n“Mon May 11 2020 14:27:39 GMT+0800 (中国标准时间) ”就是useDebugValue额外展示出的信息。\n\n你甚至还可以使用模板字符串，对格式化数据进行修改，比如将原本的第2个参数 time => new Date(time) 修改为：time => `看这里 ${new Date(time)}`\n\n在谷歌浏览器调试面板的“Component”右侧，你会看到：\n\nhooks  \n  time:看这里 Mon May 11 2020 14:27:39 GMT+0800 (中国标准时间)  \n    State:1589178459090  \n\n\n# 再次强调，对于一般性的项目开发，是不需要使用useDebugValue来额外标记某些变量的，默认的调试输出足够我们使用了。\n\n----------------------------------------\n\n至此，关于useDebugValue基础用法已经讲完，没有高级用法，直接进入下一个Hook。\n\n不！基于react 16.13版本的全部 hook，终于讲完了，没有下一个hook了。\n\n能坚持到现在，真的不容易，默认自带的 react hook 学完后，还需要学习如何自定义hook...\n扶我起来，再坚持一下。",normalizedContent:"# 15 usedebugvalue基础用法\n\n\n# usedebugvalue概念解释\n\n我们第十个要学习的hook(钩子函数)是usedebugvalue，他的作用是“勾住”react开发调试工具中的自定义hook标签，让usedebugvalue勾住的自定义hook可以显示额外的信息。\n\n# “react开发调试工具”是什么？\n\n答：谷歌浏览器中的一个扩展插件，名字叫“react developer tools”，方便我们在谷歌浏览器上进行react项目调试。\n\n如何安装？\n答：可在chrome扩展程序商店搜索并安装。由于国内网络原因，如果你不会科学上网，那么可以通过国内的一些chrome扩展程序商店网站，下载“react developer tools”离线的crx安装文件进行安装。具体办法可以自己百度。\n\n“react开发调试工具”的使用简单说明：\n如果该扩展程序安装成功，那么会有以下几种情况：\n1、对于本机开发调试的项目网页，该插件图标会变成橘黄色，且图标中间有一个小虫子，表示可以进行react源码式的调试，当代码出现错误时会精准定位出错的代码位置。\n\n2、对于别人开发的项目网页，该插件图标会变成蓝色，表示该网页由react开发，当代码出现错误时不能精准定位出错的代码位置。\n例如阿里云后台、腾讯云后台、百度翻译这些网页都是用react开发，访问这些网页你就会看到 调试工具图光标为蓝色。 这些大厂都用react，所以虽然学习过程中很痛苦，但是是值得的。\n\n3、对于没有使用react的网页，该插件图标会变成灰色。\n\n让我们回到usedebugvalue基础学习中。\n\n\n# usedebugvalue是来解决什么问题的？\n\n答：usedebugvalue的目的是“在react开发者工具自定义hook标签中显示额外信息”，方便我们“一眼就能找到”对应的自定义hook。\n\n补充说明：\n1、react官网文档中明确表示，在普通项目开发中不推荐使用usedebugvalue，默认的调试输出已经很清晰可用了。\n2、除非你的自定义 hook 是作为共享库中的一部分才有价值。这样其他人更容易注意到你自定义的hook状态变化。\n\n# 自定义hook？\n\n你可能注意到本章中提到了“自定义hook”，没错。像之前学习的usestate、usecontext等等都是react自带的hook，这些默认的hook是我们项目开发所需要用到的各种钩子函数。\n\n但是实际开发中，我们需要借助这些基础的、默认的、自带的hook函数，通过组合以及添加业务逻辑代码，形成自己的hook函数。\n\n具体如何自定义hook，稍后会单独有一章如何“自定义hook”中详细讲述。\n\n\n# usedebugvalue函数源码：\n\n回到usedebugvalue的学习中，首先看一下react源码中的reacthooks.js。\n\n//备注：源码采用typescript编写，如果不懂ts代码，阅读起来稍显困难\nexport function usedebugvalue<t>(\n  value: t,\n  formatterfn: ?(value: t) => mixed,\n): void {\n    if (__dev__) {\n    const dispatcher = resolvedispatcher();\n    return dispatcher.usedebugvalue(value, formatterfn);\n  }\n}\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用hook”，并不是“hook源码分析”。^_^\n\n\n# usedebugvalue基本用法\n\nusedebugvalue(value,formatterfn)函数第1个参数为我们要额外显示的内容变量。第2个参数是可选的，是对第1个参数值的数据化格式函数。\n\n请注意：\n1、usedebugvalue应该在自定义hook中使用，如果直接在组件内使用是无效的，不会报错也不会有任何额外信息展示。\n1、一般调试不需要使用usedebugvalue，除非你编写的hook是公共库中的一部分，实在是想凸显额外信息，引起别人注意。\n2、如果使用usedebugvalue，最好设置第2个参数，向react开发调试工具讲清楚如何格式化展示第1个参数。\n\n# 代码形式：\n\nusedebugvalue(xxx, xxx => xxxxx)\n\n\n# 拆解说明：\n\n1、xxx 为我们要重点关注的变量。\n2、xxx => xxxxx 是 (xxx) => {return xxxxx} 的简写。表明如何格式化变量xxx。\n\n\n# 如何在react调试工具中查看usedebugvalue表现形式\n\n前提条件：\n1、在谷歌浏览器中成功安装了react开发调试工具\n2、react项目中使用了自定义hook，且hook中使用了usedebugvalue\n\n那么你可以进行一下步骤：\n1、打开react调试网页，例如http://localhost:3000/\n2、打开谷歌浏览器调试面板(快捷键为f12)\n3、找到并点击“components”一栏\n4、在右侧窗口中，找到“hooks”，在“hooks”下就能看到自定义hook中usedebugvalue自定义显示的信息。\n\n具体还是以下面实际例子来说明。\n\n\n# usedebugvalue使用示例：\n\n举例：usetime是我们自定义的一个hook函数，那么在这个自定义hook中，可以通过usedebugvalue对变量time进行额外信息展示。\n\n代码示例如下：\n\n//自定义hook：usetime\nfunction usetime(date){\n  const [time,settime] = usestate(date);\n  usedebugvalue(time,time => new date(time));//请注意这一行代码\n  return [time,settime];\n}\n\n//组件中使用usetime，伪代码片段\nconst [time,settime] = usetime(date.now());//请注意此处使用的是自定义hook：usetime\n\n\n代码分析：\n1、我们在自定义hook中，使用了usedebugvalue\n2、usedebugvalue第1个参数是time，向react开发调试工具表明要重点关注的变量是time。\n3、第2个参数是对time的一个格式化函数。由于time实际为一个时间戳数字，通过time => new date(time)将时间戳转化成具体的可读时间字符串，例如此时此刻：mon may 11 2020 14:27:39 gmt+0800 (中国标准时间)\n\n# 具体表现\n\n在谷歌浏览器调试面板的“component”右侧，你会看到：\n\nhooks  \n  time:mon may 11 2020 14:27:39 gmt+0800 (中国标准时间)  \n    state:1589178459090  \n\n\n假设不使用usedebuvalue，默认看到的是：\n\nhooks  \n  time: \n    state:1589178459090  \n\n\n“mon may 11 2020 14:27:39 gmt+0800 (中国标准时间) ”就是usedebugvalue额外展示出的信息。\n\n你甚至还可以使用模板字符串，对格式化数据进行修改，比如将原本的第2个参数 time => new date(time) 修改为：time => `看这里 ${new date(time)}`\n\n在谷歌浏览器调试面板的“component”右侧，你会看到：\n\nhooks  \n  time:看这里 mon may 11 2020 14:27:39 gmt+0800 (中国标准时间)  \n    state:1589178459090  \n\n\n# 再次强调，对于一般性的项目开发，是不需要使用usedebugvalue来额外标记某些变量的，默认的调试输出足够我们使用了。\n\n----------------------------------------\n\n至此，关于usedebugvalue基础用法已经讲完，没有高级用法，直接进入下一个hook。\n\n不！基于react 16.13版本的全部 hook，终于讲完了，没有下一个hook了。\n\n能坚持到现在，真的不容易，默认自带的 react hook 学完后，还需要学习如何自定义hook...\n扶我起来，再坚持一下。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"16 自定义hook",frontmatter:{title:"16 自定义hook",date:"2023-09-18T16:40:07.000Z",permalink:"/pages/c38877/"},regularPath:"/03.react/16.%E8%87%AA%E5%AE%9A%E4%B9%89hook.html",relativePath:"03.react/16.自定义hook.md",key:"v-3a895b40",path:"/pages/c38877/",headers:[{level:2,title:"自定义hook概念解释",slug:"自定义hook概念解释",normalizedTitle:"自定义hook概念解释",charIndex:17},{level:2,title:"自定义hook是来解决什么问题的？",slug:"自定义hook是来解决什么问题的",normalizedTitle:"自定义hook是来解决什么问题的？",charIndex:293},{level:2,title:"自定义hook基本用法",slug:"自定义hook基本用法",normalizedTitle:"自定义hook基本用法",charIndex:520},{level:5,title:"代码分析：",slug:"代码分析",normalizedTitle:"代码分析：",charIndex:1907},{level:2,title:"不带返回值的自定义hook使用示例：",slug:"不带返回值的自定义hook使用示例",normalizedTitle:"不带返回值的自定义hook使用示例：",charIndex:2400},{level:2,title:"带普通返回值的自定义hook使用示例：",slug:"带普通返回值的自定义hook使用示例",normalizedTitle:"带普通返回值的自定义hook使用示例：",charIndex:3525},{level:2,title:"带特殊结构返回值的自定义hook使用示例：",slug:"带特殊结构返回值的自定义hook使用示例",normalizedTitle:"带特殊结构返回值的自定义hook使用示例：",charIndex:4990}],headersStr:"自定义hook概念解释 自定义hook是来解决什么问题的？ 自定义hook基本用法 代码分析： 不带返回值的自定义hook使用示例： 带普通返回值的自定义hook使用示例： 带特殊结构返回值的自定义hook使用示例：",content:"# 16 自定义hook\n\n\n# 自定义hook概念解释\n\n像useState、useEffect、useContext、useReducer、useCallback、useMemo、useRef、useImperativeHandle、useLayoutEffect、useDebugValue这10个hook是react默认自带的hook，而所谓自定义hook就是由我们自己编写的hook。\n\n所谓自定义hook就是把原来写在函数组件内的hook相关代码抽离出来，单独定义成一个函数，而这个抽离出来的hook函数就称之为“自定义hook钩子函数”，简称“自定义hook”。\n\n\n# 自定义hook是来解决什么问题的？\n\n答：自定义hook是将原来在组件中编写的相关hook代码抽离出组件，让hook相关代码独立存在，达到优化代码结构、相关hook代码可以重复使用的目的。\n\n补充说明：\n1、如果你在别人的项目代码中，发现除了react默认自带的那10个hook以外，出现了 useXxx() 这样的看着像hook的函数，可以肯定那些就是自定义的hook。\n2、随着react新版本发布，可能会出现更多新的、默认自带的hook。\n\n\n# 自定义hook基本用法\n\n首先我们知道hook只能用在函数组件中，而函数组件本身是一个稍微特殊的函数，尽管稍微特殊但毕竟他也遵循一般函数的使用规律。 所谓“把原来写在函数组件内的hook相关代码抽离出来，单独定义成一个函数” 本质上就是把函数内部定义的变量或方法拿出来，放到函数外面单独定义成一个函数。\n\n这个抽离出来新定义的函数，遵循JS默认的函数用法，即函数参数可以任意设定，返回值也可以是任意内容。\n\n请注意：react规定所有的自定义hook函数命名时必须使用 useXxx 这种形式。\n\n举一个最简单的例子：假设我们有一个组件，组件内部有一个count的变量，我们的代码之前是这样的：\n\nimport React,{useState} from 'react'\nfunction CurrentComponent() {\n  const [count,setCount] = useState(0);//请注意这行代码，就是我们要即将抽离出去的hook\n  return (\n    <div>\n        {count}\n        <button onClick={() => setCount(count+1)}>add +1</button>\n    </div>\n  )\n}\nexport default CurrentComponent\n\n\n在上面这个组件中，通过 const [count,setCount] = useState(0) 定义了组件内的变量count和修改count的方法。那我们现在将这行相关的hook抽离出函数组件。我们计划把抽离出来的、和count相关的函数，命名为useCount，修改后的代码如下：\n\n//useCount.js\nimport {useState} from 'react'；\nfunction useCount(initialValue){\n\n  //依然使用 useState 创建countcount和setCount\n  //并且将参数initialValue的值赋予给count作为默认值\n  //将创建好的count和setCount作为函数返回值 return 出去\n\n  const [count,setCount] = useState(initialValue);\n  return [count,setCount];\n}\nexport default useCount;\n\n//CurrentComponent.js\nimport React from 'react'\nimport useCount from './useCount';//引入useCount\nfunction CurrentComponent() {\n  const [count,setCount] = useCount(0);//请注意这里使用的是useCount，而不是useState\n  return (\n    <div>\n        {count}\n        <button onClick={() => setCount(count+1)}>add +1</button>\n    </div>\n  )\n}\nexport default CurrentComponent\n\n\n# 代码分析：\n\n1、我们将原本组件内定义的count相关代码抽离出组件，单独定义一个 useCount 函数。\n2、组件需要使用 useCount，只需先引入useCount，然后把 useCount 当成普通函数使用就好了。\n3、useCount就是我们自定义的hook。\n\n注意：一般自定义hook顶部是不需要引入React的，只需要引入使用到的 hook 函数即可。\n例如上面 useCount 顶部，我们写的是 import {useState} from 'react' 而不是 import React,{useState} from 'react'；\n\n上面举例中的useCount非常简单，内部并没有过多逻辑，在实际开发中自定义hook内部肯定要有比较复杂的逻辑。\n\n由于是单独定义的，所以自定义hook可以同时被多个组件引入和使用，达到代码复用的目的。\n\n划重点，在实际项目中，通常自定义hook返回值有3种表现形式：\n1、不带返回值的函数\n2、带普通返回值的函数\n3、带特殊结构返回值的函数\n\n以上3种不同返回值各有各的适用场景，下面就以实际示例来逐一说明。\n\n\n# 不带返回值的自定义hook使用示例：\n\n举例：若父组件内有多个子组件，每个子组件内部都有不同的业务代码，但是所有子组件有一个相同的功能，就是当自身内部变量value发生变化时，将网页标题改为变量value的值。\n\n首先我们知道修改网页标题是在组件内部的useEffect()函数中修改，那结合上面的使用场景，我们可以将useEffect()单独抽离出来，作为一个自定义hook，命名为 useDocumentTitle，让所有子组件都复用这个useDocumentTitle。\n\nuseDocumentTitle 代码如下：\n\nimport {useEffect} from 'react'\nfunction useDocumentTitle(value) {\n  useEffect(() => {\n    document.title = value;\n  },[value]);\n}\nexport default useDocumentTitle;\n\n\n假设我们其中一个子组件的功能为：\n1、有1个number类型的变量count\n2、有1个按钮，点击按钮后将count修改为一个随机数字\n3、当组件重新渲染完成后，将网页标题修改为count的值\n\n子组件代码为：\n\nimport React,{useState} from 'react'\nimport useDocumentTitle from './useDocumentTitle';\nfunction ChildComponent() {\n  const [count,setCount] = useState(0);\n  useDocumentTitle(count);//把内部变量count传给useDocumentTitle，既作为网页标题内容，同时也作为useEffect的变量依赖\n  return (\n    <div>\n        <button onClick={() => setCount(Math.floor(Math.random()*1000))}>click me</button>\n    </div>\n  )\n}\nexport default ChildComponent\n\n\n其他子组件也使用useDocumentTitle，这样我们便将原本每个子组件都需要编写的useEffect改为统一的useDocumentTitle，实现了代码复用。\n\n应用场景小总结：\n在这个示例中，useDocumentTitle函数并没有任何返回值，子组件使用useDocumentTitle时就好像原本那段useEffect代码本身就定义在那里似的。\n\n\n# 带普通返回值的自定义hook使用示例：\n\n在本章最开始讲解“自定义hook基本用法”时，所举的useCount例子非常简单，这次我们将对useCount进行功能上的扩展。\n\n原本useCount只是定义了count和setCount，这次所谓的功能扩展，就是将setCount改为其他几种修改count的函数。\n例如：\n1、添加 add()\n2、减去 sub()\n3、相乘 mul()\n4、恢复初始值 reset()\n\n修改后的useCount代码为：\n\nimport {useState} from 'react'\nfunction useCount(initialValue){\n  const [count,setCount] = useState(initialValue);\n  const add = param => {setCount(prev => prev + param);}\n  const sub = param => {setCount(prev => prev - param);}\n  const mul = param => {setCount(prev => prev * param);}\n  const reset = () => {setCount(() => initialValue);}\n  return [count,add,sub,mul,reset]; //将count和定义的4个方法作为返回值 return 出去\n}\nexport default useCount;\n\n\n请注意：为了避免4个修改函数中得到的是旧的count，所以我们采用的是 setCount(prev => xxxxx) 这种修改方式，而不是直接使用 setCount(count xxx)。\n\nCurrentComponent组件想使用useCount，代码为：\n\nimport React from 'react'\nimport useCount from './useCount'\n\nfunction CurrentComponent() {\n  const [count,add,sub,mul,reset] = useCount(0); //使用useCount，并解构useCount的返回值\n  return (\n    <div>\n        {count}\n        <button onClick={() => {add(1)}}>+ 1</button>\n        <button onClick={() => {sub(1)}}>- 1</button>\n        <button onClick={() => {mul(2)}}>* 2</button>\n        <button onClick={() => {reset()}}>reset</button>\n    </div>\n  )\n}\nexport default CurrentComponent\n\n\n对于上面这个效果，你是否觉得眼熟？ 没错，在讲解useReducer时，就使用useReducer实现了类似的一个效果。 只不过这次是为了讲解自定义hook，而那次是讲解如何使用useReducer替代useState实现复杂的业务。\n\n应用场景小总结：\n1、我们可以在自定义hook中编写相关业务逻辑函数(方法)，并通过返回值的形式 return 出去，供其他组件调用。\n\n\n# 带特殊结构返回值的自定义hook使用示例：\n\n上一个代码示例讲解了“带普通返回值”的自定义hook，那这次要讲的“带特殊结构返回值”的自定义hook究竟差别在哪里？\n\n“带特殊结构返回值”中的特殊是指？\n答：我们把组件需要用到的多项属性设置，合并为一个对象 并 return 出去，供组件使用。\n\n还是以示例来讲解会更容易理解，假设我们有一个登录组件，功能为：\n1、有一个用户名输入框\n2、有一个密码输入框\n3、有一个提交按钮\n\n补充说明，为了简化代码，我们并不做真正的登录验证，点击提交按钮后：\n1、仅仅是alert一下用户名和密码，即表示登录\n2、同时清除用户名和密码输入框里的内容\n\n需求分析：\n1、每个输入框都是一个<input>，都需要绑定一个变量，都需要设置onChange事件\n2、每一个输入框都需要清空内容\n\n我们将定义一个自定义hook，命名为useInput，useInput来实现这2个输入框共有的业务逻辑。\n\nuseInput的代码为：\n\nimport {useState} from 'react'\nfunction useInput(initialValue) {\n  const [value,setValue] = useState(initialValue); //定义输入框对应的值value\n  //定义reset函数，用来重置输入框\n  const reset = () => {\n    setValue(initialValue);\n  }\n  //定义一个 bind 对象，该对象有 value 和 onChange 2个属性\n  const bind = {\n    value,\n    onChange: eve => {\n        setValue(eve.target.value)\n    }\n  }\n  return [value,reset,bind];//将输入框的值、重置输入框函数、定义的bind对象作为返回值 return 出去\n}\nexport default useInput\n\n\n请注意：在useInput中，返回值 value、reset 我们很容易理解，但是 bind 是来做什么的？\n答：这个 bind 就是我们前面提到的“带特殊结构返回值”，bind对象本身结构由2个属性value和onChange组成。\n至于 bind 怎么用，很快揭晓。\n\n登录组件LoginForm的代码为：\n\nimport React from 'react'\nimport useInput from './useInput';\nfunction LoginForm() {\n  const [usename,resetUsename,bindUsename] = useInput(''); //定义用户名输入框相关的变量\n  const [password,resetPassword,bindPassword] = useInput(''); //定义密码输入框相关的变量\n\n  const submitHandle = (eve) => {\n    eve.preventDefault(); //阻止form真正提交\n    alert(`usename:${usename}\\rpassword:${password}`); //通过alert，弹出用户名和密码的值\n    resetUsename(); //重置用户名输入框\n    resetPassword(); //重置密码输入框\n  }\n\n  //请特别留意用户名和密码输入框中的 {...bindUsename}和{...bindPassword}\n  return (\n    <form onSubmit={submitHandle}>\n        <label>usename:</label>\n        <input type='text' {...bindUsename} />\n        <label>password:</label>\n        <input type='password' {...bindPassword} />\n        <input type='submit' value='login' />\n    </form>\n  )\n}\nexport default LoginForm;\n\n\n对于获取输入框的值、以及调用输入框对应的reset()函数，相信你很容易理解。\n\n下面对 {...bindUsename} 和 {...bindPassword} 做进一步说明：\n1、首先我们知道 {...obj} 这种在原生JS中，相当于把obj对象进行解构，然后得到一个浅拷贝的新对象。\n2、但是在上面的代码中并不是这个意思，千万不要被迷惑。 在JSX中的某组件，如果要添加某属性，格式为 xxx={xxx}。\n\n例如常见的给一个输入框绑定某变量，同时添加onChange事件，一般写法为：\n\n<input type='text' value={xx} onChange={xxxx} />\n\n\n而我们本次代码中，采用的是：\n\n<input type='text' {...bindUsename} />\n<input type='password' {...bindPassword} />\n\n\n这里面的 {...bindUsename} {...bindPassword} 其实相当于把 bindUsename 和 bindPassword 进行了解构，就好像直接写在这里似的。\n\n如果<input>中有非常多相同的属性，那么把这些相同属性提炼到 useInput 的 bind 中，这样可以简化组件里的代码。\n\n应用场景小总结：\n1、在自定义hook中，将组件需要的多项属性合并成一个对象，供组件属性解构使用，会简化组件代码，提高代码复用率。\n\n相信通过上面3个示例，对自定义hook的返回值不同形式的演示，举一反三，会帮助你灵活的编写自定义hook。\n\n----------------------------------------\n\n至此，关于自定义hook已经讲完。\n\n我们对之前所有学过的hook进行一次小总结。",normalizedContent:"# 16 自定义hook\n\n\n# 自定义hook概念解释\n\n像usestate、useeffect、usecontext、usereducer、usecallback、usememo、useref、useimperativehandle、uselayouteffect、usedebugvalue这10个hook是react默认自带的hook，而所谓自定义hook就是由我们自己编写的hook。\n\n所谓自定义hook就是把原来写在函数组件内的hook相关代码抽离出来，单独定义成一个函数，而这个抽离出来的hook函数就称之为“自定义hook钩子函数”，简称“自定义hook”。\n\n\n# 自定义hook是来解决什么问题的？\n\n答：自定义hook是将原来在组件中编写的相关hook代码抽离出组件，让hook相关代码独立存在，达到优化代码结构、相关hook代码可以重复使用的目的。\n\n补充说明：\n1、如果你在别人的项目代码中，发现除了react默认自带的那10个hook以外，出现了 usexxx() 这样的看着像hook的函数，可以肯定那些就是自定义的hook。\n2、随着react新版本发布，可能会出现更多新的、默认自带的hook。\n\n\n# 自定义hook基本用法\n\n首先我们知道hook只能用在函数组件中，而函数组件本身是一个稍微特殊的函数，尽管稍微特殊但毕竟他也遵循一般函数的使用规律。 所谓“把原来写在函数组件内的hook相关代码抽离出来，单独定义成一个函数” 本质上就是把函数内部定义的变量或方法拿出来，放到函数外面单独定义成一个函数。\n\n这个抽离出来新定义的函数，遵循js默认的函数用法，即函数参数可以任意设定，返回值也可以是任意内容。\n\n请注意：react规定所有的自定义hook函数命名时必须使用 usexxx 这种形式。\n\n举一个最简单的例子：假设我们有一个组件，组件内部有一个count的变量，我们的代码之前是这样的：\n\nimport react,{usestate} from 'react'\nfunction currentcomponent() {\n  const [count,setcount] = usestate(0);//请注意这行代码，就是我们要即将抽离出去的hook\n  return (\n    <div>\n        {count}\n        <button onclick={() => setcount(count+1)}>add +1</button>\n    </div>\n  )\n}\nexport default currentcomponent\n\n\n在上面这个组件中，通过 const [count,setcount] = usestate(0) 定义了组件内的变量count和修改count的方法。那我们现在将这行相关的hook抽离出函数组件。我们计划把抽离出来的、和count相关的函数，命名为usecount，修改后的代码如下：\n\n//usecount.js\nimport {usestate} from 'react'；\nfunction usecount(initialvalue){\n\n  //依然使用 usestate 创建countcount和setcount\n  //并且将参数initialvalue的值赋予给count作为默认值\n  //将创建好的count和setcount作为函数返回值 return 出去\n\n  const [count,setcount] = usestate(initialvalue);\n  return [count,setcount];\n}\nexport default usecount;\n\n//currentcomponent.js\nimport react from 'react'\nimport usecount from './usecount';//引入usecount\nfunction currentcomponent() {\n  const [count,setcount] = usecount(0);//请注意这里使用的是usecount，而不是usestate\n  return (\n    <div>\n        {count}\n        <button onclick={() => setcount(count+1)}>add +1</button>\n    </div>\n  )\n}\nexport default currentcomponent\n\n\n# 代码分析：\n\n1、我们将原本组件内定义的count相关代码抽离出组件，单独定义一个 usecount 函数。\n2、组件需要使用 usecount，只需先引入usecount，然后把 usecount 当成普通函数使用就好了。\n3、usecount就是我们自定义的hook。\n\n注意：一般自定义hook顶部是不需要引入react的，只需要引入使用到的 hook 函数即可。\n例如上面 usecount 顶部，我们写的是 import {usestate} from 'react' 而不是 import react,{usestate} from 'react'；\n\n上面举例中的usecount非常简单，内部并没有过多逻辑，在实际开发中自定义hook内部肯定要有比较复杂的逻辑。\n\n由于是单独定义的，所以自定义hook可以同时被多个组件引入和使用，达到代码复用的目的。\n\n划重点，在实际项目中，通常自定义hook返回值有3种表现形式：\n1、不带返回值的函数\n2、带普通返回值的函数\n3、带特殊结构返回值的函数\n\n以上3种不同返回值各有各的适用场景，下面就以实际示例来逐一说明。\n\n\n# 不带返回值的自定义hook使用示例：\n\n举例：若父组件内有多个子组件，每个子组件内部都有不同的业务代码，但是所有子组件有一个相同的功能，就是当自身内部变量value发生变化时，将网页标题改为变量value的值。\n\n首先我们知道修改网页标题是在组件内部的useeffect()函数中修改，那结合上面的使用场景，我们可以将useeffect()单独抽离出来，作为一个自定义hook，命名为 usedocumenttitle，让所有子组件都复用这个usedocumenttitle。\n\nusedocumenttitle 代码如下：\n\nimport {useeffect} from 'react'\nfunction usedocumenttitle(value) {\n  useeffect(() => {\n    document.title = value;\n  },[value]);\n}\nexport default usedocumenttitle;\n\n\n假设我们其中一个子组件的功能为：\n1、有1个number类型的变量count\n2、有1个按钮，点击按钮后将count修改为一个随机数字\n3、当组件重新渲染完成后，将网页标题修改为count的值\n\n子组件代码为：\n\nimport react,{usestate} from 'react'\nimport usedocumenttitle from './usedocumenttitle';\nfunction childcomponent() {\n  const [count,setcount] = usestate(0);\n  usedocumenttitle(count);//把内部变量count传给usedocumenttitle，既作为网页标题内容，同时也作为useeffect的变量依赖\n  return (\n    <div>\n        <button onclick={() => setcount(math.floor(math.random()*1000))}>click me</button>\n    </div>\n  )\n}\nexport default childcomponent\n\n\n其他子组件也使用usedocumenttitle，这样我们便将原本每个子组件都需要编写的useeffect改为统一的usedocumenttitle，实现了代码复用。\n\n应用场景小总结：\n在这个示例中，usedocumenttitle函数并没有任何返回值，子组件使用usedocumenttitle时就好像原本那段useeffect代码本身就定义在那里似的。\n\n\n# 带普通返回值的自定义hook使用示例：\n\n在本章最开始讲解“自定义hook基本用法”时，所举的usecount例子非常简单，这次我们将对usecount进行功能上的扩展。\n\n原本usecount只是定义了count和setcount，这次所谓的功能扩展，就是将setcount改为其他几种修改count的函数。\n例如：\n1、添加 add()\n2、减去 sub()\n3、相乘 mul()\n4、恢复初始值 reset()\n\n修改后的usecount代码为：\n\nimport {usestate} from 'react'\nfunction usecount(initialvalue){\n  const [count,setcount] = usestate(initialvalue);\n  const add = param => {setcount(prev => prev + param);}\n  const sub = param => {setcount(prev => prev - param);}\n  const mul = param => {setcount(prev => prev * param);}\n  const reset = () => {setcount(() => initialvalue);}\n  return [count,add,sub,mul,reset]; //将count和定义的4个方法作为返回值 return 出去\n}\nexport default usecount;\n\n\n请注意：为了避免4个修改函数中得到的是旧的count，所以我们采用的是 setcount(prev => xxxxx) 这种修改方式，而不是直接使用 setcount(count xxx)。\n\ncurrentcomponent组件想使用usecount，代码为：\n\nimport react from 'react'\nimport usecount from './usecount'\n\nfunction currentcomponent() {\n  const [count,add,sub,mul,reset] = usecount(0); //使用usecount，并解构usecount的返回值\n  return (\n    <div>\n        {count}\n        <button onclick={() => {add(1)}}>+ 1</button>\n        <button onclick={() => {sub(1)}}>- 1</button>\n        <button onclick={() => {mul(2)}}>* 2</button>\n        <button onclick={() => {reset()}}>reset</button>\n    </div>\n  )\n}\nexport default currentcomponent\n\n\n对于上面这个效果，你是否觉得眼熟？ 没错，在讲解usereducer时，就使用usereducer实现了类似的一个效果。 只不过这次是为了讲解自定义hook，而那次是讲解如何使用usereducer替代usestate实现复杂的业务。\n\n应用场景小总结：\n1、我们可以在自定义hook中编写相关业务逻辑函数(方法)，并通过返回值的形式 return 出去，供其他组件调用。\n\n\n# 带特殊结构返回值的自定义hook使用示例：\n\n上一个代码示例讲解了“带普通返回值”的自定义hook，那这次要讲的“带特殊结构返回值”的自定义hook究竟差别在哪里？\n\n“带特殊结构返回值”中的特殊是指？\n答：我们把组件需要用到的多项属性设置，合并为一个对象 并 return 出去，供组件使用。\n\n还是以示例来讲解会更容易理解，假设我们有一个登录组件，功能为：\n1、有一个用户名输入框\n2、有一个密码输入框\n3、有一个提交按钮\n\n补充说明，为了简化代码，我们并不做真正的登录验证，点击提交按钮后：\n1、仅仅是alert一下用户名和密码，即表示登录\n2、同时清除用户名和密码输入框里的内容\n\n需求分析：\n1、每个输入框都是一个<input>，都需要绑定一个变量，都需要设置onchange事件\n2、每一个输入框都需要清空内容\n\n我们将定义一个自定义hook，命名为useinput，useinput来实现这2个输入框共有的业务逻辑。\n\nuseinput的代码为：\n\nimport {usestate} from 'react'\nfunction useinput(initialvalue) {\n  const [value,setvalue] = usestate(initialvalue); //定义输入框对应的值value\n  //定义reset函数，用来重置输入框\n  const reset = () => {\n    setvalue(initialvalue);\n  }\n  //定义一个 bind 对象，该对象有 value 和 onchange 2个属性\n  const bind = {\n    value,\n    onchange: eve => {\n        setvalue(eve.target.value)\n    }\n  }\n  return [value,reset,bind];//将输入框的值、重置输入框函数、定义的bind对象作为返回值 return 出去\n}\nexport default useinput\n\n\n请注意：在useinput中，返回值 value、reset 我们很容易理解，但是 bind 是来做什么的？\n答：这个 bind 就是我们前面提到的“带特殊结构返回值”，bind对象本身结构由2个属性value和onchange组成。\n至于 bind 怎么用，很快揭晓。\n\n登录组件loginform的代码为：\n\nimport react from 'react'\nimport useinput from './useinput';\nfunction loginform() {\n  const [usename,resetusename,bindusename] = useinput(''); //定义用户名输入框相关的变量\n  const [password,resetpassword,bindpassword] = useinput(''); //定义密码输入框相关的变量\n\n  const submithandle = (eve) => {\n    eve.preventdefault(); //阻止form真正提交\n    alert(`usename:${usename}\\rpassword:${password}`); //通过alert，弹出用户名和密码的值\n    resetusename(); //重置用户名输入框\n    resetpassword(); //重置密码输入框\n  }\n\n  //请特别留意用户名和密码输入框中的 {...bindusename}和{...bindpassword}\n  return (\n    <form onsubmit={submithandle}>\n        <label>usename:</label>\n        <input type='text' {...bindusename} />\n        <label>password:</label>\n        <input type='password' {...bindpassword} />\n        <input type='submit' value='login' />\n    </form>\n  )\n}\nexport default loginform;\n\n\n对于获取输入框的值、以及调用输入框对应的reset()函数，相信你很容易理解。\n\n下面对 {...bindusename} 和 {...bindpassword} 做进一步说明：\n1、首先我们知道 {...obj} 这种在原生js中，相当于把obj对象进行解构，然后得到一个浅拷贝的新对象。\n2、但是在上面的代码中并不是这个意思，千万不要被迷惑。 在jsx中的某组件，如果要添加某属性，格式为 xxx={xxx}。\n\n例如常见的给一个输入框绑定某变量，同时添加onchange事件，一般写法为：\n\n<input type='text' value={xx} onchange={xxxx} />\n\n\n而我们本次代码中，采用的是：\n\n<input type='text' {...bindusename} />\n<input type='password' {...bindpassword} />\n\n\n这里面的 {...bindusename} {...bindpassword} 其实相当于把 bindusename 和 bindpassword 进行了解构，就好像直接写在这里似的。\n\n如果<input>中有非常多相同的属性，那么把这些相同属性提炼到 useinput 的 bind 中，这样可以简化组件里的代码。\n\n应用场景小总结：\n1、在自定义hook中，将组件需要的多项属性合并成一个对象，供组件属性解构使用，会简化组件代码，提高代码复用率。\n\n相信通过上面3个示例，对自定义hook的返回值不同形式的演示，举一反三，会帮助你灵活的编写自定义hook。\n\n----------------------------------------\n\n至此，关于自定义hook已经讲完。\n\n我们对之前所有学过的hook进行一次小总结。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"17 React Hook 总结",frontmatter:{title:"17 React Hook 总结",date:"2023-09-18T16:40:25.000Z",permalink:"/pages/621c1c/"},regularPath:"/03.react/17.React%20Hook%20%E6%80%BB%E7%BB%93.html",relativePath:"03.react/17.React Hook 总结.md",key:"v-4bd231aa",path:"/pages/621c1c/",headers:[{level:2,title:"react hook 回顾",slug:"react-hook-回顾",normalizedTitle:"react hook 回顾",charIndex:88},{level:5,title:"定义变量",slug:"定义变量",normalizedTitle:"定义变量",charIndex:105},{level:5,title:"组件传值",slug:"组件传值",normalizedTitle:"组件传值",charIndex:159},{level:5,title:"对象引用",slug:"对象引用",normalizedTitle:"对象引用",charIndex:228},{level:5,title:"生命周期",slug:"生命周期",normalizedTitle:"生命周期",charIndex:375},{level:5,title:"性能优化",slug:"性能优化",normalizedTitle:"性能优化",charIndex:447},{level:5,title:"代码调试",slug:"代码调试",normalizedTitle:"代码调试",charIndex:524},{level:5,title:"自定义hook",slug:"自定义hook",normalizedTitle:"自定义hook",charIndex:560},{level:2,title:"react hook 扩展阅读",slug:"react-hook-扩展阅读",normalizedTitle:"react hook 扩展阅读",charIndex:640},{level:2,title:"信息反馈",slug:"信息反馈",normalizedTitle:"信息反馈",charIndex:689}],headersStr:"react hook 回顾 定义变量 组件传值 对象引用 生命周期 性能优化 代码调试 自定义hook react hook 扩展阅读 信息反馈",content:"# 17 React Hook 总结\n\n首先，对你能够坚持到现在，表示深深的赞扬，学习React Hook之路不容易。\n\n我们快速的回顾一下之前学习过的各个hook。\n\n\n# react hook 回顾\n\n# 定义变量\n\nuseState()：定义普通变量\nuseReducer()：定义有不同类型、参数的变量\n\n# 组件传值\n\nuseContext()：定义和接收具有全局性质的属性传值对象，必须配合React.createContext()使用\n\n# 对象引用\n\nuseRef()：获取渲染后的DOM元素对象，可调用该对象原生html的方法，可能需要配合React.forwardRef()使用\nuseImperativeHandle()：获取和调用渲染后的DOM元素对象拥有的自定义方法，必须配合React.forwardRef()使用\n\n# 生命周期\n\nuseEffect()：挂载或渲染完成后、即将被卸载前，调度\nuseLayoutEffect()：挂载或渲染完成后，同步调度\n\n# 性能优化\n\nuseCallback()：获取某处理函数的引用，必须配合React.memo()使用\nuseMemo()：获取某处理函数返回值的副本\n\n# 代码调试\n\nuseDebugValue()：对react开发调试工具中的自定义hook，增加额外显示信息\n\n# 自定义hook\n\nuseCustomHook()：将hook相关逻辑代码从组件中抽离，提高hook代码可复用性\n\n\n# react hook 扩展阅读\n\n附01：React基础知识\n附02：React扩展阅读\n\n\n# 信息反馈\n\n若有错误欢迎指正，本人QQ (1933668022)，或通过邮件联系：allen@183.co\n\n----------------------------------------\n\n至此，React Hook 你已学习完成。\n\n真心为你鼓掌，加油，在实践中去提升自己的 React Hook 战斗值吧。",normalizedContent:"# 17 react hook 总结\n\n首先，对你能够坚持到现在，表示深深的赞扬，学习react hook之路不容易。\n\n我们快速的回顾一下之前学习过的各个hook。\n\n\n# react hook 回顾\n\n# 定义变量\n\nusestate()：定义普通变量\nusereducer()：定义有不同类型、参数的变量\n\n# 组件传值\n\nusecontext()：定义和接收具有全局性质的属性传值对象，必须配合react.createcontext()使用\n\n# 对象引用\n\nuseref()：获取渲染后的dom元素对象，可调用该对象原生html的方法，可能需要配合react.forwardref()使用\nuseimperativehandle()：获取和调用渲染后的dom元素对象拥有的自定义方法，必须配合react.forwardref()使用\n\n# 生命周期\n\nuseeffect()：挂载或渲染完成后、即将被卸载前，调度\nuselayouteffect()：挂载或渲染完成后，同步调度\n\n# 性能优化\n\nusecallback()：获取某处理函数的引用，必须配合react.memo()使用\nusememo()：获取某处理函数返回值的副本\n\n# 代码调试\n\nusedebugvalue()：对react开发调试工具中的自定义hook，增加额外显示信息\n\n# 自定义hook\n\nusecustomhook()：将hook相关逻辑代码从组件中抽离，提高hook代码可复用性\n\n\n# react hook 扩展阅读\n\n附01：react基础知识\n附02：react扩展阅读\n\n\n# 信息反馈\n\n若有错误欢迎指正，本人qq (1933668022)，或通过邮件联系：allen@183.co\n\n----------------------------------------\n\n至此，react hook 你已学习完成。\n\n真心为你鼓掌，加油，在实践中去提升自己的 react hook 战斗值吧。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"18 示例：React使用Echarts所用到的hooks",frontmatter:{title:"18 示例：React使用Echarts所用到的hooks",date:"2023-09-18T16:43:57.000Z",permalink:"/pages/a44117/"},regularPath:"/03.react/18.%E7%A4%BA%E4%BE%8B%EF%BC%9AReact%E4%BD%BF%E7%94%A8Echarts%E6%89%80%E7%94%A8%E5%88%B0%E7%9A%84hooks.html",relativePath:"03.react/18.示例：React使用Echarts所用到的hooks.md",key:"v-6b0a6271",path:"/pages/a44117/",headers:[{level:2,title:"Echarts简介",slug:"echarts简介",normalizedTitle:"echarts简介",charIndex:96},{level:2,title:"Echarts基础操作",slug:"echarts基础操作",normalizedTitle:"echarts基础操作",charIndex:208},{level:2,title:"针对以上Echarts特性，对应的 hooks",slug:"针对以上echarts特性-对应的-hooks",normalizedTitle:"针对以上echarts特性，对应的 hooks",charIndex:419},{level:2,title:"使用(封装)Echarts示例代码",slug:"使用-封装-echarts示例代码",normalizedTitle:"使用(封装)echarts示例代码",charIndex:828}],headersStr:"Echarts简介 Echarts基础操作 针对以上Echarts特性，对应的 hooks 使用(封装)Echarts示例代码",content:"# 18 示例：React使用Echarts所用到的hooks\n\n本篇文章写于 2020年11月13日，距离前面文章已经过去半年，因此本文的讲述风格和示例代码，可能和前面的章节不同。\n\n\n# Echarts简介\n\nEcharts 是百度公司推出的，基于原生 JS 的图表库，免费开源 ，可用于数据可视化项目。\n\n官网地址：https://echarts.apache.org/zh/feature.html\n\n\n# Echarts基础操作\n\n1、Echarts 是基于原生 JS 的库，而不是 React 组件，需要将 “图表” 挂载到 DOM\n\n2、echarts.init(xxx-dom) 是创建 “图表” 的入口函数，该函数将创建创建真正的图表实例，并填充到 xxx-dom 中\n\n3、一个图表 对应一个 DOM，N 个图标需要 N 个 DOM\n\n4、图表实例通过 setOption(option) 来设置(更新)数据\n\n\n# 针对以上Echarts特性，对应的 hooks\n\n1、使用 useRef 来勾住 jsx 中的某个 DOM\n\n2、使用 useEffect( () => {}, [] ) 来勾住 React 第一次挂载，并通过 echarts.init(xxx-dom) 创建出真正的图表\n\n3、使用 useState 来勾住 创建出的真正图表，以便以后做各种更新操作\n\n4、使用 useEffect( () => {}, [xxx-echart,option] ) 来不断监听组件传递过来的数据变化，并更新图表数据\n\n> 补充说明：尽管 NPM 中已经有 echarts-for-react 这个包，已经将 Echarts 封装成可直接使用的 React 组件，但是我并不是建议使用，因为毕竟 Echarts 并不是特别难，没有必要使用别人封装好的。学习本文后，你自己也可以轻松封装自己的 Echarts 组件，灵活方便。\n\n\n# 使用(封装)Echarts示例代码\n\n> 细节不过多说，此处只演示 2 个组件源码，使用 TypeScript 编写\n> \n>  1. 子组件为一个图表，图表是什么类型，由 配置数据 option 中 xAxis.type 的值决定\n>  2. 父组件负责调用子组件并传递图表配置数据\n\n父组件：\n\nimport React from 'react'\nimport { EChartOption } from 'echarts'\nimport Echart from '../../components/echart'\n\nimport './index.scss'\n\nconst option: EChartOption = {\n    xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n    },\n    yAxis: {\n        type: 'value'\n    },\n    series: [{\n        data: [820, 932, 901, 934, 1290, 1330, 1320],\n        type: 'line'\n    }]\n}\n\nconst IndexPage: React.FC = () => {\n    return (\n        <Echart option={option} />\n    )\n}\n\nexport default IndexPage\n\n\n子组件：\n\nimport React, { useState, useRef, useEffect } from 'react'\nimport echarts, { EChartOption, ECharts } from 'echarts'\n\nimport './index.scss'\n\ninterface EchartProp {\n    option: EChartOption\n}\n\nconst Echart: React.FC<EchartProp> = ({ option }) => {\n\n    const chartRef = useRef<HTMLDivElement>(null) //用来勾住渲染后的 DOM\n    const [echartsInstance, setEchartsInstance] = useState<ECharts>() //用来勾住生成后的 图表实例对象\n\n    //仅第一次挂载时执行，将 DOM 传递给 echarts，通过 echarts.init() 得到真正的图表 JS 对象\n    useEffect(() => {\n        if (chartRef.current) {\n            setEchartsInstance(echarts.init(chartRef.current))\n        }\n    }, [])\n\n    //监听依赖变化，并根据需要更新图表数据\n    useEffect(() => {\n        echartsInstance?.setOption(option)\n    }, [echartsInstance, option])\n\n    return (\n        <div ref={chartRef} className='echarts' />\n    )\n}\n\nexport default Echart\n\n\n以上示例中，父组件功能相对简单，负责调用子组件，并将图表配置数据传递给子组件。\n\n真正需要关注的就是 子组件，在子组件中分别用到了 useRef、useState、useEffect 这 3 个 hook，尤其是 useEffect 还被使用了 2 次。",normalizedContent:"# 18 示例：react使用echarts所用到的hooks\n\n本篇文章写于 2020年11月13日，距离前面文章已经过去半年，因此本文的讲述风格和示例代码，可能和前面的章节不同。\n\n\n# echarts简介\n\necharts 是百度公司推出的，基于原生 js 的图表库，免费开源 ，可用于数据可视化项目。\n\n官网地址：https://echarts.apache.org/zh/feature.html\n\n\n# echarts基础操作\n\n1、echarts 是基于原生 js 的库，而不是 react 组件，需要将 “图表” 挂载到 dom\n\n2、echarts.init(xxx-dom) 是创建 “图表” 的入口函数，该函数将创建创建真正的图表实例，并填充到 xxx-dom 中\n\n3、一个图表 对应一个 dom，n 个图标需要 n 个 dom\n\n4、图表实例通过 setoption(option) 来设置(更新)数据\n\n\n# 针对以上echarts特性，对应的 hooks\n\n1、使用 useref 来勾住 jsx 中的某个 dom\n\n2、使用 useeffect( () => {}, [] ) 来勾住 react 第一次挂载，并通过 echarts.init(xxx-dom) 创建出真正的图表\n\n3、使用 usestate 来勾住 创建出的真正图表，以便以后做各种更新操作\n\n4、使用 useeffect( () => {}, [xxx-echart,option] ) 来不断监听组件传递过来的数据变化，并更新图表数据\n\n> 补充说明：尽管 npm 中已经有 echarts-for-react 这个包，已经将 echarts 封装成可直接使用的 react 组件，但是我并不是建议使用，因为毕竟 echarts 并不是特别难，没有必要使用别人封装好的。学习本文后，你自己也可以轻松封装自己的 echarts 组件，灵活方便。\n\n\n# 使用(封装)echarts示例代码\n\n> 细节不过多说，此处只演示 2 个组件源码，使用 typescript 编写\n> \n>  1. 子组件为一个图表，图表是什么类型，由 配置数据 option 中 xaxis.type 的值决定\n>  2. 父组件负责调用子组件并传递图表配置数据\n\n父组件：\n\nimport react from 'react'\nimport { echartoption } from 'echarts'\nimport echart from '../../components/echart'\n\nimport './index.scss'\n\nconst option: echartoption = {\n    xaxis: {\n        type: 'category',\n        data: ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun']\n    },\n    yaxis: {\n        type: 'value'\n    },\n    series: [{\n        data: [820, 932, 901, 934, 1290, 1330, 1320],\n        type: 'line'\n    }]\n}\n\nconst indexpage: react.fc = () => {\n    return (\n        <echart option={option} />\n    )\n}\n\nexport default indexpage\n\n\n子组件：\n\nimport react, { usestate, useref, useeffect } from 'react'\nimport echarts, { echartoption, echarts } from 'echarts'\n\nimport './index.scss'\n\ninterface echartprop {\n    option: echartoption\n}\n\nconst echart: react.fc<echartprop> = ({ option }) => {\n\n    const chartref = useref<htmldivelement>(null) //用来勾住渲染后的 dom\n    const [echartsinstance, setechartsinstance] = usestate<echarts>() //用来勾住生成后的 图表实例对象\n\n    //仅第一次挂载时执行，将 dom 传递给 echarts，通过 echarts.init() 得到真正的图表 js 对象\n    useeffect(() => {\n        if (chartref.current) {\n            setechartsinstance(echarts.init(chartref.current))\n        }\n    }, [])\n\n    //监听依赖变化，并根据需要更新图表数据\n    useeffect(() => {\n        echartsinstance?.setoption(option)\n    }, [echartsinstance, option])\n\n    return (\n        <div ref={chartref} classname='echarts' />\n    )\n}\n\nexport default echart\n\n\n以上示例中，父组件功能相对简单，负责调用子组件，并将图表配置数据传递给子组件。\n\n真正需要关注的就是 子组件，在子组件中分别用到了 useref、usestate、useeffect 这 3 个 hook，尤其是 useeffect 还被使用了 2 次。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"19 useTransition基础用法",frontmatter:{title:"19 useTransition基础用法",date:"2023-09-18T16:45:22.000Z",permalink:"/pages/74a184/"},regularPath:"/03.react/19.useTransition%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95.html",relativePath:"03.react/19.useTransition基础用法.md",key:"v-782f6ddc",path:"/pages/74a184/",headers:[{level:2,title:"19 useTransition基础用法",slug:"_19-usetransition基础用法",normalizedTitle:"19 usetransition基础用法",charIndex:2},{level:2,title:"useTransition概念介绍",slug:"usetransition概念介绍",normalizedTitle:"usetransition概念介绍",charIndex:27},{level:2,title:"useTransition用来解决什么问题？",slug:"usetransition用来解决什么问题",normalizedTitle:"usetransition用来解决什么问题？",charIndex:140},{level:2,title:"useTransition源码",slug:"usetransition源码",normalizedTitle:"usetransition源码",charIndex:489},{level:2,title:"useTransition基本用法",slug:"usetransition基本用法",normalizedTitle:"usetransition基本用法",charIndex:1003},{level:2,title:"useTransition使用示例",slug:"usetransition使用示例",normalizedTitle:"usetransition使用示例",charIndex:1371}],headersStr:"19 useTransition基础用法 useTransition概念介绍 useTransition用来解决什么问题？ useTransition源码 useTransition基本用法 useTransition使用示例",content:"# 19 useTransition基础用法\n\n\n# useTransition概念介绍\n\nreact提供了useDeferredValue发挥类似防抖节流的作用，而useTransition也是类似的作用，但是该hook是通过降低数据渲染的优先级来达到优先更新其他数据\n\n\n# useTransition用来解决什么问题？\n\n * 首先给定一个场景，开发时经常会遇到需要联想输入，也就是输入的同时要返回联想搜索结果的列表。\n * 但是这个列表有时返回值非常的长，有时会导致用户输入值的更新缓慢，这里就产生了一个问题，当页面有大量UI更新的时候，怎么处理数据更新不会卡顿。\n * 可以手写防抖节流，防抖有一个弊端，当我们长时间的持续输入（时间间隔小于防抖设置的时间），页面就会长时间都不到响应。而startTransition 可以指定 UI 的渲染优先级，哪些需要实时更新，哪些需要延迟更新。即使用户长时间输入最迟 5s 也会更新一次。\n * 也可以用useDeferredValue，也可以用“可视窗口加载”的方案， 在这里介绍怎么用useTransition解决\n\n\n# useTransition源码\n\n回到useTransition的学习中，首先看一下React源码中的ReactHooks.js。\n\nexport function useTransition(): [\n  boolean,\n  (callback: () => void, options?: StartTransitionOptions) => void,\n] {\n  const dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\n\n\n再根据引入文件，到react-reconciler/src/ReactInternalTypes.js找到Dispatch里最终调用的useTransition\n\n  useTransition(): [\n    boolean,\n    (callback: () => void, options?: StartTransitionOptions) => void,\n  ],\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用Hook”，并不是“Hook源码分析”。^_^\n\n\n# useTransition基本用法\n\nuseTransition()函数可以不传参，传参可以传一个毫秒值用来修改最迟更新时间，startTransition回调里的赋值将会被降低优先级。isPending 指示过渡任务何时活跃以显示一个等待状态。\n\n> 代码形式\n\nconst [isPending, startTransition] = useTransition();\n\nstartTransition(() => {\n  setCount(count + 1);\n})\n\n\n传参写法\n\n// 延迟两秒\nconst [isPending, startTransition] = useTransition(2000);\n\nstartTransition(() => {\n  setCount(count + 1);\n})\n\n\n\n# useTransition使用示例\n\n举例：搜索引擎的关键词联想。一般来说，对于用户在输入框中输入都希望是实时更新的，如果此时联想词比较多同时也要实时更新的话，这就可能会导致用户的输入会卡顿。这样一来用户的体验会变差，这并不是我们想要的结果。\n\n我们将这个场景的状态更新提取出来：一个是用户输入的更新；一个是联想词的更新，这个两个更新紧急程度显然前者大于后者。\n\n这里更新效果可能还不够明显，可以打开浏览器控制台，点击performance insights项，在Measure page load右边有个下拉选项，在cpu那栏的右边下拉选择4x slowdown可以将浏览器运行速度调慢四倍，这样卡顿会明显些。\n\n这里拆分为两个组件，父组件是useTransition的使用，子组件是列表渲染，代码如下：\n\n父组件：\n\nimport { useState, useTransition } from 'react'\nimport ProductList from './components/ProductList'\n\n// 列表数据的生成\nexport function generateProducts() {\n  const products: Array<string> = []\n  for (let i = 0; i < 10000; i++) {\n    products.push(`Product ${i + 1}`)\n  }\n  return products\n}\n\n// 列表数据\nconst dummyProducts = generateProducts()\n\n// 用户输入时过滤搜索，达到一个联想输入的效果\nfunction filterProducts(filterTerm) {\n  if (!filterTerm) {\n    return dummyProducts\n  }\n  return dummyProducts.filter((product) => product.includes(filterTerm))\n}\n\nfunction App() {\n  const [isPending, startTransition] = useTransition()\n  const [filterTerm, setFilterTerm] = useState('')\n\n  const filteredProducts = filterProducts(filterTerm)\n\n  function updateFilterHandler(event) {\n    // 列表数据赋值的运行等级\n    startTransition(() => {\n      setFilterTerm(event.target.value)\n    })\n  }\n\n  return (\n    <div id=\"app\">\n      <input type=\"text\" onChange={updateFilterHandler} />\n      {isPending && <p style={{ color: 'white' }}>更新列表。. </p>}\n      <ProductList products={filteredProducts} />\n    </div>\n  )\n}\n\nexport default App\n\n\n子组件：\n\nimport { useDeferredValue } from \"react\";\n\nfunction ProductList({ products }) {\n  const deferredProducts = useDeferredValue(products);\n  return (\n    <ul>\n      {deferredProducts.map((product, index) => (\n        <li key={index}>{product}</li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ProductList;\n\n\n通过这个案例，相信你对useMemo的机制和用法一定有所掌握。\n\n----------------------------------------\n\n至此，关于useTransition基础用法已经讲完。",normalizedContent:"# 19 usetransition基础用法\n\n\n# usetransition概念介绍\n\nreact提供了usedeferredvalue发挥类似防抖节流的作用，而usetransition也是类似的作用，但是该hook是通过降低数据渲染的优先级来达到优先更新其他数据\n\n\n# usetransition用来解决什么问题？\n\n * 首先给定一个场景，开发时经常会遇到需要联想输入，也就是输入的同时要返回联想搜索结果的列表。\n * 但是这个列表有时返回值非常的长，有时会导致用户输入值的更新缓慢，这里就产生了一个问题，当页面有大量ui更新的时候，怎么处理数据更新不会卡顿。\n * 可以手写防抖节流，防抖有一个弊端，当我们长时间的持续输入（时间间隔小于防抖设置的时间），页面就会长时间都不到响应。而starttransition 可以指定 ui 的渲染优先级，哪些需要实时更新，哪些需要延迟更新。即使用户长时间输入最迟 5s 也会更新一次。\n * 也可以用usedeferredvalue，也可以用“可视窗口加载”的方案， 在这里介绍怎么用usetransition解决\n\n\n# usetransition源码\n\n回到usetransition的学习中，首先看一下react源码中的reacthooks.js。\n\nexport function usetransition(): [\n  boolean,\n  (callback: () => void, options?: starttransitionoptions) => void,\n] {\n  const dispatcher = resolvedispatcher();\n  return dispatcher.usetransition();\n}\n\n\n再根据引入文件，到react-reconciler/src/reactinternaltypes.js找到dispatch里最终调用的usetransition\n\n  usetransition(): [\n    boolean,\n    (callback: () => void, options?: starttransitionoptions) => void,\n  ],\n\n\n上述代码看不懂没关系，本系列教程只是讲述“如何使用hook”，并不是“hook源码分析”。^_^\n\n\n# usetransition基本用法\n\nusetransition()函数可以不传参，传参可以传一个毫秒值用来修改最迟更新时间，starttransition回调里的赋值将会被降低优先级。ispending 指示过渡任务何时活跃以显示一个等待状态。\n\n> 代码形式\n\nconst [ispending, starttransition] = usetransition();\n\nstarttransition(() => {\n  setcount(count + 1);\n})\n\n\n传参写法\n\n// 延迟两秒\nconst [ispending, starttransition] = usetransition(2000);\n\nstarttransition(() => {\n  setcount(count + 1);\n})\n\n\n\n# usetransition使用示例\n\n举例：搜索引擎的关键词联想。一般来说，对于用户在输入框中输入都希望是实时更新的，如果此时联想词比较多同时也要实时更新的话，这就可能会导致用户的输入会卡顿。这样一来用户的体验会变差，这并不是我们想要的结果。\n\n我们将这个场景的状态更新提取出来：一个是用户输入的更新；一个是联想词的更新，这个两个更新紧急程度显然前者大于后者。\n\n这里更新效果可能还不够明显，可以打开浏览器控制台，点击performance insights项，在measure page load右边有个下拉选项，在cpu那栏的右边下拉选择4x slowdown可以将浏览器运行速度调慢四倍，这样卡顿会明显些。\n\n这里拆分为两个组件，父组件是usetransition的使用，子组件是列表渲染，代码如下：\n\n父组件：\n\nimport { usestate, usetransition } from 'react'\nimport productlist from './components/productlist'\n\n// 列表数据的生成\nexport function generateproducts() {\n  const products: array<string> = []\n  for (let i = 0; i < 10000; i++) {\n    products.push(`product ${i + 1}`)\n  }\n  return products\n}\n\n// 列表数据\nconst dummyproducts = generateproducts()\n\n// 用户输入时过滤搜索，达到一个联想输入的效果\nfunction filterproducts(filterterm) {\n  if (!filterterm) {\n    return dummyproducts\n  }\n  return dummyproducts.filter((product) => product.includes(filterterm))\n}\n\nfunction app() {\n  const [ispending, starttransition] = usetransition()\n  const [filterterm, setfilterterm] = usestate('')\n\n  const filteredproducts = filterproducts(filterterm)\n\n  function updatefilterhandler(event) {\n    // 列表数据赋值的运行等级\n    starttransition(() => {\n      setfilterterm(event.target.value)\n    })\n  }\n\n  return (\n    <div id=\"app\">\n      <input type=\"text\" onchange={updatefilterhandler} />\n      {ispending && <p style={{ color: 'white' }}>更新列表。. </p>}\n      <productlist products={filteredproducts} />\n    </div>\n  )\n}\n\nexport default app\n\n\n子组件：\n\nimport { usedeferredvalue } from \"react\";\n\nfunction productlist({ products }) {\n  const deferredproducts = usedeferredvalue(products);\n  return (\n    <ul>\n      {deferredproducts.map((product, index) => (\n        <li key={index}>{product}</li>\n      ))}\n    </ul>\n  );\n}\n\nexport default productlist;\n\n\n通过这个案例，相信你对usememo的机制和用法一定有所掌握。\n\n----------------------------------------\n\n至此，关于usetransition基础用法已经讲完。",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"20 React基础知识",frontmatter:{title:"20 React基础知识",date:"2023-09-19T08:57:56.000Z",permalink:"/pages/0116b5/"},regularPath:"/03.react/20.React%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html",relativePath:"03.react/20.React基础知识.md",key:"v-513c8141",path:"/pages/0116b5/",headers:[{level:2,title:"安装react并初始化",slug:"安装react并初始化",normalizedTitle:"安装react并初始化",charIndex:52},{level:5,title:"1、安装：npm install -g create-react-app",slug:"_1、安装-npm-install-g-create-react-app",normalizedTitle:"1、安装：npm install -g create-react-app",charIndex:67},{level:5,title:"2、创建hello-react目录并初始化：npx create-react-app hello-react",slug:"_2、创建hello-react目录并初始化-npx-create-react-app-hello-react",normalizedTitle:"2、创建hello-react目录并初始化：npx create-react-app hello-react",charIndex:107},{level:5,title:"3、启动项目：cd hello-react、npm start",slug:"_3、启动项目-cd-hello-react、npm-start",normalizedTitle:"3、启动项目：cd hello-react、npm start",charIndex:387},{level:2,title:"自定义组件基础知识",slug:"自定义组件基础知识",normalizedTitle:"自定义组件基础知识",charIndex:452},{level:2,title:'"纯函数" 概念解释',slug:"纯函数-概念解释",normalizedTitle:"&quot;纯函数&quot; 概念解释",charIndex:null},{level:2,title:'"受控组件" 概念解释',slug:"受控组件-概念解释",normalizedTitle:"&quot;受控组件&quot; 概念解释",charIndex:null},{level:2,title:'"声明式开发" 概念解释',slug:"声明式开发-概念解释",normalizedTitle:"&quot;声明式开发&quot; 概念解释",charIndex:null},{level:2,title:'"单项数据流" 概念解释',slug:"单项数据流-概念解释",normalizedTitle:"&quot;单项数据流&quot; 概念解释",charIndex:null},{level:2,title:'"视图层渲染框架" 概念解释',slug:"视图层渲染框架-概念解释",normalizedTitle:"&quot;视图层渲染框架&quot; 概念解释",charIndex:null},{level:2,title:'"函数式编程" 概念解释',slug:"函数式编程-概念解释",normalizedTitle:"&quot;函数式编程&quot; 概念解释",charIndex:null},{level:2,title:'"虚拟DOM" 概念解释',slug:"虚拟dom-概念解释",normalizedTitle:"&quot;虚拟dom&quot; 概念解释",charIndex:null},{level:2,title:'"Diff算法" 概念解释',slug:"diff算法-概念解释",normalizedTitle:"&quot;diff算法&quot; 概念解释",charIndex:null},{level:5,title:"同层(同级)虚拟DOM比对",slug:"同层-同级-虚拟dom比对",normalizedTitle:"同层(同级)虚拟dom比对",charIndex:4439},{level:5,title:"列表元素使用key值进行比对",slug:"列表元素使用key值进行比对",normalizedTitle:"列表元素使用key值进行比对",charIndex:4717},{level:2,title:'"高阶组件" 概念解释',slug:"高阶组件-概念解释",normalizedTitle:"&quot;高阶组件&quot; 概念解释",charIndex:null},{level:2,title:'"生命周期函数" 概念解释',slug:"生命周期函数-概念解释",normalizedTitle:"&quot;生命周期函数&quot; 概念解释",charIndex:null},{level:4,title:"生命周期4个阶段和该阶段内的生命周期函数：",slug:"生命周期4个阶段和该阶段内的生命周期函数",normalizedTitle:"生命周期4个阶段和该阶段内的生命周期函数：",charIndex:5183},{level:5,title:"初始化(Initialization)",slug:"初始化-initialization",normalizedTitle:"初始化(initialization)",charIndex:5208},{level:5,title:"挂载(Mounting)",slug:"挂载-mounting",normalizedTitle:"挂载(mounting)",charIndex:5297},{level:5,title:"更新(Updation)：",slug:"更新-updation",normalizedTitle:"更新(updation)：",charIndex:5375},{level:5,title:"捕获子组件错误：",slug:"捕获子组件错误",normalizedTitle:"捕获子组件错误：",charIndex:5993},{level:5,title:"卸载(Unmounting)：",slug:"卸载-unmounting",normalizedTitle:"卸载(unmounting)：",charIndex:6038},{level:5,title:"生命周期函数的几个应用场景：",slug:"生命周期函数的几个应用场景",normalizedTitle:"生命周期函数的几个应用场景：",charIndex:6221},{level:5,title:"第一种：引用外部css样式",slug:"第一种-引用外部css样式",normalizedTitle:"第一种：引用外部css样式",charIndex:6964},{level:5,title:"第二种：内部样式",slug:"第二种-内部样式",normalizedTitle:"第二种：内部样式",charIndex:7138}],headersStr:'安装react并初始化 1、安装：npm install -g create-react-app 2、创建hello-react目录并初始化：npx create-react-app hello-react 3、启动项目：cd hello-react、npm start 自定义组件基础知识 "纯函数" 概念解释 "受控组件" 概念解释 "声明式开发" 概念解释 "单项数据流" 概念解释 "视图层渲染框架" 概念解释 "函数式编程" 概念解释 "虚拟DOM" 概念解释 "Diff算法" 概念解释 同层(同级)虚拟DOM比对 列表元素使用key值进行比对 "高阶组件" 概念解释 "生命周期函数" 概念解释 生命周期4个阶段和该阶段内的生命周期函数： 初始化(Initialization) 挂载(Mounting) 更新(Updation)： 捕获子组件错误： 卸载(Unmounting)： 生命周期函数的几个应用场景： 第一种：引用外部css样式 第二种：内部样式',content:'# React基础知识\n\n说明：以下这些基础知识适用于类组件和函数组件，并不是函数组件独有的。\n\n\n# 安装react并初始化\n\n# 1、安装：npm install -g create-react-app\n\n# 2、创建hello-react目录并初始化：npx create-react-app hello-react\n\n注意：\n\n 1. 目录名不允许有大写字母\n 2. 初始化过程比较慢，甚至可能需要5-10分钟\n 3. 如果报错：npm ERR! Unexpected end of JSON input while parsing near \'...n\\r\\nwsFcBAEBCAAQBQJd\'， 解决方法：npm root -g 找到本机npm全局安装目录，cd 进入该目录，执行清除缓存：npm cache clean --force，然后再次初始化。\n\n# 3、启动项目：cd hello-react、npm start\n\n默认将启动：http://localhost:3000\n\n\n# 自定义组件基础知识\n\n1、自定义组件必须以大写字母开头、默认网页原生标签还以小写开头。请注意这里表述的"默认网页原生标签"本质上并不是真实的原生网页标签，他们是react默认定义好的、内置的自定义组件标签，只不过这些标签刚好和原生标签的作用，功能，名称一模一样而已。\n\n2、自定义组件如果不希望设定最外层的标签，那么可以使用react(16+版本)提供的占位符Fragment来充当最外层标签；\n\nimport React,{Component,Fragment} from \'react\';  \n类组件：render(){return <Fragment>xxxxxxx</Fragment>}  \n函数组件：return <Fragment>xxxxxxx</Fragment>\n\n\n在最新的react版本中，也可以直接使用<></>来代替Fragment。其中<>唯一可以拥有的属性为key。即< key=\'xxx\'></>\n\n3、使用数组map循环更新li，一定要给li添加对应的key值，否则虽然正常运行，但是会报错误警告。不建议直接使用index作为key值。\n\n4、在最新的react版本中，为了提高更新性能，推荐采用异步的方式更新数据。具体使用方式为：setXxx((prevData) => {return xxx})。其中参数prevData指之前的变量值，return的对象指修改之后的数据值。\n\n可以将上面代码简写为：setXxx(prevData => xxx) 若没有用到prevData参数，还可以省略，即 setXxx(() => xxx);\n\n异步的目的是为了优化更新性能，react短期内发现多条数据变量发生修改，那么他会将所有修改合并成一次修改再最终执行。\n\n5、在JSX中写注释，格式为：{/* xxxxx */}或{//xxxx}，注意如果使用单行注释，最外的大括号必须单独占一行。注释尽在开发源代码中显示，在导出的网页中不会有该注释。\n\n6、给标签添加样式时，推荐使用className，不推荐使用class。如果使用class虽然运行没问题，但是会报错误警告，因为样式class这个关键词和js中声明类的class冲突。类似的还有标签中for关键词，推荐改为htmlFor。\n\n7、通常情况下，react是针对组件开发，并且只负责对html中某一个div进行渲染，那么意味着该html其他标签不受影响，这样引申出来一个结果：一个html既可以使用react，也可以使用vue，两者可以并存。\n\n8、为了方便调试代码，可以在谷歌浏览器中安装React Developer Tools插件。安装后可在谷歌浏览器调试模式下，查看component标签下的内容。 若访问本机react调试网页则该插件图标为红色、若访问导出版本的React网页则该插线显示为蓝色、若访问的网页没使用react框架则为灰色。\n\n9、给组件设定属性，只有属性名没有属性值，那么默认react会将该属性值设置为true。在ES6中如果只有一个属性对象没有属性值，通常理解为该属性名和属性值是相同的。 为了避免混淆，不建议不给属性不设置属性值。\n\n10、ReactDOM.createPortal()用来将元素渲染到任意DOM元素中(包括顶级组件之外的其他DOM中)。\n\n\n# "纯函数" 概念解释\n\nJS中定义的所有函数都可以增加参数，所谓"纯函数"是指函数内部并未修改过该参数的函数。\n\n例如以下函数：function myFun(a){let c=a }，该函数内部从未更改过参数a，那么这个函数就是纯函数。\n\n反例，非纯函数 例如：function myFun(a){a=a+2; let c=a}，该函数内部修改过参数a，那么这个函数就不再是纯函数了。\n\n纯函数的特殊意义是什么？\n因为纯函数内部从不会直接修改参数，那么无论运行多少次，执行结果永远是一致的。\n\n若仅仅有一个函数，那么也无所谓，但是如果有多个函数都是都需要调用执行同一个变量(参数)，为了确保多个函数执行结果是符合预期的，那么就要求每个函数都不能在自己内部修改该变量(参数)。\n\n这就是为什么react不允许直接修改某变量的原因。\n\n\n# "受控组件" 概念解释\n\n像input、select、textarea、form等将自身value与某变量进行绑定的组件，称之为受控组件。\n\n"受控"即这些组件的可以值受到某变量的控制。\n\n与之对应的是"非受控组件"，即该组件对应的值并不能被某变量控制。\n\n例如"<input type=\'file\'/>"，该组件的值为用户选中本地的文件信息，该值并不能直接通过某变量来进行value值的设定，因此该组件属于"非受控组件"。\n\n\n# "声明式开发" 概念解释\n\n"声明式开发"：基于数据定义和数据改变，视图层自动更新。\n"命令式开发"：基于具体执行命令更改视图，例如DOM操作修改。\n\n注意：声明式开发并不是不进行DOM操作，而是把DOM操作频率降到最低。\n\n\n# "单项数据流" 概念解释\n\nreact框架的原则中规定，子组件只可以使用父组件传递过来的xxx属性对应的值或方法，不可以改变。\n\n数据只能单向发生传递(父传向子，不允许子直接修改父)，若子组件想修改父组件中的数据，只能通过父组件暴露给子组件的函数(方法)来间接修改。\n\nreact框架具体实现方式是设置父组件传递给子组件的"数据值或方法"仅仅为可读，但不可修改。\n\n为什么要做这样的限制？\n因为一个父组件可以有多个子组件，如果每个子组件都可修改父组件中的数据(子组件之间彼此共用父组件的数据)，一个子组件的数据修改会造成其他子组件数据更改，最终会让整个组件数据变得非常复杂。\n\n为了简化数据操作复杂程度，因此采用单向数据流策略，保证父组件数据的唯一最终可修改权归父组件所有。\n\n\n# "视图层渲染框架" 概念解释\n\nreact框架自身定位是"视图层渲染框架"，单向数据流概念很好，但是实际项目中页面会很复杂。\n\n例如顶级组件Root中分别使用了组件A(由子组件A0、A1、A2构成)、组件B(由子组件A0、A1、A2构成)、组件C(由子组件C0、C1、C2构成)，若此时组件A的子组件A2想和组件C的子组件C1进行数据交互，那么按照单向数据流的规范，数据操作流程为 A2 -> A -> Root -> C - C1，可以看出操作流程非常复杂。\n\n所以实际开发中，React框架也许会结合其他"数据层框架"(例如Redux、Flux等)，但是请注意，只从有了hook以后，可以通过useReducer+useContext来实现类似Redux的功能。\n\n\n# "函数式编程" 概念解释\n\nreact自定义组件的各种交互都在内部定义不同的函数(js语法规定：类class中定义的函数不需要在前面写 function关键词)，因此成为函数式编程。不像原生JS和html交互那样，更多侧重html标签、DOM操作来实现视图和交互。\n\n函数式编程的几点好处：\n1、可以把复杂功能的处理函数拆分成多个细小的函数。\n2、由于都是通过函数来进行视图层渲染和数据交互，更加方便编写"前端自动化测试"代码。\n\n\n# "虚拟DOM" 概念解释\n\n虚拟DOM(Virtual Dom)就是一个JS对象(数组对象)，用来描述真实DOM。相对通过html标签创建的真实DOM，虚拟DOM是保存在客户端内存里的一份JS表述DOM的数组对象。\n\n用最简单的一个div标签来示意两者的差异，数据格式如下：\n\n//真实DOM数据格式(网页标签)\n<div id=\'mydiv\'>hell react</div>\n\n//虚拟DOM数据格式(JS数组对象)\n//虚拟DOM数组对象格式为：标签名+属性集合+值\n[\'div\',{id:\'mydiv\'},\'hell react\']\n\n//在JSX的创建模板代码中，通常代码格式为\nrender(){return <div id=\'mydiv\'>hello react</>}\n\n//还可以使用react提供的，更加底层的方法来实现\nrender(){return React.createElement(\'div\',{id:\'mydiv\'},\'hello react\')}\n\n\n虚拟DOM更新性能快的原因并不是因为在内存中(理论上任何软件都是运行在内存中)，而是因为虚拟DOM储存的数据格式为JS对象，用JS来操作(生成/查询/对比/更新)JS对象很容易。用JS操作(生成/查询/对比/更新)真实DOM则需要调用Web Action层的API，性能相对就慢。\n\nreact运行(更新)步骤，大致为：\n1、定义组件数据变量\n2、定义组件模板JSX\n3、数据与模板结合，生成一份虚拟DOM\n4、将虚拟DOM转化为真实DOM\n5、将得到的真实DOM挂载到html中(通过真实DOM操作)，用来显示\n6、监听变量发生改变，若有改变重新执行第3步(数据与模板结合，生成另外一份新的虚拟DOM)\n7、在内存中对比前后两份虚拟DOM，找出差异部分(diff算法)\n8、将差异部分转化为真实的DOM\n8、将差异化的真实DOM，通过真实DOM操作进行更新\n\n当变量发生更改时，虚拟DOM减少了真实DOM的创建和对比次数(通过虚拟DOM而非真实DOM)，从而提高了性能。\n\n\n# "Diff算法" 概念解释\n\n当变量发生改变时，需要重新生成新的虚拟DOM，并且对旧的虚拟DOM进行差异化比对。\nDiff算法就是这个差异化比对的算法。\n\nDiff算法为了提高性能，优化算法，通常原则为：\n\n# 同层(同级)虚拟DOM比对\n\n先从两个虚拟DOM(JS对象)同层(即顶层)开始比对，如果发现同层就不一致，那么就直接放弃下一层(级别)的对比，采用最新的虚拟DOM。\n\n疑问点：假如两心虚拟DOM顶层不一致，但下一级别以及后面的更多级别都一致，如果仅仅因为顶层不一致而就该放弃下一级别，重新操作真实DOM从头渲染，岂不是性能浪费？\n\n答：同层(同级)虚拟DOM比对，"比对"算法相对简单，比对速度快。如果采用多层(多级)比对，"比对"算法会相对复杂，比对速度慢。 同层虚拟DOM比对就是利用了比对速度快的优势来抵消"操作真实DOM操作性能上的浪费"。\n\n# 列表元素使用key值进行比对\n\n这里的key值是值"稳定的key值(是有规律的字符串，非数字)"，若key值为索引数字index，那么顺序发生改变时，索引数字也会发生变化，无法判断之前的和现在的是否是同一个对象。\n\n如果key值是稳定的，那么在比对的时候，比较容易比对出是否发生变化，以及具体的变化是什么。\n\nDiff算法还有非常多的其他性能优化算法，以上列出的"同层比对、key值比对"仅仅为算法举例。\n\n\n# "高阶组件" 概念解释\n\n高阶组件是一种组件设计方式(设计模式)，就是将一个组件作为参数传递给一个函数，该函数接收参数(组件)后进行处理和装饰，并返回出一个新的组件。\n\n简单来说就是，普通组件是根据参数(props)生成一个UI(JSX语法支持的标签)。而高阶组件是根据参数(组件)生成一个新的组件。\n\n\n# "生命周期函数" 概念解释\n\n生命周期函数指在某一时刻组件会自动调用执行的函数。\n\n这里的"某一时刻"可以是指组件初始化、挂载到虚拟DOM、数据更改引发的更新(重新渲染)、从虚拟DOM卸载这4个阶段。\n\n# 生命周期4个阶段和该阶段内的生命周期函数：\n\n# 初始化(Initialization)\n\nconstructor()是JS中原生类的构造函数，理论上他不专属于组件的初始化，但是如果把它归类成组件组初始化也是可以接受的。\n\n# 挂载(Mounting)\n\ncomponentWillMount(即将被挂载)、render(挂载)、componentDidMount(挂载完成)\n\n# 更新(Updation)：\n\nprops发生变化后对应的更新过程：componentWillReceiveProps(父组件发生数据更改，父组件的render重新被执行，子组件预测到可能会发生替换新数据)、shouldComponentUpdate(询问是否应该更新？返回true则更新、返回flash则不更新)、componentWillUpate(准备要开始更新)、render(更新)、componentDidUpdate(更新完成)\n\n变量数据发生变化后对应的更新过程：shouldComponentUpdate(询问是否应该更新？返回true则更新、返回flash则不更新)、conponentWillUpdate(准备要开始更新)、、render(更新)、componentDidUpdate(更新完成)\n\nprops和states发生变化后的更新过程，唯一差异是props多了一个 componentWillReceiveProps生命周期函数。\n\ncomponentWillReceiveProps触发的条件是：\n1、一个组件要从父组件接收参数，并且已存在父组件中(子组件第一次被创建时是不会执行componentWillReceiveProps的)\n2、只要父组件的render函数重新被执行(父组件发生数据更改，子组件预测到可能会发生替换新数据)，componentWillReceiveProps就会被触发\n\n# 捕获子组件错误：\n\ncomponentDidCatch(捕获到子组件错误时被触发)\n\n# 卸载(Unmounting)：\n\ncomponentWillUnmount(即将被卸载)\n\n备注：类组件继承自Component组件，Component组件内置了除render()以外的所有生命周期函数。因此自定义组件render()这个生命周期函数必须存在，其他的生命周期函数都可以忽略不写。 而使用了hook的函数组件，简化了生命周期函数调用的复杂程度。\n\n# 生命周期函数的几个应用场景：\n\n对于类组件(由class创建的)和函数组件(由function创建的)，他们对于生命周期的调用方法不同。\n\n1、只需要第一次获取数据的Ajax请求\n如果类组件有ajax请求(只需请求一次)，那么最好把ajax请求写在componentDidMount中(只执行一次)。因为"初始化、挂载、卸载"在一个组件的整个生命周期中只会发生一次，而"更新"可以在生命周期中多次执行。\n如果是函数组件，则可以写在useEffect()中，并且将第2个参数设置为空数组，这样useEffect只会执行一次。\n\n2、防止子组件不必要的重新渲染\n如果是类组件，父组件发生变量改变，那么会调用render()，会重新渲染所有子组件。但是如果变量改变的某个值与某子组件并不相关，如果此时也重新渲染该子组件会造成性能上的浪费。为了解决这个情况，可以在子组件中的shouldComponentUpdate生命周期函数中，做以下操作:\n\nshouldComponentUpdate(nextProps,nextStates){\n  //判断xxx值是否相同，如果相同则不进行重新渲染\n  return (nextProps.xxx !== this.props.xxx); //注意是 !== 而不是 !=\n}\n\n\n还可以让组件继承由React.Component改为React.PureComponent，react会自动帮我们在shouldComponentUpdate生命周期函数中做浅对比。\n\n如果是函数组件，则在子组件导出时，使用React.memo()进行包裹，同时结合useCallback来阻止无谓的渲染，实现提高性能。\n\n\n# React中设置样式的几种形式\n\n# 第一种：引用外部css样式\n\n伪代码示例：\n\nimport from \'./xxx.css\';  \nreturn <div className=\'xxx\' /\\>\n\n\n注意：在jsx语法中，使用驼峰命名。例如原生html中的classname需要改成className、background-color要改成backgroundColor。\n\n# 第二种：内部样式\n\n伪代码示例：\n\nreturn <div style={{backgroundColor:\'green\',width:\'100px\'}} /\\>  \n\n\n注意：内联样式值为一个对象，对象属性之间用","分割而不是原生html中的";"。\n因为是一个对象，因此下面代码也是可行的：\nconst mystyle = {backgroundColor:\'green\',width:\'100px\'}; return <div style={mystyle} />\n\n\n# Hook用法\n\nHook是react16.8以上版本才出现的新特性，可以在函数组件中使用组件生命周期函数，且颗粒度更加细致。\n\n可以把Hook逻辑从组件中抽离出来，多个组件可以共享该hook逻辑。\n\n请注意hook本质上是为了解决组件之间共享逻辑，并不是单纯为了解决组件之间共享数据。\n\nhook表现出来特别像一个普通的JS函数(仅仅是表现出来但绝不是真的普通JS函数)。',normalizedContent:'# react基础知识\n\n说明：以下这些基础知识适用于类组件和函数组件，并不是函数组件独有的。\n\n\n# 安装react并初始化\n\n# 1、安装：npm install -g create-react-app\n\n# 2、创建hello-react目录并初始化：npx create-react-app hello-react\n\n注意：\n\n 1. 目录名不允许有大写字母\n 2. 初始化过程比较慢，甚至可能需要5-10分钟\n 3. 如果报错：npm err! unexpected end of json input while parsing near \'...n\\r\\nwsfcbaebcaaqbqjd\'， 解决方法：npm root -g 找到本机npm全局安装目录，cd 进入该目录，执行清除缓存：npm cache clean --force，然后再次初始化。\n\n# 3、启动项目：cd hello-react、npm start\n\n默认将启动：http://localhost:3000\n\n\n# 自定义组件基础知识\n\n1、自定义组件必须以大写字母开头、默认网页原生标签还以小写开头。请注意这里表述的"默认网页原生标签"本质上并不是真实的原生网页标签，他们是react默认定义好的、内置的自定义组件标签，只不过这些标签刚好和原生标签的作用，功能，名称一模一样而已。\n\n2、自定义组件如果不希望设定最外层的标签，那么可以使用react(16+版本)提供的占位符fragment来充当最外层标签；\n\nimport react,{component,fragment} from \'react\';  \n类组件：render(){return <fragment>xxxxxxx</fragment>}  \n函数组件：return <fragment>xxxxxxx</fragment>\n\n\n在最新的react版本中，也可以直接使用<></>来代替fragment。其中<>唯一可以拥有的属性为key。即< key=\'xxx\'></>\n\n3、使用数组map循环更新li，一定要给li添加对应的key值，否则虽然正常运行，但是会报错误警告。不建议直接使用index作为key值。\n\n4、在最新的react版本中，为了提高更新性能，推荐采用异步的方式更新数据。具体使用方式为：setxxx((prevdata) => {return xxx})。其中参数prevdata指之前的变量值，return的对象指修改之后的数据值。\n\n可以将上面代码简写为：setxxx(prevdata => xxx) 若没有用到prevdata参数，还可以省略，即 setxxx(() => xxx);\n\n异步的目的是为了优化更新性能，react短期内发现多条数据变量发生修改，那么他会将所有修改合并成一次修改再最终执行。\n\n5、在jsx中写注释，格式为：{/* xxxxx */}或{//xxxx}，注意如果使用单行注释，最外的大括号必须单独占一行。注释尽在开发源代码中显示，在导出的网页中不会有该注释。\n\n6、给标签添加样式时，推荐使用classname，不推荐使用class。如果使用class虽然运行没问题，但是会报错误警告，因为样式class这个关键词和js中声明类的class冲突。类似的还有标签中for关键词，推荐改为htmlfor。\n\n7、通常情况下，react是针对组件开发，并且只负责对html中某一个div进行渲染，那么意味着该html其他标签不受影响，这样引申出来一个结果：一个html既可以使用react，也可以使用vue，两者可以并存。\n\n8、为了方便调试代码，可以在谷歌浏览器中安装react developer tools插件。安装后可在谷歌浏览器调试模式下，查看component标签下的内容。 若访问本机react调试网页则该插件图标为红色、若访问导出版本的react网页则该插线显示为蓝色、若访问的网页没使用react框架则为灰色。\n\n9、给组件设定属性，只有属性名没有属性值，那么默认react会将该属性值设置为true。在es6中如果只有一个属性对象没有属性值，通常理解为该属性名和属性值是相同的。 为了避免混淆，不建议不给属性不设置属性值。\n\n10、reactdom.createportal()用来将元素渲染到任意dom元素中(包括顶级组件之外的其他dom中)。\n\n\n# "纯函数" 概念解释\n\njs中定义的所有函数都可以增加参数，所谓"纯函数"是指函数内部并未修改过该参数的函数。\n\n例如以下函数：function myfun(a){let c=a }，该函数内部从未更改过参数a，那么这个函数就是纯函数。\n\n反例，非纯函数 例如：function myfun(a){a=a+2; let c=a}，该函数内部修改过参数a，那么这个函数就不再是纯函数了。\n\n纯函数的特殊意义是什么？\n因为纯函数内部从不会直接修改参数，那么无论运行多少次，执行结果永远是一致的。\n\n若仅仅有一个函数，那么也无所谓，但是如果有多个函数都是都需要调用执行同一个变量(参数)，为了确保多个函数执行结果是符合预期的，那么就要求每个函数都不能在自己内部修改该变量(参数)。\n\n这就是为什么react不允许直接修改某变量的原因。\n\n\n# "受控组件" 概念解释\n\n像input、select、textarea、form等将自身value与某变量进行绑定的组件，称之为受控组件。\n\n"受控"即这些组件的可以值受到某变量的控制。\n\n与之对应的是"非受控组件"，即该组件对应的值并不能被某变量控制。\n\n例如"<input type=\'file\'/>"，该组件的值为用户选中本地的文件信息，该值并不能直接通过某变量来进行value值的设定，因此该组件属于"非受控组件"。\n\n\n# "声明式开发" 概念解释\n\n"声明式开发"：基于数据定义和数据改变，视图层自动更新。\n"命令式开发"：基于具体执行命令更改视图，例如dom操作修改。\n\n注意：声明式开发并不是不进行dom操作，而是把dom操作频率降到最低。\n\n\n# "单项数据流" 概念解释\n\nreact框架的原则中规定，子组件只可以使用父组件传递过来的xxx属性对应的值或方法，不可以改变。\n\n数据只能单向发生传递(父传向子，不允许子直接修改父)，若子组件想修改父组件中的数据，只能通过父组件暴露给子组件的函数(方法)来间接修改。\n\nreact框架具体实现方式是设置父组件传递给子组件的"数据值或方法"仅仅为可读，但不可修改。\n\n为什么要做这样的限制？\n因为一个父组件可以有多个子组件，如果每个子组件都可修改父组件中的数据(子组件之间彼此共用父组件的数据)，一个子组件的数据修改会造成其他子组件数据更改，最终会让整个组件数据变得非常复杂。\n\n为了简化数据操作复杂程度，因此采用单向数据流策略，保证父组件数据的唯一最终可修改权归父组件所有。\n\n\n# "视图层渲染框架" 概念解释\n\nreact框架自身定位是"视图层渲染框架"，单向数据流概念很好，但是实际项目中页面会很复杂。\n\n例如顶级组件root中分别使用了组件a(由子组件a0、a1、a2构成)、组件b(由子组件a0、a1、a2构成)、组件c(由子组件c0、c1、c2构成)，若此时组件a的子组件a2想和组件c的子组件c1进行数据交互，那么按照单向数据流的规范，数据操作流程为 a2 -> a -> root -> c - c1，可以看出操作流程非常复杂。\n\n所以实际开发中，react框架也许会结合其他"数据层框架"(例如redux、flux等)，但是请注意，只从有了hook以后，可以通过usereducer+usecontext来实现类似redux的功能。\n\n\n# "函数式编程" 概念解释\n\nreact自定义组件的各种交互都在内部定义不同的函数(js语法规定：类class中定义的函数不需要在前面写 function关键词)，因此成为函数式编程。不像原生js和html交互那样，更多侧重html标签、dom操作来实现视图和交互。\n\n函数式编程的几点好处：\n1、可以把复杂功能的处理函数拆分成多个细小的函数。\n2、由于都是通过函数来进行视图层渲染和数据交互，更加方便编写"前端自动化测试"代码。\n\n\n# "虚拟dom" 概念解释\n\n虚拟dom(virtual dom)就是一个js对象(数组对象)，用来描述真实dom。相对通过html标签创建的真实dom，虚拟dom是保存在客户端内存里的一份js表述dom的数组对象。\n\n用最简单的一个div标签来示意两者的差异，数据格式如下：\n\n//真实dom数据格式(网页标签)\n<div id=\'mydiv\'>hell react</div>\n\n//虚拟dom数据格式(js数组对象)\n//虚拟dom数组对象格式为：标签名+属性集合+值\n[\'div\',{id:\'mydiv\'},\'hell react\']\n\n//在jsx的创建模板代码中，通常代码格式为\nrender(){return <div id=\'mydiv\'>hello react</>}\n\n//还可以使用react提供的，更加底层的方法来实现\nrender(){return react.createelement(\'div\',{id:\'mydiv\'},\'hello react\')}\n\n\n虚拟dom更新性能快的原因并不是因为在内存中(理论上任何软件都是运行在内存中)，而是因为虚拟dom储存的数据格式为js对象，用js来操作(生成/查询/对比/更新)js对象很容易。用js操作(生成/查询/对比/更新)真实dom则需要调用web action层的api，性能相对就慢。\n\nreact运行(更新)步骤，大致为：\n1、定义组件数据变量\n2、定义组件模板jsx\n3、数据与模板结合，生成一份虚拟dom\n4、将虚拟dom转化为真实dom\n5、将得到的真实dom挂载到html中(通过真实dom操作)，用来显示\n6、监听变量发生改变，若有改变重新执行第3步(数据与模板结合，生成另外一份新的虚拟dom)\n7、在内存中对比前后两份虚拟dom，找出差异部分(diff算法)\n8、将差异部分转化为真实的dom\n8、将差异化的真实dom，通过真实dom操作进行更新\n\n当变量发生更改时，虚拟dom减少了真实dom的创建和对比次数(通过虚拟dom而非真实dom)，从而提高了性能。\n\n\n# "diff算法" 概念解释\n\n当变量发生改变时，需要重新生成新的虚拟dom，并且对旧的虚拟dom进行差异化比对。\ndiff算法就是这个差异化比对的算法。\n\ndiff算法为了提高性能，优化算法，通常原则为：\n\n# 同层(同级)虚拟dom比对\n\n先从两个虚拟dom(js对象)同层(即顶层)开始比对，如果发现同层就不一致，那么就直接放弃下一层(级别)的对比，采用最新的虚拟dom。\n\n疑问点：假如两心虚拟dom顶层不一致，但下一级别以及后面的更多级别都一致，如果仅仅因为顶层不一致而就该放弃下一级别，重新操作真实dom从头渲染，岂不是性能浪费？\n\n答：同层(同级)虚拟dom比对，"比对"算法相对简单，比对速度快。如果采用多层(多级)比对，"比对"算法会相对复杂，比对速度慢。 同层虚拟dom比对就是利用了比对速度快的优势来抵消"操作真实dom操作性能上的浪费"。\n\n# 列表元素使用key值进行比对\n\n这里的key值是值"稳定的key值(是有规律的字符串，非数字)"，若key值为索引数字index，那么顺序发生改变时，索引数字也会发生变化，无法判断之前的和现在的是否是同一个对象。\n\n如果key值是稳定的，那么在比对的时候，比较容易比对出是否发生变化，以及具体的变化是什么。\n\ndiff算法还有非常多的其他性能优化算法，以上列出的"同层比对、key值比对"仅仅为算法举例。\n\n\n# "高阶组件" 概念解释\n\n高阶组件是一种组件设计方式(设计模式)，就是将一个组件作为参数传递给一个函数，该函数接收参数(组件)后进行处理和装饰，并返回出一个新的组件。\n\n简单来说就是，普通组件是根据参数(props)生成一个ui(jsx语法支持的标签)。而高阶组件是根据参数(组件)生成一个新的组件。\n\n\n# "生命周期函数" 概念解释\n\n生命周期函数指在某一时刻组件会自动调用执行的函数。\n\n这里的"某一时刻"可以是指组件初始化、挂载到虚拟dom、数据更改引发的更新(重新渲染)、从虚拟dom卸载这4个阶段。\n\n# 生命周期4个阶段和该阶段内的生命周期函数：\n\n# 初始化(initialization)\n\nconstructor()是js中原生类的构造函数，理论上他不专属于组件的初始化，但是如果把它归类成组件组初始化也是可以接受的。\n\n# 挂载(mounting)\n\ncomponentwillmount(即将被挂载)、render(挂载)、componentdidmount(挂载完成)\n\n# 更新(updation)：\n\nprops发生变化后对应的更新过程：componentwillreceiveprops(父组件发生数据更改，父组件的render重新被执行，子组件预测到可能会发生替换新数据)、shouldcomponentupdate(询问是否应该更新？返回true则更新、返回flash则不更新)、componentwillupate(准备要开始更新)、render(更新)、componentdidupdate(更新完成)\n\n变量数据发生变化后对应的更新过程：shouldcomponentupdate(询问是否应该更新？返回true则更新、返回flash则不更新)、conponentwillupdate(准备要开始更新)、、render(更新)、componentdidupdate(更新完成)\n\nprops和states发生变化后的更新过程，唯一差异是props多了一个 componentwillreceiveprops生命周期函数。\n\ncomponentwillreceiveprops触发的条件是：\n1、一个组件要从父组件接收参数，并且已存在父组件中(子组件第一次被创建时是不会执行componentwillreceiveprops的)\n2、只要父组件的render函数重新被执行(父组件发生数据更改，子组件预测到可能会发生替换新数据)，componentwillreceiveprops就会被触发\n\n# 捕获子组件错误：\n\ncomponentdidcatch(捕获到子组件错误时被触发)\n\n# 卸载(unmounting)：\n\ncomponentwillunmount(即将被卸载)\n\n备注：类组件继承自component组件，component组件内置了除render()以外的所有生命周期函数。因此自定义组件render()这个生命周期函数必须存在，其他的生命周期函数都可以忽略不写。 而使用了hook的函数组件，简化了生命周期函数调用的复杂程度。\n\n# 生命周期函数的几个应用场景：\n\n对于类组件(由class创建的)和函数组件(由function创建的)，他们对于生命周期的调用方法不同。\n\n1、只需要第一次获取数据的ajax请求\n如果类组件有ajax请求(只需请求一次)，那么最好把ajax请求写在componentdidmount中(只执行一次)。因为"初始化、挂载、卸载"在一个组件的整个生命周期中只会发生一次，而"更新"可以在生命周期中多次执行。\n如果是函数组件，则可以写在useeffect()中，并且将第2个参数设置为空数组，这样useeffect只会执行一次。\n\n2、防止子组件不必要的重新渲染\n如果是类组件，父组件发生变量改变，那么会调用render()，会重新渲染所有子组件。但是如果变量改变的某个值与某子组件并不相关，如果此时也重新渲染该子组件会造成性能上的浪费。为了解决这个情况，可以在子组件中的shouldcomponentupdate生命周期函数中，做以下操作:\n\nshouldcomponentupdate(nextprops,nextstates){\n  //判断xxx值是否相同，如果相同则不进行重新渲染\n  return (nextprops.xxx !== this.props.xxx); //注意是 !== 而不是 !=\n}\n\n\n还可以让组件继承由react.component改为react.purecomponent，react会自动帮我们在shouldcomponentupdate生命周期函数中做浅对比。\n\n如果是函数组件，则在子组件导出时，使用react.memo()进行包裹，同时结合usecallback来阻止无谓的渲染，实现提高性能。\n\n\n# react中设置样式的几种形式\n\n# 第一种：引用外部css样式\n\n伪代码示例：\n\nimport from \'./xxx.css\';  \nreturn <div classname=\'xxx\' /\\>\n\n\n注意：在jsx语法中，使用驼峰命名。例如原生html中的classname需要改成classname、background-color要改成backgroundcolor。\n\n# 第二种：内部样式\n\n伪代码示例：\n\nreturn <div style={{backgroundcolor:\'green\',width:\'100px\'}} /\\>  \n\n\n注意：内联样式值为一个对象，对象属性之间用","分割而不是原生html中的";"。\n因为是一个对象，因此下面代码也是可行的：\nconst mystyle = {backgroundcolor:\'green\',width:\'100px\'}; return <div style={mystyle} />\n\n\n# hook用法\n\nhook是react16.8以上版本才出现的新特性，可以在函数组件中使用组件生命周期函数，且颗粒度更加细致。\n\n可以把hook逻辑从组件中抽离出来，多个组件可以共享该hook逻辑。\n\n请注意hook本质上是为了解决组件之间共享逻辑，并不是单纯为了解决组件之间共享数据。\n\nhook表现出来特别像一个普通的js函数(仅仅是表现出来但绝不是真的普通js函数)。',charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"21 React扩展阅读",frontmatter:{title:"21 React扩展阅读",date:"2023-09-19T08:58:27.000Z",permalink:"/pages/89216e/"},regularPath:"/03.react/21.React%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB.html",relativePath:"03.react/21.React扩展阅读.md",key:"v-5d36b894",path:"/pages/89216e/",headers:[{level:4,title:"Youtube中Codevolution专栏下的React Hooks Tutorial系列视频",slug:"youtube中codevolution专栏下的react-hooks-tutorial系列视频",normalizedTitle:"youtube中codevolution专栏下的react hooks tutorial系列视频",charIndex:15},{level:4,title:"自定义 Hook 大全",slug:"自定义-hook-大全",normalizedTitle:"自定义 hook 大全",charIndex:128},{level:4,title:"React技术揭秘",slug:"react技术揭秘",normalizedTitle:"react技术揭秘",charIndex:213},{level:4,title:"阿里 ahooks 工具库",slug:"阿里-ahooks-工具库",normalizedTitle:"阿里 ahooks 工具库",charIndex:273},{level:4,title:"网易云音乐前端团队 React Hooks 最佳实践",slug:"网易云音乐前端团队-react-hooks-最佳实践",normalizedTitle:"网易云音乐前端团队 react hooks 最佳实践",charIndex:361},{level:4,title:"React 300问",slug:"react-300问",normalizedTitle:"react 300问",charIndex:469},{level:4,title:"阿里推出的React框架：antd",slug:"阿里推出的react框架-antd",normalizedTitle:"阿里推出的react框架：antd",charIndex:559},{level:4,title:"京东推出的多端统一开发框架：taro",slug:"京东推出的多端统一开发框架-taro",normalizedTitle:"京东推出的多端统一开发框架：taro",charIndex:648},{level:4,title:"学习React的几个好的微信公众号",slug:"学习react的几个好的微信公众号",normalizedTitle:"学习react的几个好的微信公众号",charIndex:731}],headersStr:"Youtube中Codevolution专栏下的React Hooks Tutorial系列视频 自定义 Hook 大全 React技术揭秘 阿里 ahooks 工具库 网易云音乐前端团队 React Hooks 最佳实践 React 300问 阿里推出的React框架：antd 京东推出的多端统一开发框架：taro 学习React的几个好的微信公众号",content:"# React扩展阅读\n\n# Youtube中Codevolution专栏下的React Hooks Tutorial系列视频\n\n链接：https://pan.baidu.com/s/1Lj_kN-FuO5bbZ2rqMVz6xw\n提取码：70ni\n\n# 自定义 Hook 大全\n\n必不可少的 React Hooks集合。\nhttps://github.com/zenghongtu/react-use-chinese\n\n# React技术揭秘\n\n卡颂写的 React 源码分析。\nhttps://react.iamkasong.com/\n\n# 阿里 ahooks 工具库\n\n蚂蚁umi团队、淘系ice团队、阿里体育共同建设的 React Hooks 工具库\nhttps://ahooks.js.org/zh-CN\n\n# 网易云音乐前端团队 React Hooks 最佳实践\n\n实际项目中总结出的 React Hooks 实用经验\nhttps://mp.weixin.qq.com/s/HwlnvAh18saKwXC_nZwSHw\n\n# React 300问\n\nReact 300多道面试题和答案\nhttps://github.com/semlinker/reactjs-interview-questions\n\n# 阿里推出的React框架：antd\n\nantd 4.0版本全部采用函数组件开发而成。\nhttps://ant.design/docs/react/introduce-cn\n\n# 京东推出的多端统一开发框架：taro\n\nTaro是一套遵循React语法规范的多端开发解决方案。\nhttps://taro-docs.jd.com/taro/\n\n# 学习React的几个好的微信公众号\n\nReact中文社区、不知非攻、魔术师卡颂",normalizedContent:"# react扩展阅读\n\n# youtube中codevolution专栏下的react hooks tutorial系列视频\n\n链接：https://pan.baidu.com/s/1lj_kn-fuo5bbz2rqmvz6xw\n提取码：70ni\n\n# 自定义 hook 大全\n\n必不可少的 react hooks集合。\nhttps://github.com/zenghongtu/react-use-chinese\n\n# react技术揭秘\n\n卡颂写的 react 源码分析。\nhttps://react.iamkasong.com/\n\n# 阿里 ahooks 工具库\n\n蚂蚁umi团队、淘系ice团队、阿里体育共同建设的 react hooks 工具库\nhttps://ahooks.js.org/zh-cn\n\n# 网易云音乐前端团队 react hooks 最佳实践\n\n实际项目中总结出的 react hooks 实用经验\nhttps://mp.weixin.qq.com/s/hwlnvah18sakwxc_nzwshw\n\n# react 300问\n\nreact 300多道面试题和答案\nhttps://github.com/semlinker/reactjs-interview-questions\n\n# 阿里推出的react框架：antd\n\nantd 4.0版本全部采用函数组件开发而成。\nhttps://ant.design/docs/react/introduce-cn\n\n# 京东推出的多端统一开发框架：taro\n\ntaro是一套遵循react语法规范的多端开发解决方案。\nhttps://taro-docs.jd.com/taro/\n\n# 学习react的几个好的微信公众号\n\nreact中文社区、不知非攻、魔术师卡颂",charsets:{cjk:!0},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"博客文章",frontmatter:{archivesPage:!0,title:"博客文章",permalink:"/blog/",article:!1},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-53104ef6",path:"/blog/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3},{title:"Home",frontmatter:{home:!0,heroImage:"/img/logo.jpg",heroText:"知识管理平台",tagline:"🚀知识分享平台",actionText:"开始使用 →",actionLink:"/pages/a2f161/",bannerBg:"none",features:[{title:"知识管理和分享",details:"包含三种典型的知识管理形态：结构化、碎片化、体系化。轻松打造属于你自己的知识管理平台"},{title:"简洁高效",details:"以 Markdown 为中心的项目结构，内置自动化工具，以更少的配置完成更多的事。配合多维索引快速定位每个知识点"},{title:"沉浸式阅读",details:"专为阅读设计的UI，配合多种颜色模式、可关闭的侧边栏和导航栏，带给你一种沉浸式阅读体验"}],postList:"none"},regularPath:"/",relativePath:"index.md",key:"v-a113e2c4",path:"/",headersStr:null,content:"\n\n\n",normalizedContent:"\n\n\n",charsets:{},lastUpdated:"2023-09-19, 09:20:46",lastUpdatedTimestamp:1695086446e3}],themeConfig:{nav:[{text:"首页",link:"/"},{text:"rust",link:"/pages/9088dd/",items:[]},{text:"go",link:"/pages/b63bcd/",items:[]},{text:"react",link:"/pages/dfd26d/",items:[]}],sidebarDepth:2,logo:"/img/logo.jpg",searchMaxSuggestions:10,lastUpdated:"上次更新",sidebar:{"/01.rust/":[{title:"tauri",collapsable:!1,children:[["01.tauri/01.解决 Rust Tauri 1.0 构建时下载 WiX失败.md","解决 Rust Tauri 1.0 构建时下载 WiX失败","/pages/9088dd/"]]}],catalogue:{},"/02.go/":[{title:"开发环境",collapsable:!1,children:[["01.开发环境/01.Go 配置 VS code 启动.md","Go 配置 VS code 启动","/pages/b63bcd/"],["01.开发环境/02.windows系统中VS code未识别nodejs cmdlet错误.md","windows系统中VS code未识别nodejs cmdlet错误","/pages/8ce629/"]]}],"/03.react/":[["01.React Hook 简介.md","01 React Hook 简介","/pages/dfd26d/"],["02.useState基础用法.md","02 useState基础用法","/pages/b364c0/"],["03.useState高级用法.md","03 useState高级用法","/pages/0e215c/"],["04.useEffect基础用法.md","04 useEffect基础用法","/pages/16dc88/"],["05.useEffect高级用法.md","05 useEffect高级用法","/pages/b9c039/"],["06.useContext基础用法.md","06 useContext基础用法","/pages/fd14d7/"],["07.useContext高级用法.md","07 useContext高级用法","/pages/15da39/"],["08.useReducer基础用法.md","08 useReducer基础用法","/pages/ab6774/"],["09.useReducer高级用法.md","09 useReducer高级用法","/pages/fd7fdb/"],["10.useCallback基础用法.md","10 useCallback基础用法","/pages/9d19f1/"],["11.useMemo基础用法.md","11 useMemo基础用法","/pages/8b008f/"],["12.useRef基础用法.md","12 useRef基础用法","/pages/4c9695/"],["13.useImperativeHandle基础用法.md","13 useImperativeHandle基础用法","/pages/ede426/"],["14.useLayoutEffect基础用法.md","14 useLayoutEffect基础用法","/pages/1b392f/"],["15.useDebugValue基础用法.md","15 useDebugValue基础用法","/pages/e1ebef/"],["16.自定义hook.md","16 自定义hook","/pages/c38877/"],["17.React Hook 总结.md","17 React Hook 总结","/pages/621c1c/"],["18.示例：React使用Echarts所用到的hooks.md","18 示例：React使用Echarts所用到的hooks","/pages/a44117/"],["19.useTransition基础用法.md","19 useTransition基础用法","/pages/74a184/"],["20.React基础知识.md","20 React基础知识","/pages/0116b5/"],["21.React扩展阅读.md","21 React扩展阅读","/pages/89216e/"]]},updateBar:{showToArticle:!1},pageStyle:"line",category:!1,tag:!1,author:{name:"Allen",href:"//github.183.co"},social:{icons:[{iconClass:"icon-youjian",title:"发邮件",link:"mailto:allen@183.co"},{iconClass:"icon-github",title:"GitHub",link:"//github.183.co"},{iconClass:"icon-erji",title:"听音乐",link:"https://i.y.qq.com/n2/m/share/details/taoge.html?id=8424326180&hosteuin="}]},footer:{createYear:2023,copyrightInfo:"Allen | MIT License"},htmlModules:{pageT:'\n    <div class="wwads-cn wwads-horizontal page-wwads" data-id="136"></div>\n    <style>\n      .page-wwads{\n        width:100%!important;\n        min-height: 0;\n        margin: 0;\n      }\n      .page-wwads .wwads-img img{\n        width:80px!important;\n      }\n      .page-wwads .wwads-poweredby{\n        width: 40px;\n        position: absolute;\n        right: 25px;\n        bottom: 3px;\n      }\n      .wwads-content .wwads-text, .page-wwads .wwads-text{\n        height: 100%;\n        padding-top: 5px;\n        display: block;\n      }\n  </style>\n  '}}};var _c=t(94),wc=t(95),Cc=t(11);var Rc={computed:{$filterPosts(){return this.$site.pages.filter(e=>{const{frontmatter:{pageComponent:n,article:t,home:o}}=e;return!(n||!1===t||!0===o)})},$sortPosts(){return(e=this.$filterPosts).sort((e,n)=>{const t=e.frontmatter.sticky,o=n.frontmatter.sticky;return t&&o?t==o?Object(Cc.a)(e,n):t-o:t&&!o?-1:!t&&o?1:Object(Cc.a)(e,n)}),e;var e},$sortPostsByDate(){return(e=this.$filterPosts).sort((e,n)=>Object(Cc.a)(e,n)),e;var e},$groupPosts(){return function(e){const n={},t={};for(let o=0,r=e.length;o<r;o++){const{frontmatter:{categories:r,tags:a}}=e[o];"array"===Object(Cc.n)(r)&&r.forEach(t=>{t&&(n[t]||(n[t]=[]),n[t].push(e[o]))}),"array"===Object(Cc.n)(a)&&a.forEach(n=>{n&&(t[n]||(t[n]=[]),t[n].push(e[o]))})}return{categories:n,tags:t}}(this.$sortPosts)},$categoriesAndTags(){return function(e){const n=[],t=[];for(let t in e.categories)n.push({key:t,length:e.categories[t].length});for(let n in e.tags)t.push({key:n,length:e.tags[n].length});return{categories:n,tags:t}}(this.$groupPosts)}}};Wt.component(_c.default),Wt.component(wc.default);function jc(e){return e.toString().padStart(2,"0")}t(243);Wt.component("Badge",()=>Promise.all([t.e(0),t.e(3)]).then(t.bind(null,345))),Wt.component("CodeBlock",()=>Promise.resolve().then(t.bind(null,94))),Wt.component("CodeGroup",()=>Promise.resolve().then(t.bind(null,95)));t(244);var Sc=[({Vue:e,options:n,router:t,siteData:o,isServer:r})=>{r||t.afterEach(()=>{var e;e=function(){setTimeout((function(){void 0===window._AdBlockInit&&function(){const e=document.getElementsByClassName("wwads-cn"),n=document.querySelector(".wwads-content");e[0]&&!n&&(e[0].innerHTML="<style>.wwads-horizontal,.wwads-vertical{background-color:#f4f8fa;padding:5px;min-height:120px;margin-top:20px;box-sizing:border-box;border-radius:3px;font-family:sans-serif;display:flex;min-width:150px;position:relative;overflow:hidden;}.wwads-horizontal{flex-wrap:wrap;justify-content:center}.wwads-vertical{flex-direction:column;align-items:center;padding-bottom:32px}.wwads-horizontal a,.wwads-vertical a{text-decoration:none}.wwads-horizontal .wwads-img,.wwads-vertical .wwads-img{margin:5px}.wwads-horizontal .wwads-content,.wwads-vertical .wwads-content{margin:5px}.wwads-horizontal .wwads-content{flex:130px}.wwads-vertical .wwads-content{margin-top:10px}.wwads-horizontal .wwads-text,.wwads-content .wwads-text{font-size:14px;line-height:1.4;color:#0e1011;-webkit-font-smoothing:antialiased}.wwads-horizontal .wwads-poweredby,.wwads-vertical .wwads-poweredby{display:block;font-size:11px;color:#a6b7bf;margin-top:1em}.wwads-vertical .wwads-poweredby{position:absolute;left:10px;bottom:10px}.wwads-horizontal .wwads-poweredby span,.wwads-vertical .wwads-poweredby span{transition:all 0.2s ease-in-out;margin-left:-1em}.wwads-horizontal .wwads-poweredby span:first-child,.wwads-vertical .wwads-poweredby span:first-child{opacity:0}.wwads-horizontal:hover .wwads-poweredby span,.wwads-vertical:hover .wwads-poweredby span{opacity:1;margin-left:0}.wwads-horizontal .wwads-hide,.wwads-vertical .wwads-hide{position:absolute;right:-23px;bottom:-23px;width:46px;height:46px;border-radius:23px;transition:all 0.3s ease-in-out;cursor:pointer;}.wwads-horizontal .wwads-hide:hover,.wwads-vertical .wwads-hide:hover{background:rgb(0 0 0 /0.05)}.wwads-horizontal .wwads-hide svg,.wwads-vertical .wwads-hide svg{position:absolute;left:10px;top:10px;fill:#a6b7bf}.wwads-horizontal .wwads-hide:hover svg,.wwads-vertical .wwads-hide:hover svg{fill:#3E4546}</style><a href='https://wwads.cn/page/whitelist-wwads' class='wwads-img' target='_blank' rel='nofollow'><img src='https://fastly.jsdelivr.net/gh/xugaoyi/image_store@master/blog/wwads.2a3pidhlh4ys.webp' width='130'></a><div class='wwads-content'><a href='https://wwads.cn/page/whitelist-wwads' class='wwads-text' target='_blank' rel='nofollow'>为了本站的长期运营，请将我们的网站加入广告拦截器的白名单，感谢您的支持！<span style='color: #11a8cd'>如何添加白名单?</span></a><a href='https://wwads.cn/page/end-user-privacy' class='wwads-poweredby' title='万维广告 ～ 让广告更优雅，且有用' target='_blank'><span>广告</span></a></div><a class='wwads-hide' onclick='parentNode.remove()' title='隐藏广告'><svg xmlns='http://www.w3.org/2000/svg' width='6' height='7'><path d='M.879.672L3 2.793 5.121.672a.5.5 0 11.707.707L3.708 3.5l2.12 2.121a.5.5 0 11-.707.707l-2.12-2.12-2.122 2.12a.5.5 0 11-.707-.707l2.121-2.12L.172 1.378A.5.5 0 01.879.672z'></path></svg></a>")}()}),3e3)},"complete"===document.readyState||"interactive"===document.readyState?setTimeout(e,1):document.addEventListener("DOMContentLoaded",e),setTimeout(()=>{const e=document.querySelector(".page-wwads");if(!e)return;const n=e.querySelector(".wwads-hide");n&&(n.onclick=()=>{e.style.display="none"}),"none"===e.style.display&&(e.style.display="flex")},900)})},({Vue:e,options:n,router:t,siteData:o})=>{o.pages.map(e=>{const{frontmatter:{date:n,author:t}}=e;"string"==typeof n&&"Z"===n.charAt(n.length-1)&&(e.frontmatter.date=function(e){e instanceof Date||(e=new Date(e));return`${e.getUTCFullYear()}-${jc(e.getUTCMonth()+1)}-${jc(e.getUTCDate())} ${jc(e.getUTCHours())}:${jc(e.getUTCMinutes())}:${jc(e.getUTCSeconds())}`}(n)),t?e.author=t:o.themeConfig.author&&(e.author=o.themeConfig.author)}),e.mixin(Rc)},{},({Vue:e})=>{e.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({router:e})=>{"undefined"!=typeof window&&(window._hmt=window._hmt||[],function(){var e=document.createElement("script");e.src="https://hm.baidu.com/hm.js?bd7cf65356cd0d474d6bd042a5d98dbc";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)}(),e.afterEach((function(e){_hmt.push(["_trackPageview",e.fullPath])})))},({router:e})=>{var n,t,o,r,a,s;"undefined"!=typeof window&&(n=window,t=document,o="script",r="ga",n.GoogleAnalyticsObject=r,n.ga=n.ga||function(){(n.ga.q=n.ga.q||[]).push(arguments)},n.ga.l=1*new Date,a=t.createElement(o),s=t.getElementsByTagName(o)[0],a.async=1,a.src="https://www.google-analytics.com/analytics.js",s.parentNode.insertBefore(a,s),ga("create","UA-284335860-1","auto"),ga("set","anonymizeIp",!0),e.afterEach((function(n){ga("set","page",e.app.$withBase(n.fullPath)),ga("send","pageview")})))}],Tc=[];class Ec extends class{constructor(){this.store=new Wt({data:{state:{}}})}$get(e){return this.store.state[e]}$set(e,n){Wt.set(this.store.state,e,n)}$emit(...e){this.store.$emit(...e)}$on(...e){this.store.$on(...e)}}{}Object.assign(Ec.prototype,{getPageAsyncComponent:ii,getLayoutAsyncComponent:ci,getAsyncComponent:ui,getVueComponent:li});var Oc={install(e){const n=new Ec;e.$vuepress=n,e.prototype.$vuepress=n}};function Ic(e,n){const t=n.toLowerCase();return e.options.routes.some(e=>e.path.toLowerCase()===t)}var Ac={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(e){const n=this.pageKey||this.$parent.$page.key;return pi("pageKey",n),Wt.component(n)||Wt.component(n,ii(n)),Wt.component(n)?e(n):e("")}},$c={functional:!0,props:{slotKey:String,required:!0},render:(e,{props:n,slots:t})=>e("div",{class:["content__"+n.slotKey]},t()[n.slotKey])},Dc={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},zc=(t(245),t(246),Object(gc.a)(Dc,(function(){var e=this._self._c;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),Mc={functional:!0,render(e,{parent:n,children:t}){if(n._isMounted)return t;n.$once("hook:mounted",()=>{n.$forceUpdate()})}};Wt.config.productionTip=!1,Wt.use(qs),Wt.use(Oc),Wt.mixin(function(e,n,t=Wt){!function(e){e.locales&&Object.keys(e.locales).forEach(n=>{e.locales[n].path=n});Object.freeze(e)}(n),t.$vuepress.$set("siteData",n);const o=new(e(t.$vuepress.$get("siteData"))),r=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),a={};return Object.keys(r).reduce((e,n)=>(n.startsWith("$")&&(e[n]=r[n].get),e),a),{computed:a}}(e=>class{setPage(e){this.__page=e}get $site(){return e}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:e={}}=this.$site;let n,t;for(const o in e)"/"===o?t=e[o]:0===this.$page.path.indexOf(o)&&(n=e[o]);return n||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:e}=this.$page.frontmatter;return"string"==typeof e&&e}get $title(){const e=this.$page,{metaTitle:n}=this.$page.frontmatter;if("string"==typeof n)return n;const t=this.$siteTitle,o=e.frontmatter.home?null:e.frontmatter.title||e.title;return t?o?o+" | "+t:t:o||"VuePress"}get $description(){const e=function(e){if(e){const n=e.filter(e=>"description"===e.name)[0];if(n)return n.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(e,n){for(let t=0;t<e.length;t++){const o=e[t];if(o.path.toLowerCase()===n.toLowerCase())return o}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},kc)),Wt.component("Content",Ac),Wt.component("ContentSlotsDistributor",$c),Wt.component("OutboundLink",zc),Wt.component("ClientOnly",Mc),Wt.component("Layout",ci("Layout")),Wt.component("NotFound",ci("NotFound")),Wt.prototype.$withBase=function(e){const n=this.$site.base;return"/"===e.charAt(0)?n+e.slice(1):e},window.__VUEPRESS__={version:"1.9.2",hash:"7ba691d"},async function(e){const n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:kc.routerBase||kc.base,t=new qs({base:n,mode:"history",fallback:!1,routes:yc,scrollBehavior:(e,n,t)=>t||(e.hash?!Wt.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})});!function(e){e.beforeEach((n,t,o)=>{if(Ic(e,n.path))o();else if(/(\/|\.html)$/.test(n.path))if(/\/$/.test(n.path)){const t=n.path.replace(/\/$/,"")+".html";Ic(e,t)?o(t):o()}else o();else{const t=n.path+"/",r=n.path+".html";Ic(e,r)?o(r):Ic(e,t)?o(t):o()}})}(t);const o={};try{await Promise.all(Sc.filter(e=>"function"==typeof e).map(n=>n({Vue:Wt,options:o,router:t,siteData:kc,isServer:e})))}catch(e){console.error(e)}return{app:new Wt(Object.assign(o,{router:t,render:e=>e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},Tc.map(n=>e(n)))])})),router:t}}(!1).then(({app:e,router:n})=>{n.onReady(()=>{e.$mount("#app")})})}]);