<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 热爱生活与梦想</title><link>https://chn.gg/post/</link><description>Recent content in Posts on 热爱生活与梦想</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 04 Jun 2024 09:12:25 +0800</lastBuildDate><atom:link href="https://chn.gg/post/rss.xml" rel="self" type="application/rss+xml"/><item><title>Gorm中修改mysql主键的方法</title><link>https://chn.gg/post/go/gorm%E4%B8%AD%E4%BF%AE%E6%94%B9mysql%E4%B8%BB%E9%94%AE%E7%9A%84%E6%96%B9%E6%B3%95/</link><pubDate>Tue, 04 Jun 2024 09:12:25 +0800</pubDate><guid>https://chn.gg/post/go/gorm%E4%B8%AD%E4%BF%AE%E6%94%B9mysql%E4%B8%BB%E9%94%AE%E7%9A%84%E6%96%B9%E6%B3%95/</guid><description>&lt;h3 id="一为什么要修改mysql主键策略">一、为什么要修改mysql主键策略
&lt;a class="header-anchor" href="#%e4%b8%80%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e4%bf%ae%e6%94%b9mysql%e4%b8%bb%e9%94%ae%e7%ad%96%e7%95%a5">&lt;/a>
&lt;/h3>&lt;p>1、我们创建mysql数据表的时候正常操作都是采用id自增类型,但是往往会造成以下几个问题
让别人可以猜到你数据库的数据量多少,甚至可以根据当前看到的id可以手动的修改浏览器上id来访问下一条数据
如果分表后会造成主键id是一样的
2、正常的做法可以修改mysql主键策略
直接使用uuid来作为主键,但是这样不好的地方是无序的,不会根据从前往后排列
使用雪花算法生成一个唯一的id&lt;/p></description></item><item><title>Golang拉取Github私有库的姿势</title><link>https://chn.gg/post/go/golang%E6%8B%89%E5%8F%96github%E7%A7%81%E6%9C%89%E5%BA%93%E7%9A%84%E5%A7%BF%E5%8A%BF/</link><pubDate>Mon, 13 May 2024 15:27:56 +0800</pubDate><guid>https://chn.gg/post/go/golang%E6%8B%89%E5%8F%96github%E7%A7%81%E6%9C%89%E5%BA%93%E7%9A%84%E5%A7%BF%E5%8A%BF/</guid><description>&lt;p>我们的 Go 项目拉取依赖时,默认使用的是 https 协议的 git clone 。因此当你的 Golang 项目位于 Github 的私有仓库时,而你本地的项目又依赖这个私有库,此时你应当先设置SSH 保证 Git 能无密码拉取到该依赖&lt;/p></description></item><item><title>Windows下配置多个git账号的ssh</title><link>https://chn.gg/post/git/windows%E4%B8%8B%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAgit%E8%B4%A6%E5%8F%B7%E7%9A%84ssh/</link><pubDate>Mon, 13 May 2024 15:19:33 +0800</pubDate><guid>https://chn.gg/post/git/windows%E4%B8%8B%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAgit%E8%B4%A6%E5%8F%B7%E7%9A%84ssh/</guid><description>&lt;p>由于笔者使用多个git网站，所以需要配置多个ssh，以下我们来配置多个ssh。&lt;/p></description></item><item><title>Npm私有仓库搭建——Verdaccio</title><link>https://chn.gg/post/node/npm%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E6%90%AD%E5%BB%BAverdaccio/</link><pubDate>Mon, 29 Apr 2024 10:49:52 +0800</pubDate><guid>https://chn.gg/post/node/npm%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E6%90%AD%E5%BB%BAverdaccio/</guid><description>&lt;p>众所周知，每家公司都有可能需要发布自己的私有仓库，所以要将包发布到内网而不是发布到npm的公共注册表，以下使用**&lt;code>verdaccio&lt;/code>**，搭建一个简单的私有npm仓库。&lt;/p></description></item><item><title>WeRead2Notion Pro使用文档</title><link>https://chn.gg/post/tool/weread2notion-pro%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</link><pubDate>Wed, 27 Mar 2024 13:35:45 +0800</pubDate><guid>https://chn.gg/post/tool/weread2notion-pro%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</guid><description>&lt;p>WeRead2Notion-Pro使用文档&lt;/p></description></item><item><title>基于GithubAction自动构建Hugo博客</title><link>https://chn.gg/post/tool/%E5%9F%BA%E4%BA%8Egithubaction%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BAhugo%E5%8D%9A%E5%AE%A2/</link><pubDate>Wed, 27 Mar 2024 10:58:04 +0800</pubDate><guid>https://chn.gg/post/tool/%E5%9F%BA%E4%BA%8Egithubaction%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BAhugo%E5%8D%9A%E5%AE%A2/</guid><description>&lt;p>本文主要记录了如何配置 Github Action 实现 Hugo 博客自动部署。&lt;/p></description></item><item><title>Hugo博客引入Giscus评论系统</title><link>https://chn.gg/post/tool/hugo%E5%8D%9A%E5%AE%A2%E5%BC%95%E5%85%A5giscus%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</link><pubDate>Wed, 27 Mar 2024 10:04:12 +0800</pubDate><guid>https://chn.gg/post/tool/hugo%E5%8D%9A%E5%AE%A2%E5%BC%95%E5%85%A5giscus%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</guid><description>&lt;p>Hugo博客引入Giscus评论系统&lt;/p></description></item><item><title>Giscus的基础设置</title><link>https://chn.gg/post/tool/giscus%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE/</link><pubDate>Wed, 27 Mar 2024 09:47:42 +0800</pubDate><guid>https://chn.gg/post/tool/giscus%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE/</guid><description>&lt;p>Giscus的基础设置&lt;/p></description></item><item><title>无服务器自建短链服务Url Shorten Worker完整的部署教程</title><link>https://chn.gg/post/tool/%E6%97%A0%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%87%AA%E5%BB%BA%E7%9F%AD%E9%93%BE%E6%9C%8D%E5%8A%A1url-shorten-worker%E5%AE%8C%E6%95%B4%E7%9A%84%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/</link><pubDate>Tue, 19 Mar 2024 11:01:48 +0800</pubDate><guid>https://chn.gg/post/tool/%E6%97%A0%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%87%AA%E5%BB%BA%E7%9F%AD%E9%93%BE%E6%9C%8D%E5%8A%A1url-shorten-worker%E5%AE%8C%E6%95%B4%E7%9A%84%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/</guid><description>&lt;p>无服务器自建短链服务Url-Shorten-Worker完整的部署教程&lt;/p></description></item><item><title>解决 Rust Tauri 1.0 构建时下载 WiX失败</title><link>https://chn.gg/post/rust/01.%E8%A7%A3%E5%86%B3-rust-tauri-1.0-%E6%9E%84%E5%BB%BA%E6%97%B6%E4%B8%8B%E8%BD%BD-wix%E5%A4%B1%E8%B4%A5/</link><pubDate>Fri, 01 Mar 2024 09:31:28 +0000</pubDate><guid>https://chn.gg/post/rust/01.%E8%A7%A3%E5%86%B3-rust-tauri-1.0-%E6%9E%84%E5%BB%BA%E6%97%B6%E4%B8%8B%E8%BD%BD-wix%E5%A4%B1%E8%B4%A5/</guid><description>Windows 的安装器 WiX 的下载失败上： 外层的代理对命令行又不生效，最好的方式是把这个 WiX 包在浏览器下载完，然后放在 Tauri 需要的地方，让它直接使用，避免再在命令</description></item><item><title>21 React扩展阅读</title><link>https://chn.gg/post/react/21.react%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB/</link><pubDate>Tue, 19 Sep 2023 08:58:27 +0000</pubDate><guid>https://chn.gg/post/react/21.react%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB/</guid><description>React扩展阅读 Youtube中Codevolution专栏下的React Hooks Tutorial系列视频 链接： https://pan.baidu.com/s/1Lj_kN-FuO5bbZ2rqMVz6xw 提取码：70ni 自定义 Hook 大全 必</description></item><item><title>20 React基础知识</title><link>https://chn.gg/post/react/20.react%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link><pubDate>Tue, 19 Sep 2023 08:57:56 +0000</pubDate><guid>https://chn.gg/post/react/20.react%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid><description>React基础知识 说明：以下这些基础知识适用于类组件和函数组件，并不是函数组件独有的。 安装react并初始化 1、安装：npm install -g create-react-app 2、创建h</description></item><item><title>19 useTransition基础用法</title><link>https://chn.gg/post/react/19.usetransition%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</link><pubDate>Mon, 18 Sep 2023 16:45:22 +0000</pubDate><guid>https://chn.gg/post/react/19.usetransition%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</guid><description>19 useTransition基础用法 useTransition概念介绍 react提供了useDeferredValue发挥类似防抖节流的作用</description></item><item><title>18 示例：React使用Echarts所用到的hooks</title><link>https://chn.gg/post/react/18.%E7%A4%BA%E4%BE%8Breact%E4%BD%BF%E7%94%A8echarts%E6%89%80%E7%94%A8%E5%88%B0%E7%9A%84hooks/</link><pubDate>Mon, 18 Sep 2023 16:43:57 +0000</pubDate><guid>https://chn.gg/post/react/18.%E7%A4%BA%E4%BE%8Breact%E4%BD%BF%E7%94%A8echarts%E6%89%80%E7%94%A8%E5%88%B0%E7%9A%84hooks/</guid><description>18 示例：React使用Echarts所用到的hooks 本篇文章写于 2020年11月13日，距离前面文章已经过去半年，因此本文的讲述风格和示例</description></item><item><title>17 React Hook 总结</title><link>https://chn.gg/post/react/17.react-hook-%E6%80%BB%E7%BB%93/</link><pubDate>Mon, 18 Sep 2023 16:40:25 +0000</pubDate><guid>https://chn.gg/post/react/17.react-hook-%E6%80%BB%E7%BB%93/</guid><description>17 React Hook 总结 首先，对你能够坚持到现在，表示深深的赞扬，学习React Hook之路不容易。 我们快速的回顾一下之前学习过的各个hook。 react hook 回顾 定</description></item><item><title>16 自定义hook</title><link>https://chn.gg/post/react/16.%E8%87%AA%E5%AE%9A%E4%B9%89hook/</link><pubDate>Mon, 18 Sep 2023 16:40:07 +0000</pubDate><guid>https://chn.gg/post/react/16.%E8%87%AA%E5%AE%9A%E4%B9%89hook/</guid><description>16 自定义hook 自定义hook概念解释 像useState、useEffect、useContext、useReducer、useCallba</description></item><item><title>15 useDebugValue基础用法</title><link>https://chn.gg/post/react/15.usedebugvalue%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</link><pubDate>Mon, 18 Sep 2023 16:01:07 +0000</pubDate><guid>https://chn.gg/post/react/15.usedebugvalue%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</guid><description>15 useDebugValue基础用法 useDebugValue概念解释 我们第十个要学习的Hook(钩子函数)是useDebugValue，他</description></item><item><title>14 useLayoutEffect基础用法</title><link>https://chn.gg/post/react/14.uselayouteffect%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</link><pubDate>Mon, 18 Sep 2023 15:57:04 +0000</pubDate><guid>https://chn.gg/post/react/14.uselayouteffect%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</guid><description>14 useLayoutEffect基础用法 useLayoutEffect概念解释 我们第九个要学习的Hook(钩子函数)是useLayoutEf</description></item><item><title>13 useImperativeHandle基础用法</title><link>https://chn.gg/post/react/13.useimperativehandle%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</link><pubDate>Wed, 13 Sep 2023 14:48:20 +0000</pubDate><guid>https://chn.gg/post/react/13.useimperativehandle%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</guid><description>13 useImperativeHandle基础用法 useImperativeHandle概念解释 我们第八个要学习的Hook(钩子函数)是use</description></item><item><title>12 useRef基础用法</title><link>https://chn.gg/post/react/12.useref%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</link><pubDate>Tue, 12 Sep 2023 14:48:15 +0000</pubDate><guid>https://chn.gg/post/react/12.useref%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</guid><description>12 useRef基础用法 useRef概念解释 我们第七个要学习的Hook(钩子函数)是useRef，他的作用是“勾住”某些组件挂载完成或重新渲染</description></item><item><title>11 useMemo基础用法</title><link>https://chn.gg/post/react/11.usememo%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</link><pubDate>Tue, 12 Sep 2023 09:41:43 +0000</pubDate><guid>https://chn.gg/post/react/11.usememo%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</guid><description>11 useMemo基础用法 useMemo概念解释 我们第六个要学习的Hook(钩子函数)是useMemo，他的作用是“勾住”组件中某些处理函数的</description></item><item><title>10 useCallback基础用法</title><link>https://chn.gg/post/react/10.usecallback%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</link><pubDate>Mon, 11 Sep 2023 15:22:43 +0000</pubDate><guid>https://chn.gg/post/react/10.usecallback%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</guid><description>10 useCallback基础用法 useCallback概念解释 我们第五个要学习的Hook(钩子函数)是useCallback，他的作用是“勾</description></item><item><title>09 useReducer高级用法</title><link>https://chn.gg/post/react/09.usereducer%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</link><pubDate>Thu, 07 Sep 2023 17:37:05 +0000</pubDate><guid>https://chn.gg/post/react/09.usereducer%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</guid><description>09 useReducer高级用法 所谓高级用法，只不过是一些深层知识点和实用技巧，你甚至可以把本章当做对前面知识点的一个巩固和学习。 使用useR</description></item><item><title>08 useReducer基础用法</title><link>https://chn.gg/post/react/08.usereducer%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</link><pubDate>Thu, 07 Sep 2023 17:36:58 +0000</pubDate><guid>https://chn.gg/post/react/08.usereducer%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</guid><description>08 useReducer基础用法 useReducer概念解释 我们第四个要学习的Hook(钩子函数)是useReducer，他的作用是“勾住”某</description></item><item><title>07 useContext高级用法</title><link>https://chn.gg/post/react/07.usecontext%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</link><pubDate>Thu, 07 Sep 2023 11:40:56 +0000</pubDate><guid>https://chn.gg/post/react/07.usecontext%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</guid><description>07 useContext高级用法 所谓高级用法，只不过是一些深层知识点和实用技巧，你甚至可以把本章当做对前面知识点的一个巩固和学习。 同时传递多个</description></item><item><title>06 useContext基础用法</title><link>https://chn.gg/post/react/06.usecontext%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</link><pubDate>Thu, 07 Sep 2023 11:40:49 +0000</pubDate><guid>https://chn.gg/post/react/06.usecontext%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</guid><description>06 useContext基础用法 useContext概念解释 我们第三个要学习的Hook(钩子函数)是useContext，他的作用是“勾住”获</description></item><item><title>05 useEffect高级用法</title><link>https://chn.gg/post/react/05.useeffect%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</link><pubDate>Wed, 06 Sep 2023 17:47:16 +0000</pubDate><guid>https://chn.gg/post/react/05.useeffect%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</guid><description>05 useEffect高级用法 所谓高级用法，只不过是一些深层知识点和实用技巧，你甚至可以把本章当做对前面知识点的一个巩固和学习。 让useEff</description></item><item><title>04 useEffect基础用法</title><link>https://chn.gg/post/react/04.useeffect%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</link><pubDate>Wed, 06 Sep 2023 17:47:10 +0000</pubDate><guid>https://chn.gg/post/react/04.useeffect%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</guid><description>04 useEffect基础用法 useEffect概念解释 我们第二个要学习的Hook(钩子函数)是useEffect，他的作用是“勾住”函数组件</description></item><item><title>03 useState高级用法</title><link>https://chn.gg/post/react/03.usestate%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</link><pubDate>Wed, 06 Sep 2023 14:37:11 +0000</pubDate><guid>https://chn.gg/post/react/03.usestate%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</guid><description>03 useState高级用法 所谓高级用法，只不过是一些深层知识点和实用技巧，你甚至可以把本章当做对前面知识点的一个巩固和学习。 恢复默认值 组件需</description></item><item><title>02 useState基础用法</title><link>https://chn.gg/post/react/02.usestate%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</link><pubDate>Wed, 06 Sep 2023 14:37:04 +0000</pubDate><guid>https://chn.gg/post/react/02.usestate%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</guid><description>02 useState基础用法 useState概念解释 我们第一个要学习的Hook(钩子函数)是useState，他的作用是“勾住”函数组件中自定</description></item><item><title>React Hook 简介</title><link>https://chn.gg/post/react/01.react-hook-%E7%AE%80%E4%BB%8B/</link><pubDate>Wed, 06 Sep 2023 14:32:10 +0000</pubDate><guid>https://chn.gg/post/react/01.react-hook-%E7%AE%80%E4%BB%8B/</guid><description>&lt;h1 id="01-react-hook-简介">01 React Hook 简介
&lt;a class="header-anchor" href="#01-react-hook-%e7%ae%80%e4%bb%8b">&lt;/a>
&lt;/h1>&lt;p>首先，欢迎你来学习React Hook，通过本教程你会了解到React Hook工作原理以及我们推荐使用Hook的理由。&lt;/p></description></item><item><title>windows系统中VS code未识别nodejs cmdlet错误</title><link>https://chn.gg/post/go/02.windows%E7%B3%BB%E7%BB%9F%E4%B8%ADvs-code%E6%9C%AA%E8%AF%86%E5%88%ABnodejs-cmdlet%E9%94%99%E8%AF%AF/</link><pubDate>Tue, 16 May 2023 09:05:52 +0000</pubDate><guid>https://chn.gg/post/go/02.windows%E7%B3%BB%E7%BB%9F%E4%B8%ADvs-code%E6%9C%AA%E8%AF%86%E5%88%ABnodejs-cmdlet%E9%94%99%E8%AF%AF/</guid><description>报错 最近笔者在windows使用VS code开发的时候，遇到一个奇怪的问题，在调试代码的过程中，发现通过代码执行VS code的命令命令终端时</description></item><item><title>Go 配置 VS code 启动</title><link>https://chn.gg/post/go/01.go-%E9%85%8D%E7%BD%AE-vs-code-%E5%90%AF%E5%8A%A8/</link><pubDate>Mon, 15 May 2023 20:29:27 +0000</pubDate><guid>https://chn.gg/post/go/01.go-%E9%85%8D%E7%BD%AE-vs-code-%E5%90%AF%E5%8A%A8/</guid><description>最近笔者在学习gokins过程中，最开始的时候，使用goland编译运行，但是后面由于免费试用天数用完就无法使用了，经过比较，还是决定使用V</description></item></channel></rss>